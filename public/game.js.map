{
  "version": 3,
  "sources": ["../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/color.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/math.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/asserts.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/binaryheap.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/dataURL.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/deepEq.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/events.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/log.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/numbers.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/overload.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/runes.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/sets.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/utils/uid.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/data/gamepad.json", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/app/inputBindings.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/app/app.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/app/frame.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/anchor.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/easings.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/navigation.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/navigationmesh.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/math/various.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/bg.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/stack.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/constants.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/texPacker.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/asset.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/utils.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/sprite.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/aseprite.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/font.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/bitmapFont.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/pedit.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/shader.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/sound.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/assets/spriteAtlas.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawRaw.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawPolygon.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawEllipse.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawCircle.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawLine.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawCurve.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawBezier.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/gfx.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/formatText.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawUVQuad.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawFormattedText.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawRect.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawUnscaled.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawInspectText.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawTriangle.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawDebug.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawFrame.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawLoadingScreen.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawStenciled.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawMasked.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawTexture.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawSprite.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawSubstracted.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/draw/drawText.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/gfxApp.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/gfx/viewport.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/utils.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/circle.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/color.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/drawon.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/fadeIn.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/mask.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/opacity.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/outline.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/particles.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/polygon.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/raycast.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/rect.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/shader.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/camera.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/level.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/events/events.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/make.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/game.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/gravity.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/audio/audio.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/audio/playMusic.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/audio/play.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/audio/burp.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/audio/volume.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/initEvents.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/kaboom.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/layers.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/object.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/game/scenes.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/sprite.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/text.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/draw/uvquad.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/level/agent.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/level/navigation.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/level/patrol.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/level/sentry.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/level/tile.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/animate.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/boom.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/health.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/lifespan.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/named.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/state.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/stay.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/textInput.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/misc/timer.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/physics/area.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/physics/body.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/physics/doubleJump.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/physics/effectors.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/anchor.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/fixed.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/follow.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/layer.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/move.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/offscreen.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/pos.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/rotate.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/scale.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/components/transform/z.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/kaplay.ts", "../node_modules/.pnpm/kaplay@4000.0.0-alpha.1/node_modules/kaplay/src/index.ts", "../source/game/scenes/introScene.ts", "../source/game/plugins/wave.ts", "../source/sound.ts", "../source/game/plugins/drag.ts", "../source/game/plugins/dummyShadow.ts", "../source/game/windows/windows-api/openWindowButton.ts", "../source/game/hovers/outsideWindowHover.ts", "../source/game/windows/windows-api/minibuttons.ts", "../source/game/unlockables/unlockablewindows.ts", "../source/game/ascension/cards.ts", "../source/game/plugins/positionSetter.ts", "../source/game/plugins/confetti.ts", "../source/game/hovers/insideWindowHover.ts", "../source/game/windows/store/upgrades.ts", "../source/game/windows/musicWindow.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/dist/(disabled):crypto", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/core.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/x64-core.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/lib-typedarrays.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/enc-utf16.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/enc-base64.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/enc-base64url.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/md5.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha1.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha256.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha224.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha512.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha384.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/sha3.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/ripemd160.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/hmac.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pbkdf2.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/evpkdf.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/cipher-core.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/mode-cfb.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/mode-ctr.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/mode-ctr-gladman.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/mode-ofb.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/mode-ecb.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pad-ansix923.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pad-iso10126.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pad-iso97971.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pad-zeropadding.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/pad-nopadding.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/format-hex.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/aes.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/tripledes.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/rc4.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/rabbit.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/rabbit-legacy.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/blowfish.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/node_modules/.pnpm/crypto-js@4.2.0/node_modules/crypto-js/index.js", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/client.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers/cloud.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers/connect.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers/medal.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers/scoreboard.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/helpers/util.ts", "../node_modules/.pnpm/newgrounds.js@4.0.0-beta.1/node_modules/newgrounds.js/src/main.ts", "../source/env.json", "../source/newgrounds.ts", "../source/game/unlockables/achievements.ts", "../source/game/powerups.ts", "../source/game/ascension/ascension.ts", "../source/game/windows/windows-api/folderObj.ts", "../source/game/windows/store/storeElements.ts", "../source/game/windows/store/storeWindows.ts", "../source/game/windows/settings/settingsWinElements.ts", "../source/game/windows/settings/settingsWindow.ts", "../source/game/windows/ascendWindow.ts", "../source/game/windows/extraWindow.ts", "../source/game/windows/creditsWin.ts", "../source/game/windows/statsWin.ts", "../source/game/windows/medalsWin.ts", "../source/game/plugins/drawDamnShadow.ts", "../source/game/windows/color/colorWindowElements.ts", "../source/game/windows/color/hexColorWindow.ts", "../source/game/windows/color/bgColorWindow.ts", "../source/game/windows/windows-api/windowManaging.ts", "../source/game/additives.ts", "../source/game/utils.ts", "../source/game/uicounters.ts", "../source/game/combo-utils.ts", "../source/game/hexagon.ts", "../source/gamestate.ts", "../source/game/gamescene.ts", "../source/game/scenes/focuscene.ts", "../source/game/scenes/ngScene.ts", "../source/loader.ts", "../source/main.ts"],
  "sourcesContent": ["import { clamp, lerp } from \"./math\";\n\nexport type RGBValue = [number, number, number];\nexport type RGBAValue = [number, number, number, number];\n\n/**\n * 0-255 RGBA color.\n *\n * @group Math\n */\nexport class Color {\n    /** Red (0-255. */\n    r: number = 255;\n    /** Green (0-255). */\n    g: number = 255;\n    /** Blue (0-255). */\n    b: number = 255;\n\n    constructor(r: number, g: number, b: number) {\n        this.r = clamp(r, 0, 255);\n        this.g = clamp(g, 0, 255);\n        this.b = clamp(b, 0, 255);\n    }\n\n    // TODO: Type arr as tuple (no in ts-strict branch yet)\n    static fromArray(arr: number[]) {\n        return new Color(arr[0], arr[1], arr[2]);\n    }\n\n    /**\n     * Create color from hex string or literal.\n     *\n     * @example\n     * ```js\n     * Color.fromHex(0xfcef8d)\n     * Color.fromHex(\"#5ba675\")\n     * Color.fromHex(\"d46eb3\")\n     * ```\n     *\n     * @since v3000.0\n     */\n    static fromHex(hex: string | number) {\n        if (typeof hex === \"number\") {\n            return new Color(\n                (hex >> 16) & 0xff,\n                (hex >> 8) & 0xff,\n                (hex >> 0) & 0xff,\n            );\n        }\n        else if (typeof hex === \"string\") {\n            const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n                hex,\n            );\n\n            if (!result) throw new Error(\"Invalid hex color format\");\n\n            return new Color(\n                parseInt(result[1], 16),\n                parseInt(result[2], 16),\n                parseInt(result[3], 16),\n            );\n        }\n        else {\n            throw new Error(\"Invalid hex color format\");\n        }\n    }\n\n    // TODO: use range of [0, 360] [0, 100] [0, 100]?\n    static fromHSL(h: number, s: number, l: number) {\n        if (s == 0) {\n            return new Color(255 * l, 255 * l, 255 * l);\n        }\n\n        const hue2rgb = (p: number, q: number, t: number) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        const r = hue2rgb(p, q, h + 1 / 3);\n        const g = hue2rgb(p, q, h);\n        const b = hue2rgb(p, q, h - 1 / 3);\n\n        return new Color(\n            Math.round(r * 255),\n            Math.round(g * 255),\n            Math.round(b * 255),\n        );\n    }\n\n    static RED = new Color(255, 0, 0);\n    static GREEN = new Color(0, 255, 0);\n    static BLUE = new Color(0, 0, 255);\n    static YELLOW = new Color(255, 255, 0);\n    static MAGENTA = new Color(255, 0, 255);\n    static CYAN = new Color(0, 255, 255);\n    static WHITE = new Color(255, 255, 255);\n    static BLACK = new Color(0, 0, 0);\n\n    clone(): Color {\n        return new Color(this.r, this.g, this.b);\n    }\n\n    /** Lighten the color (adds RGB by n). */\n    lighten(a: number): Color {\n        return new Color(this.r + a, this.g + a, this.b + a);\n    }\n\n    /** Darkens the color (subtracts RGB by n). */\n    darken(a: number): Color {\n        return this.lighten(-a);\n    }\n\n    invert(): Color {\n        return new Color(255 - this.r, 255 - this.g, 255 - this.b);\n    }\n\n    mult(other: Color): Color {\n        return new Color(\n            this.r * other.r / 255,\n            this.g * other.g / 255,\n            this.b * other.b / 255,\n        );\n    }\n\n    /**\n     * Linear interpolate to a destination color.\n     *\n     * @since v3000.0\n     */\n    lerp(dest: Color, t: number): Color {\n        return new Color(\n            lerp(this.r, dest.r, t),\n            lerp(this.g, dest.g, t),\n            lerp(this.b, dest.b, t),\n        );\n    }\n\n    /**\n     * Convert color into HSL format.\n     *\n     * @since v3001.0\n     */\n    toHSL(): [number, number, number] {\n        const r = this.r / 255;\n        const g = this.g / 255;\n        const b = this.b / 255;\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        const l = h;\n        if (max == min) {\n            h = s = 0;\n        }\n        else {\n            const d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return [h, s, l];\n    }\n\n    eq(other: Color): boolean {\n        return this.r === other.r\n            && this.g === other.g\n            && this.b === other.b;\n    }\n\n    toString(): string {\n        return `rgb(${this.r}, ${this.g}, ${this.b})`;\n    }\n\n    /**\n     * Return the hex string of color.\n     *\n     * @since v3000.0\n     */\n    toHex(): string {\n        return \"#\"\n            + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16)\n                .slice(1);\n    }\n\n    /**\n     * Return the color converted to an array.\n     *\n     * @since v3001.0\n     */\n    toArray(): Array<number> {\n        return [this.r, this.g, this.b];\n    }\n}\n\nexport type ColorArgs =\n    // rgb(new Color(255, 255, 255))\n    | [Color]\n    /**\n     * rgb(new Color(255, 255, 255), 1)\n     *\n     * This is only used to parse directly the color of background. This\n     * syntax shouldn't be used to set opacity. Use `opacity()` comp instead.\n     */\n    | [Color, number]\n    // rgb(255, 255, 255)\n    | RGBValue\n    /**\n     * rgb(255, 255, 255, 1)\n     *\n     * This is only used to parse directly the color of background. This\n     * syntax shouldn't be used to set opacity. Use `opacity()` comp instead.\n     */\n    | RGBAValue\n    // rgb(\"#ffffff\")\n    | [string]\n    | [number[]]\n    | [];\n\nexport function rgb(...args: ColorArgs): Color {\n    if (args.length === 0) {\n        return new Color(255, 255, 255);\n    }\n    else if (args.length === 1) {\n        if (args[0] instanceof Color) {\n            // rgb(new Color(255, 255, 255))\n            return args[0].clone();\n        }\n        else if (typeof args[0] === \"string\") {\n            // rgb(\"#ffffff\")\n            return Color.fromHex(args[0]);\n        }\n        else if (Array.isArray(args[0]) && args[0].length === 3) {\n            // rgb([255, 255, 255])\n            return Color.fromArray(args[0]);\n        }\n    }\n    else if (args.length === 2) {\n        if (args[0] instanceof Color) {\n            return args[0].clone();\n        }\n    }\n    else if (args.length === 3 || args.length === 4) {\n        return new Color(args[0], args[1], args[2]);\n    }\n\n    throw new Error(\"Invalid color arguments\");\n}\n\nexport const hsl2rgb = (h: number, s: number, l: number) =>\n    Color.fromHSL(h, s, l);\n", "import type { GameObj, LerpValue, RNGValue } from \"../types\";\nimport { Color, rgb } from \"./color\";\n\n/**\n * Possible arguments for a Vec2.\n *\n * @group Math\n */\nexport type Vec2Args =\n    | [number, number]\n    | [number]\n    | [Vec2]\n    | [number | Vec2]\n    | [];\n\nexport function deg2rad(deg: number): number {\n    return deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n    return rad * 180 / Math.PI;\n}\n\nexport function clamp(\n    val: number,\n    min: number,\n    max: number,\n): number {\n    if (min > max) {\n        return clamp(val, max, min);\n    }\n    return Math.min(Math.max(val, min), max);\n}\n\nexport function lerp<V extends LerpValue>(\n    a: V,\n    b: V,\n    t: number,\n): V {\n    if (typeof a === \"number\" && typeof b === \"number\") {\n        return a + (b - a) * t as V;\n    }\n    else if (a instanceof Vec2 && b instanceof Vec2) {\n        return a.lerp(b, t) as V;\n    }\n    else if (a instanceof Color && b instanceof Color) {\n        return a.lerp(b, t) as V;\n    }\n    throw new Error(\n        `Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`,\n    );\n}\n\nexport function map(\n    v: number,\n    l1: number,\n    h1: number,\n    l2: number,\n    h2: number,\n): number {\n    return l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n    v: number,\n    l1: number,\n    h1: number,\n    l2: number,\n    h2: number,\n): number {\n    return clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nexport function step(edge: number, x: number) {\n    return x < edge ? 0 : 1;\n}\n\nexport function smoothstep(edge0: number, edge1: number, x: number) {\n    x = clamp((x - edge0) / (edge1 - edge0), 0, 1);\n    return x * x * (3.0 - 2.0 * x);\n}\n\n/**\n * A 2D vector.\n *\n * @group Math\n */\nexport class Vec2 {\n    /** The x coordinate */\n    x: number = 0;\n    /** The y coordinate */\n    y: number = 0;\n\n    constructor(x: number = 0, y: number = x) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /** Create a new Vec2 from an angle in degrees */\n    static fromAngle(deg: number) {\n        const angle = deg2rad(deg);\n        return new Vec2(Math.cos(angle), Math.sin(angle));\n    }\n\n    /** Create a new Vec2 from an array */\n    static fromArray(arr: Array<number>) {\n        return new Vec2(arr[0], arr[1]);\n    }\n\n    static LEFT = new Vec2(-1, 0);\n    static RIGHT = new Vec2(1, 0);\n    static UP = new Vec2(0, -1);\n    static DOWN = new Vec2(0, 1);\n\n    /** Clone the vector */\n    clone(): Vec2 {\n        return new Vec2(this.x, this.y);\n    }\n\n    /** Returns the addition with another vector. */\n    add(...args: Vec2Args): Vec2 {\n        const p2 = vec2(...args);\n        return new Vec2(this.x + p2.x, this.y + p2.y);\n    }\n\n    /** Returns the subtraction with another vector. */\n    sub(...args: Vec2Args): Vec2 {\n        const p2 = vec2(...args);\n        return new Vec2(this.x - p2.x, this.y - p2.y);\n    }\n\n    /** Scale by another vector. or a single number */\n    scale(...args: Vec2Args): Vec2 {\n        const s = vec2(...args);\n        return new Vec2(this.x * s.x, this.y * s.y);\n    }\n\n    /** Get distance between another vector */\n    dist(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return this.sub(p2).len();\n    }\n\n    /** Get squared distance between another vector */\n    sdist(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return this.sub(p2).slen();\n    }\n\n    len(): number {\n        return Math.sqrt(this.dot(this));\n    }\n\n    /**\n     * Get squared length of the vector\n     *\n     * @since v3000.0\n     */\n    slen(): number {\n        return this.dot(this);\n    }\n\n    /**\n     * Get the unit vector (length of 1).\n     */\n    unit(): Vec2 {\n        const len = this.len();\n        return len === 0 ? new Vec2(0) : this.scale(1 / len);\n    }\n\n    /**\n     * Get the perpendicular vector.\n     */\n    normal(): Vec2 {\n        return new Vec2(this.y, -this.x);\n    }\n\n    /**\n     * Get the reflection of a vector with a normal.\n     *\n     * @since v3000.0\n     */\n    reflect(normal: Vec2) {\n        return this.sub(normal.scale(2 * this.dot(normal)));\n    }\n\n    /**\n     * Get the projection of a vector onto another vector.\n     *\n     * @since v3000.0\n     */\n    project(on: Vec2) {\n        return on.scale(on.dot(this) / on.len());\n    }\n\n    /**\n     * Get the rejection of a vector onto another vector.\n     *\n     * @since v3000.0\n     */\n    reject(on: Vec2) {\n        return this.sub(this.project(on));\n    }\n\n    /**\n     * Get the dot product with another vector.\n     */\n    dot(p2: Vec2): number {\n        return this.x * p2.x + this.y * p2.y;\n    }\n\n    /**\n     * Get the cross product with another vector.\n     *\n     * @since v3000.0\n     */\n    cross(p2: Vec2): number {\n        return this.x * p2.y - this.y * p2.x;\n    }\n\n    /**\n     * Get the angle of the vector in degrees.\n     */\n    angle(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n    }\n\n    /**\n     * Get the angle between this vector and another vector.\n     *\n     * @since v3000.0\n     */\n    angleBetween(...args: Vec2Args): number {\n        const p2 = vec2(...args);\n        return rad2deg(Math.atan2(this.cross(p2), this.dot(p2)));\n    }\n\n    /**\n     * Linear interpolate to a destination vector (for positions).\n     */\n    lerp(dest: Vec2, t: number): Vec2 {\n        return new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t));\n    }\n\n    /**\n     * Spherical linear interpolate to a destination vector (for rotations).\n     *\n     * @since v3000.0\n     */\n    slerp(dest: Vec2, t: number): Vec2 {\n        const cos = this.dot(dest);\n        const sin = this.cross(dest);\n        const angle = Math.atan2(sin, cos);\n        return this\n            .scale(Math.sin((1 - t) * angle))\n            .add(dest.scale(Math.sin(t * angle)))\n            .scale(1 / sin);\n    }\n\n    /**\n     * If the vector (x, y) is zero.\n     *\n     * @since v3000.0\n     */\n    isZero(): boolean {\n        return this.x === 0 && this.y === 0;\n    }\n\n    /**\n     * To n precision floating point.\n     */\n    toFixed(n: number): Vec2 {\n        return new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n    }\n\n    /**\n     * Multiply by a Mat4.\n     *\n     * @since v3000.0\n     */\n    transform(m: Mat4): Vec2 {\n        return m.multVec2(this);\n    }\n\n    eq(other: Vec2): boolean {\n        return this.x === other.x && this.y === other.y;\n    }\n\n    bbox(): Rect {\n        return new Rect(this, 0, 0);\n    }\n\n    toString(): string {\n        return `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n    }\n\n    toArray(): Array<number> {\n        return [this.x, this.y];\n    }\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n    if (args.length === 1) {\n        if (args[0] instanceof Vec2) {\n            return new Vec2(args[0].x, args[0].y);\n        }\n        else if (Array.isArray(args[0]) && args[0].length === 2) {\n            return new Vec2(...args[0]);\n        }\n    }\n    // @ts-ignore\n    return new Vec2(...args);\n}\n\n/**\n * @group Math\n */\nexport class Quad {\n    x: number = 0;\n    y: number = 0;\n    w: number = 1;\n    h: number = 1;\n    constructor(x: number, y: number, w: number, h: number) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    scale(other: Quad): Quad {\n        return new Quad(\n            this.x + this.w * other.x,\n            this.y + this.h * other.y,\n            this.w * other.w,\n            this.h * other.h,\n        );\n    }\n    pos() {\n        return new Vec2(this.x, this.y);\n    }\n    clone(): Quad {\n        return new Quad(this.x, this.y, this.w, this.h);\n    }\n    eq(other: Quad): boolean {\n        return this.x === other.x\n            && this.y === other.y\n            && this.w === other.w\n            && this.h === other.h;\n    }\n    toString(): string {\n        return `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n    }\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n    return new Quad(x, y, w, h);\n}\n\n// Internal class\nclass Mat2 {\n    // 2x2 matrix\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n\n    constructor(a: number, b: number, c: number, d: number) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n    }\n\n    mul(other: Mat2) {\n        return new Mat2(\n            this.a * other.a + this.b * other.c,\n            this.a * other.b + this.b * other.d,\n            this.c * other.a + this.d * other.c,\n            this.c * other.b + this.d * other.d,\n        );\n    }\n\n    transform(point: Vec2): Vec2 {\n        return vec2(\n            this.a * point.x + this.b * point.y,\n            this.c * point.x + this.d * point.y,\n        );\n    }\n\n    get inverse() {\n        const det = this.det;\n        return new Mat2(\n            this.d / det,\n            -this.b / det,\n            -this.c / det,\n            this.a / det,\n        );\n    }\n\n    get transpose() {\n        return new Mat2(\n            this.a,\n            this.c,\n            this.b,\n            this.d,\n        );\n    }\n\n    get eigenvalues() {\n        const m = this.trace / 2;\n        const d = this.det;\n        const e1 = m + Math.sqrt(m * m - d);\n        const e2 = m - Math.sqrt(m * m - d);\n        return [e1, e2];\n    }\n\n    eigenvectors(e1: number, e2: number) {\n        if (this.c != 0) {\n            return [[e1 - this.d, this.c], [e2 - this.d, this.c]];\n        }\n        else if (this.b != 0) {\n            return [[this.b, e1 - this.a], [this.b, e2 - this.a]];\n        }\n        else {\n            if (Math.abs(this.transform(vec2(1, 0)).x - e1) < Number.EPSILON) {\n                return [[1, 0], [0, 1]];\n            }\n            else {\n                return [[0, 1], [1, 0]];\n            }\n        }\n    }\n\n    get det() {\n        return this.a * this.d - this.b * this.c;\n    }\n\n    get trace() {\n        return this.a + this.d;\n    }\n\n    static rotation(radians: number) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        return new Mat2(\n            c,\n            s,\n            -s,\n            c,\n        );\n    }\n\n    static scale(x: number, y: number) {\n        return new Mat2(x, 0, 0, y);\n    }\n}\n\n// Internal class\nclass Mat23 {\n    // 2x3 matrix, since the last column is always (0, 0, 1)\n    a: number;\n    b: number; // 0\n    c: number;\n    d: number; // 0\n    e: number;\n    f: number; // 1\n    constructor(\n        a: number = 1,\n        b: number = 0,\n        c: number = 0,\n        d: number = 1,\n        e: number = 0,\n        f: number = 0,\n    ) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.e = e;\n        this.f = f;\n    }\n    static fromMat2(m: Mat2) {\n        return new Mat23(\n            m.a,\n            m.b,\n            m.c,\n            m.d,\n            0,\n            0,\n        );\n    }\n    toMat2() {\n        return new Mat2(\n            this.a,\n            this.b,\n            this.c,\n            this.d,\n        );\n    }\n    static fromTranslation(t: Vec2) {\n        return new Mat23(\n            1,\n            0,\n            0,\n            1,\n            t.x,\n            t.y,\n        );\n    }\n    static fromRotation(radians: number) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        return new Mat23(\n            c,\n            s,\n            -s,\n            c,\n            0,\n            0,\n        );\n    }\n    static fromScale(s: Vec2): Mat23 {\n        return new Mat23(\n            s.x,\n            0,\n            0,\n            s.y,\n            0,\n            0,\n        );\n    }\n    mul(other: Mat23): Mat23 {\n        return new Mat23(\n            other.a * this.a + other.b * this.c,\n            other.a * this.b + other.b * this.d,\n            other.c * this.a + other.d * this.c,\n            other.c * this.b + other.d * this.d,\n            other.e * this.a + other.f * this.c + this.e,\n            other.e * this.b + other.f * this.d + this.f,\n        );\n    }\n    translate(t: Vec2): Mat23 {\n        this.e += t.x * this.a + t.y * this.c;\n        this.f += t.y * this.b + t.x * this.d;\n        return this;\n    }\n    rotate(radians: number): Mat23 {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        const oldA = this.a;\n        const oldB = this.b;\n        this.a = c * this.a + s * this.c;\n        this.b = c * this.b + s * this.d;\n        this.c = c * this.c - s * oldA;\n        this.d = c * this.d - s * oldB;\n        return this;\n    }\n    scale(s: Vec2): Mat23 {\n        this.a *= s.x;\n        this.b *= s.x;\n        this.c *= s.y;\n        this.d *= s.y;\n        return this;\n    }\n    transform(p: Vec2) {\n        return vec2(\n            this.a * p.x + this.c * p.y + this.e,\n            this.b * p.x + this.d * p.y + this.f,\n        );\n    }\n\n    get det() {\n        return this.a * this.d - this.b * this.c;\n    }\n\n    get inverse() {\n        const det = this.det;\n        return new Mat23(\n            this.d / det,\n            -this.b / det,\n            -this.c / det,\n            this.a / det,\n            (this.c * this.f - this.d * this.e) / det,\n            (this.b * this.e - this.a * this.f) / det,\n        );\n    }\n}\n\n// Internal class\nclass Mat3 {\n    // m11 m12 m13\n    // m21 m22 m23\n    // m31 m32 m33\n    m11: number;\n    m12: number;\n    m13: number;\n    m21: number;\n    m22: number;\n    m23: number;\n    m31: number;\n    m32: number;\n    m33: number;\n\n    constructor(\n        m11: number,\n        m12: number,\n        m13: number,\n        m21: number,\n        m22: number,\n        m23: number,\n        m31: number,\n        m32: number,\n        m33: number,\n    ) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m13 = m13;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.m23 = m23;\n        this.m31 = m31;\n        this.m32 = m32;\n        this.m33 = m33;\n    }\n\n    static fromMat2(m: Mat2) {\n        return new Mat3(\n            m.a,\n            m.b,\n            0,\n            m.c,\n            m.d,\n            0,\n            0,\n            0,\n            1,\n        );\n    }\n\n    toMat2() {\n        return new Mat2(\n            this.m11,\n            this.m12,\n            this.m21,\n            this.m22,\n        );\n    }\n\n    mul(other: Mat3): Mat3 {\n        return new Mat3(\n            this.m11 * other.m11 + this.m12 * other.m21 + this.m13 * other.m31,\n            this.m11 * other.m12 + this.m12 * other.m22 + this.m13 * other.m32,\n            this.m11 * other.m13 + this.m12 * other.m23 + this.m13 * other.m33,\n            this.m21 * other.m11 + this.m22 * other.m21 + this.m23 * other.m31,\n            this.m21 * other.m12 + this.m22 * other.m22 + this.m23 * other.m32,\n            this.m21 * other.m13 + this.m22 * other.m23 + this.m23 * other.m33,\n            this.m31 * other.m11 + this.m32 * other.m21 + this.m33 * other.m31,\n            this.m31 * other.m12 + this.m32 * other.m22 + this.m33 * other.m32,\n            this.m31 * other.m13 + this.m32 * other.m23 + this.m33 * other.m33,\n        );\n    }\n\n    get det(): number {\n        return this.m11 * this.m22 * this.m33 + this.m12 * this.m23 * this.m31\n            + this.m13 * this.m21 * this.m32 - this.m13 * this.m22 * this.m31\n            - this.m12 * this.m21 * this.m33 - this.m11 * this.m23 * this.m32;\n    }\n\n    rotate(radians: number) {\n        const c = Math.cos(radians);\n        const s = Math.sin(radians);\n        const oldA = this.m11;\n        const oldB = this.m12;\n        this.m11 = c * this.m11 + s * this.m21;\n        this.m12 = c * this.m12 + s * this.m22;\n        this.m21 = c * this.m21 - s * oldA;\n        this.m22 = c * this.m22 - s * oldB;\n        return this;\n    }\n\n    scale(x: number, y: number) {\n        this.m11 *= x;\n        this.m12 *= x;\n        this.m21 *= y;\n        this.m22 *= y;\n        return this;\n    }\n\n    get inverse(): Mat3 {\n        const det = this.det;\n        return new Mat3(\n            (this.m22 * this.m33 - this.m23 * this.m32) / det,\n            (this.m13 * this.m32 - this.m12 * this.m33) / det,\n            (this.m12 * this.m23 - this.m13 * this.m22) / det,\n            (this.m23 * this.m31 - this.m21 * this.m33) / det,\n            (this.m11 * this.m33 - this.m13 * this.m31) / det,\n            (this.m13 * this.m21 - this.m11 * this.m23) / det,\n            (this.m21 * this.m32 - this.m22 * this.m31) / det,\n            (this.m12 * this.m31 - this.m11 * this.m32) / det,\n            (this.m11 * this.m22 - this.m12 * this.m21) / det,\n        );\n    }\n\n    get transpose(): Mat3 {\n        return new Mat3(\n            this.m11,\n            this.m21,\n            this.m31,\n            this.m12,\n            this.m22,\n            this.m32,\n            this.m13,\n            this.m23,\n            this.m33,\n        );\n    }\n}\n\n/**\n * @group Math\n */\nexport class Mat4 {\n    m: number[] = [\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n    ];\n\n    constructor(m?: number[]) {\n        if (m) {\n            this.m = m;\n        }\n    }\n\n    static translate(p: Vec2): Mat4 {\n        return new Mat4([\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            p.x,\n            p.y,\n            0,\n            1,\n        ]);\n    }\n\n    static scale(s: Vec2): Mat4 {\n        return new Mat4([\n            s.x,\n            0,\n            0,\n            0,\n            0,\n            s.y,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateX(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            1,\n            0,\n            0,\n            0,\n            0,\n            c,\n            -s,\n            0,\n            0,\n            s,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateY(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            c,\n            0,\n            s,\n            0,\n            0,\n            1,\n            0,\n            0,\n            -s,\n            0,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    static rotateZ(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat4([\n            c,\n            -s,\n            0,\n            0,\n            s,\n            c,\n            0,\n            0,\n            0,\n            0,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n    }\n\n    translate(p: Vec2) {\n        this.m[12] += this.m[0] * p.x + this.m[4] * p.y;\n        this.m[13] += this.m[1] * p.x + this.m[5] * p.y;\n        this.m[14] += this.m[2] * p.x + this.m[6] * p.y;\n        this.m[15] += this.m[3] * p.x + this.m[7] * p.y;\n        return this;\n    }\n\n    scale(p: Vec2) {\n        this.m[0] *= p.x;\n        this.m[4] *= p.y;\n        this.m[1] *= p.x;\n        this.m[5] *= p.y;\n        this.m[2] *= p.x;\n        this.m[6] *= p.y;\n        this.m[3] *= p.x;\n        this.m[7] *= p.y;\n        return this;\n    }\n\n    rotate(a: number): Mat4 {\n        a = deg2rad(-a);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        const m0 = this.m[0];\n        const m1 = this.m[1];\n        const m4 = this.m[4];\n        const m5 = this.m[5];\n        this.m[0] = m0 * c + m1 * s;\n        this.m[1] = -m0 * s + m1 * c;\n        this.m[4] = m4 * c + m5 * s;\n        this.m[5] = -m4 * s + m5 * c;\n        return this;\n    }\n\n    // TODO: in-place variant\n    mult(other: Mat4): Mat4 {\n        const out = [];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                out[i * 4 + j] = this.m[0 * 4 + j] * other.m[i * 4 + 0]\n                    + this.m[1 * 4 + j] * other.m[i * 4 + 1]\n                    + this.m[2 * 4 + j] * other.m[i * 4 + 2]\n                    + this.m[3 * 4 + j] * other.m[i * 4 + 3];\n            }\n        }\n        return new Mat4(out);\n    }\n\n    multVec2(p: Vec2): Vec2 {\n        return new Vec2(\n            p.x * this.m[0] + p.y * this.m[4] + this.m[12],\n            p.x * this.m[1] + p.y * this.m[5] + this.m[13],\n        );\n    }\n\n    getTranslation() {\n        return new Vec2(this.m[12], this.m[13]);\n    }\n\n    getScale() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const det = this.m[0] * this.m[5] - this.m[1] * this.m[4];\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return new Vec2(r, det / r);\n        }\n        else if (this.m[4] != 0 || this.m[5] != 0) {\n            const det = this.m[0] * this.m[5] - this.m[1] * this.m[4];\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return new Vec2(det / s, s);\n        }\n        else {\n            return new Vec2(0, 0);\n        }\n    }\n\n    getRotation() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return rad2deg(\n                this.m[1] > 0\n                    ? Math.acos(this.m[0] / r)\n                    : -Math.acos(this.m[0] / r),\n            );\n        }\n        else if (this.m[4] != 0 || this.m[5] != 0) {\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return rad2deg(\n                Math.PI / 2 - (this.m[5] > 0\n                    ? Math.acos(-this.m[4] / s)\n                    : -Math.acos(this.m[4] / s)),\n            );\n        }\n        else {\n            return 0;\n        }\n    }\n\n    getSkew() {\n        if (this.m[0] != 0 || this.m[1] != 0) {\n            const r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1]);\n            return new Vec2(\n                Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5])\n                    / (r * r),\n                0,\n            );\n        }\n        else if (this.m[4] != 0 || this.m[5] != 0) {\n            const s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5]);\n            return new Vec2(\n                0,\n                Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5])\n                    / (s * s),\n            );\n        }\n        else {\n            return new Vec2(0, 0);\n        }\n    }\n\n    invert(): Mat4 {\n        const out = [];\n\n        const f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n        const f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n        const f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n        const f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n        const f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n        const f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n        const f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n        const f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n        const f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n        const f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n        const f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n        const f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n        const f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n        const f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n        const f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n        const f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n        const f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n        const f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n        const f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n        out[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n        out[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n        out[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n        out[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n        out[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n        out[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n        out[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n        out[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n        out[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n        out[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n        out[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n        out[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n        out[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n        out[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n        out[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n        out[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n        const det = this.m[0] * out[0]\n            + this.m[1] * out[4]\n            + this.m[2] * out[8]\n            + this.m[3] * out[12];\n\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                out[i * 4 + j] *= 1.0 / det;\n            }\n        }\n\n        return new Mat4(out);\n    }\n\n    clone(): Mat4 {\n        return new Mat4([...this.m]);\n    }\n\n    toString(): string {\n        return this.m.toString();\n    }\n}\n\nexport function wave(\n    lo: number,\n    hi: number,\n    t: number,\n    f = (t: number) => -Math.cos(t),\n): number {\n    return lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\n/**\n * @group Math\n */\nexport class RNG {\n    seed: number;\n    constructor(seed: number) {\n        this.seed = seed;\n    }\n    gen(): number {\n        this.seed = (A * this.seed + C) % M;\n        return this.seed / M;\n    }\n    genNumber(a: number, b: number): number {\n        return a + this.gen() * (b - a);\n    }\n    genVec2(a: Vec2, b: Vec2): Vec2 {\n        return new Vec2(\n            this.genNumber(a.x, b.x),\n            this.genNumber(a.y, b.y),\n        );\n    }\n    genColor(a: Color, b: Color): Color {\n        return new Color(\n            this.genNumber(a.r, b.r),\n            this.genNumber(a.g, b.g),\n            this.genNumber(a.b, b.b),\n        );\n    }\n    genAny<T = RNGValue>(...args: [] | [T] | [T, T]): T {\n        if (args.length === 0) {\n            return this.gen() as T;\n        }\n        else if (args.length === 1) {\n            if (typeof args[0] === \"number\") {\n                return this.genNumber(0, args[0]) as T;\n            }\n            else if (args[0] instanceof Vec2) {\n                return this.genVec2(vec2(0, 0), args[0]) as T;\n            }\n            else if (args[0] instanceof Color) {\n                return this.genColor(rgb(0, 0, 0), args[0]) as T;\n            }\n        }\n        else if (args.length === 2) {\n            if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n                return this.genNumber(args[0], args[1]) as T;\n            }\n            else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n                return this.genVec2(args[0], args[1]) as T;\n            }\n            else if (args[0] instanceof Color && args[1] instanceof Color) {\n                return this.genColor(args[0], args[1]) as T;\n            }\n        }\n\n        throw new Error(\"More than 2 arguments not supported\");\n    }\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function randSeed(seed?: number): number {\n    if (seed != null) {\n        defRNG.seed = seed;\n    }\n    return defRNG.seed;\n}\n\nexport function rand<T = number>(...args: [] | [T] | [T, T]) {\n    return defRNG.genAny(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: [] | [number] | [number, number]) {\n    return Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n    return rand() <= p;\n}\n\nexport function shuffle<T>(list: T[]): T[] {\n    for (let i = list.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [list[i], list[j]] = [list[j], list[i]];\n    }\n    return list;\n}\n\nexport function chooseMultiple<T>(list: T[], count: number): T[] {\n    return list.length <= count\n        ? list.slice()\n        : shuffle(list.slice()).slice(0, count);\n}\n\nexport function choose<T>(list: T[]): T {\n    return list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n    return r1.pos.x + r1.width >= r2.pos.x\n        && r1.pos.x <= r2.pos.x + r2.width\n        && r1.pos.y + r1.height >= r2.pos.y\n        && r1.pos.y <= r2.pos.y + r2.height;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n    return r1.pos.x + r1.width > r2.pos.x\n        && r1.pos.x < r2.pos.x + r2.width\n        && r1.pos.y + r1.height > r2.pos.y\n        && r1.pos.y < r2.pos.y + r2.height;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n    if (\n        (l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y)\n        || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)\n    ) {\n        return null;\n    }\n\n    const denom = (l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x)\n        - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y);\n\n    // parallel\n    if (denom === 0) {\n        return null;\n    }\n\n    const ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y)\n        - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n    const ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y)\n        - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n    // is the intersection on the segments\n    if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n        return null;\n    }\n\n    return ua;\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n    const t = testLineLineT(l1, l2);\n    if (!t) return null;\n    return vec2(\n        l1.p1.x + t * (l1.p2.x - l1.p1.x),\n        l1.p1.y + t * (l1.p2.y - l1.p1.y),\n    );\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n    /*if (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n        return true\n    }\n    const pts = r.points()\n    return !!testLineLine(l, new Line(pts[0], pts[1]))\n        || !!testLineLine(l, new Line(pts[1], pts[2]))\n        || !!testLineLine(l, new Line(pts[2], pts[3]))\n        || !!testLineLine(l, new Line(pts[3], pts[0]))*/\n    const dir = l.p2.sub(l.p1);\n    let tmin = Number.NEGATIVE_INFINITY, tmax = Number.POSITIVE_INFINITY;\n\n    if (dir.x != 0.0) {\n        const tx1 = (r.pos.x - l.p1.x) / dir.x;\n        const tx2 = (r.pos.x + r.width - l.p1.x) / dir.x;\n\n        tmin = Math.max(tmin, Math.min(tx1, tx2));\n        tmax = Math.min(tmax, Math.max(tx1, tx2));\n    }\n\n    if (dir.y != 0.0) {\n        const ty1 = (r.pos.y - l.p1.y) / dir.y;\n        const ty2 = (r.pos.y + r.height - l.p1.y) / dir.y;\n\n        tmin = Math.max(tmin, Math.min(ty1, ty2));\n        tmax = Math.min(tmax, Math.max(ty1, ty2));\n    }\n\n    return tmax >= tmin && tmax >= 0 && tmin <= 1;\n}\n\nexport function testRectPoint2(r: Rect, pt: Vec2): boolean {\n    return pt.x >= r.pos.x\n        && pt.x <= r.pos.x + r.width\n        && pt.y >= r.pos.y\n        && pt.y <= r.pos.y + r.height;\n}\n\nexport function testRectPoint(r: Rect, pt: Vec2): boolean {\n    return pt.x > r.pos.x\n        && pt.x < r.pos.x + r.width\n        && pt.y > r.pos.y\n        && pt.y < r.pos.y + r.height;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n    const nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width));\n    const ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height));\n    const nearestPoint = vec2(nx, ny);\n    return nearestPoint.sdist(c.center) <= c.radius * c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n    return testPolygonPolygon(p, new Polygon(r.points()));\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n    const v1 = pt.sub(l.p1);\n    const v2 = l.p2.sub(l.p1);\n\n    // Check if sine is 0, in that case lines are parallel.\n    // If not parallel, the point cannot lie on the line.\n    if (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n        return false;\n    }\n\n    // Scalar projection of v1 on v2\n    const t = v1.dot(v2) / v2.dot(v2);\n    // Since t is percentual distance of pt from line.p1 on the line,\n    // it should be between 0% and 100%\n    return t >= 0 && t <= 1;\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n    const v = l.p2.sub(l.p1);\n    const a = v.dot(v);\n    const centerToOrigin = l.p1.sub(circle.center);\n    const b = 2 * v.dot(centerToOrigin);\n    const c = centerToOrigin.dot(centerToOrigin)\n        - circle.radius * circle.radius;\n    // Calculate the discriminant of ax^2 + bx + c\n    const dis = b * b - 4 * a * c;\n\n    // No root\n    if ((a <= Number.EPSILON) || (dis < 0)) {\n        return false;\n    }\n    // One possible root\n    else if (dis == 0) {\n        const t = -b / (2 * a);\n        if (t >= 0 && t <= 1) {\n            return true;\n        }\n    }\n    // Two possible roots\n    else {\n        const t1 = (-b + Math.sqrt(dis)) / (2 * a);\n        const t2 = (-b - Math.sqrt(dis)) / (2 * a);\n        if ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n            return true;\n        }\n    }\n\n    // Check if line is completely within the circle\n    // We only need to check one point, since the line didn't cross the circle\n    return testCirclePoint(circle, l.p1);\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n    // test if line is inside\n    if (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n        return true;\n    }\n\n    // test each line\n    for (let i = 0; i < p.pts.length; i++) {\n        const p1 = p.pts[i];\n        const p2 = p.pts[(i + 1) % p.pts.length];\n        if (testLineLine(l, new Line(p1, p2))) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function testCirclePoint(c: Circle, p: Vec2): boolean {\n    return c.center.sdist(p) < c.radius * c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n    return c1.center.sdist(c2.center)\n        < (c1.radius + c2.radius) * (c1.radius + c2.radius);\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n    // For each edge check for intersection\n    let prev = p.pts[p.pts.length - 1];\n    for (const cur of p.pts) {\n        if (testLineCircle(new Line(prev, cur), c)) {\n            return true;\n        }\n        prev = cur;\n    }\n\n    // Check if the polygon is completely within the circle\n    // We only need to check one point, since the polygon didn't cross the circle\n    if (testCirclePoint(c, p.pts[0])) {\n        return true;\n    }\n\n    // Check if the circle is completely within the polygon\n    return testPolygonPoint(p, c.center);\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n    for (let i = 0; i < p1.pts.length; i++) {\n        if (\n            testLinePolygon(\n                new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]),\n                p2,\n            )\n        ) {\n            return true;\n        }\n    }\n    // Check if any of the points of the polygon lie in the other polygon\n    if (\n        p1.pts.some(p => testPolygonPoint(p2, p))\n        || p2.pts.some(p => testPolygonPoint(p1, p))\n    ) {\n        return true;\n    }\n    return false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Vec2): boolean {\n    let c = false;\n    const p = poly.pts;\n\n    for (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n        if (\n            ((p[i].y > pt.y) != (p[j].y > pt.y))\n            && (pt.x\n                < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y)\n                    + p[i].x)\n        ) {\n            c = !c;\n        }\n    }\n\n    return c;\n}\n\nexport function testEllipsePoint(ellipse: Ellipse, pt: Vec2): boolean {\n    // Transform the point into the ellipse's unrotated coordinate system at the origin\n    pt = pt.sub(ellipse.center);\n    const angle = deg2rad(ellipse.angle);\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const vx = pt.x * c + pt.y * s;\n    const vy = -pt.x * s + pt.y * c;\n    return vx * vx / (ellipse.radiusX * ellipse.radiusX)\n            + vy * vy / (ellipse.radiusY * ellipse.radiusY) < 1;\n}\n\nexport function testEllipseCircle(ellipse: Ellipse, circle: Circle): boolean {\n    // This is an approximation, because the parallel curve of an ellipse is an octic algebraic curve, not just a larger ellipse.\n    // Transform the circle's center into the ellipse's unrotated coordinate system at the origin\n    const center = circle.center.sub(ellipse.center);\n    const angle = deg2rad(ellipse.angle);\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const cx = center.x * c + center.y * s;\n    const cy = -center.x * s + center.y * c;\n    // Test with an approximate Minkowski sum of the ellipse and the circle\n    return testEllipsePoint(\n        new Ellipse(\n            vec2(),\n            ellipse.radiusX + circle.radius,\n            ellipse.radiusY + circle.radius,\n            0,\n        ),\n        vec2(cx, cy),\n    );\n}\n\nexport function testEllipseLine(ellipse: Ellipse, line: Line): boolean {\n    // Transform the line to the coordinate system where the ellipse is a unit circle\n    const T = ellipse.toMat2().inverse;\n    line = new Line(\n        T.transform(line.p1.sub(ellipse.center)),\n        T.transform(line.p2.sub(ellipse.center)),\n    );\n    return testLineCircle(line, new Circle(vec2(), 1));\n}\n\nexport function testEllipseEllipse(\n    ellipse1: Ellipse,\n    ellipse2: Ellipse,\n): boolean {\n    // First check if one of the ellipses isn't secretly a circle\n    if (ellipse1.radiusX === ellipse1.radiusY) {\n        return testEllipseCircle(\n            ellipse2,\n            new Circle(ellipse1.center, ellipse1.radiusX),\n        );\n    }\n    else if (ellipse2.radiusX === ellipse2.radiusY) {\n        return testEllipseCircle(\n            ellipse1,\n            new Circle(ellipse2.center, ellipse2.radiusX),\n        );\n    }\n    // No luck, we need to solve the equation\n    /*\n    Etayo, Fernando, Laureano Gonzalez-Vega, and Natalia del Rio. \"A new approach to characterizing the relative position of two ellipses depending on one parameter.\" Computer aided geometric design 23, no. 4 (2006): 324-350.\n    */\n    const A1 = new Mat3(\n        1 / ellipse1.radiusX ** 2,\n        0,\n        0,\n        0,\n        1 / ellipse1.radiusY ** 2,\n        0,\n        0,\n        0,\n        -1,\n    );\n    const A2 = new Mat3(\n        1 / ellipse2.radiusX ** 2,\n        0,\n        0,\n        0,\n        1 / ellipse2.radiusY ** 2,\n        0,\n        0,\n        0,\n        -1,\n    );\n\n    const x1 = ellipse1.center.x;\n    const y1 = ellipse1.center.y;\n    const x2 = ellipse2.center.x;\n    const y2 = ellipse2.center.y;\n    const theta1 = deg2rad(ellipse1.angle);\n    const theta2 = deg2rad(ellipse2.angle);\n\n    const M1 = new Mat3(\n        Math.cos(theta1),\n        -Math.sin(theta1),\n        x1,\n        Math.sin(theta1),\n        Math.cos(theta1),\n        y1,\n        0,\n        0,\n        1,\n    );\n    const M2 = new Mat3(\n        Math.cos(theta2),\n        -Math.sin(theta2),\n        x2,\n        Math.sin(theta2),\n        Math.cos(theta2),\n        y2,\n        0,\n        0,\n        1,\n    );\n    const M1inv = M1.inverse;\n    const M2inv = M2.inverse;\n\n    const A = M1inv.transpose.mul(A1).mul(M1inv);\n    const B = M2inv.transpose.mul(A2).mul(M2inv);\n\n    const a11 = A.m11;\n    const a12 = A.m12;\n    const a13 = A.m13;\n    const a21 = A.m21;\n    const a22 = A.m22;\n    const a23 = A.m23;\n    const a31 = A.m31;\n    const a32 = A.m32;\n    const a33 = A.m33;\n\n    const b11 = B.m11;\n    const b12 = B.m12;\n    const b13 = B.m13;\n    const b21 = B.m21;\n    const b22 = B.m22;\n    const b23 = B.m23;\n    const b31 = B.m31;\n    const b32 = B.m32;\n    const b33 = B.m33;\n\n    const factor = a11 * a22 * a33 - a11 * a23 * a32 - a12 * a21 * a33\n        + a12 * a23 * a31 + a13 * a21 * a32 - a13 * a22 * a31;\n    const a =\n        (a11 * a22 * b33 - a11 * a23 * b32 - a11 * a32 * b23 + a11 * a33 * b22\n            - a12 * a21 * b33 + a12 * a23 * b31 + a12 * a31 * b23\n            - a12 * a33 * b21 + a13 * a21 * b32 - a13 * a22 * b31\n            - a13 * a31 * b22 + a13 * a32 * b21 + a21 * a32 * b13\n            - a21 * a33 * b12 - a22 * a31 * b13 + a22 * a33 * b11\n            + a23 * a31 * b12 - a23 * a32 * b11) / factor;\n    const b =\n        (a11 * b22 * b33 - a11 * b23 * b32 - a12 * b21 * b33 + a12 * b23 * b31\n            + a13 * b21 * b32 - a13 * b22 * b31 - a21 * b12 * b33\n            + a21 * b13 * b32 + a22 * b11 * b33 - a22 * b13 * b31\n            - a23 * b11 * b32 + a23 * b12 * b31 + a31 * b12 * b23\n            - a31 * b13 * b22 - a32 * b11 * b23 + a32 * b13 * b21\n            + a33 * b11 * b22 - a33 * b12 * b21) / factor;\n    const c =\n        (b11 * b22 * b33 - b11 * b23 * b32 - b12 * b21 * b33 + b12 * b23 * b31\n            + b13 * b21 * b32 - b13 * b22 * b31) / factor;\n\n    if (a >= 0) {\n        const condition1 = -3 * b + a ** 2;\n        const condition2 = 3 * a * c + b * a ** 2 - 4 * b ** 2;\n        const condition3 = -27 * c ** 2 + 18 * c * a * b + a ** 2 * b ** 2\n            - 4 * a ** 3 * c - 4 * b ** 3;\n        if (condition1 > 0 && condition2 < 0 && condition3 > 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        const condition1 = -3 * b + a ** 2;\n        const condition2 = -27 * c ** 2 + 18 * c * a * b + a ** 2 * b ** 2\n            - 4 * a ** 3 * c - 4 * b ** 3;\n        if (condition1 > 0 && condition2 > 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n}\n\nexport function testEllipseRect(ellipse: Ellipse, rect: Rect): boolean {\n    return testEllipsePolygon(ellipse, new Polygon(rect.points()));\n}\n\nexport function testEllipsePolygon(ellipse: Ellipse, poly: Polygon): boolean {\n    // Transform the polygon to the coordinate system where the ellipse is a unit circle\n    const T = ellipse.toMat2().inverse;\n    poly = new Polygon(poly.pts.map(p => T.transform(p.sub(ellipse.center))));\n    return testCirclePolygon(new Circle(vec2(), 1), poly);\n}\n\nexport function testPointPoint(p1: Vec2, p2: Vec2): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n/**\n * @group Math\n */\nexport type ShapeType = Point | Circle | Line | Rect | Polygon | Ellipse;\n\nexport function testPointShape(point: Point, shape: ShapeType): boolean {\n    if (shape instanceof Vec2) {\n        return testPointPoint(shape as Vec2, point.pt);\n    }\n    else if (shape instanceof Circle) {\n        return testCirclePoint(shape as Circle, point.pt);\n    }\n    else if (shape instanceof Line) {\n        return testLinePoint(shape as Line, point.pt);\n    }\n    else if (shape instanceof Rect) {\n        return testRectPoint(shape as Rect, point.pt);\n    }\n    else if (shape instanceof Polygon) {\n        return testPolygonPoint(shape as Polygon, point.pt);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipsePoint(shape as Ellipse, point.pt);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testLineShape(line: Line, shape: ShapeType | Vec2): boolean {\n    if (shape instanceof Vec2) {\n        return testLinePoint(line, shape as Vec2);\n    }\n    else if (shape instanceof Circle) {\n        return testLineCircle(line, shape as Circle);\n    }\n    else if (shape instanceof Line) {\n        return testLineLine(line, shape as Line) != null;\n    }\n    else if (shape instanceof Rect) {\n        return testRectLine(shape as Rect, line);\n    }\n    else if (shape instanceof Polygon) {\n        return testLinePolygon(line, shape as Polygon);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipseLine(shape as Ellipse, line);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testCircleShape(\n    circle: Circle,\n    shape: ShapeType | Vec2,\n): boolean {\n    if (shape instanceof Vec2) {\n        return testCirclePoint(circle, shape as Vec2);\n    }\n    else if (shape instanceof Circle) {\n        return testCircleCircle(circle, shape as Circle);\n    }\n    else if (shape instanceof Line) {\n        return testLineCircle(shape as Line, circle);\n    }\n    else if (shape instanceof Rect) {\n        return testRectCircle(shape as Rect, circle);\n    }\n    else if (shape instanceof Polygon) {\n        return testCirclePolygon(circle, shape as Polygon);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipseCircle(shape as Ellipse, circle);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testRectShape(rect: Rect, shape: ShapeType | Vec2): boolean {\n    if (shape instanceof Vec2) {\n        return testRectPoint(rect, shape as Vec2);\n    }\n    else if (shape instanceof Circle) {\n        return testRectCircle(rect, shape as Circle);\n    }\n    else if (shape instanceof Line) {\n        return testRectLine(rect, shape as Line);\n    }\n    else if (shape instanceof Rect) {\n        return testRectRect(rect, shape as Rect);\n    }\n    else if (shape instanceof Polygon) {\n        return testRectPolygon(rect, shape as Polygon);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipseRect(shape as Ellipse, rect);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testPolygonShape(\n    polygon: Polygon,\n    shape: ShapeType | Vec2,\n): boolean {\n    if (shape instanceof Vec2) {\n        return testPolygonPoint(polygon, shape as Vec2);\n    }\n    else if (shape instanceof Circle) {\n        return testCirclePolygon(shape as Circle, polygon);\n    }\n    else if (shape instanceof Line) {\n        return testLinePolygon(shape as Line, polygon);\n    }\n    else if (shape instanceof Rect) {\n        return testRectPolygon(shape as Rect, polygon);\n    }\n    else if (shape instanceof Polygon) {\n        return testPolygonPolygon(shape as Polygon, polygon);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipsePolygon(shape as Ellipse, polygon);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testEllipseShape(ellipse: Ellipse, shape: ShapeType): boolean {\n    if (shape instanceof Vec2) {\n        return testEllipsePoint(ellipse, shape as Vec2);\n    }\n    else if (shape instanceof Circle) {\n        return testEllipseCircle(ellipse, shape as Circle);\n    }\n    else if (shape instanceof Line) {\n        return testEllipseLine(ellipse, shape as Line);\n    }\n    else if (shape instanceof Rect) {\n        return testEllipseRect(ellipse, shape as Rect);\n    }\n    else if (shape instanceof Polygon) {\n        return testEllipsePolygon(ellipse, shape as Polygon);\n    }\n    else if (shape instanceof Ellipse) {\n        return testEllipseEllipse(shape as Ellipse, ellipse);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function testShapeShape(shape1: ShapeType, shape2: ShapeType): boolean {\n    if (shape1 instanceof Vec2) {\n        return testPointShape(new Point(shape1), shape2);\n    }\n    else if (shape1 instanceof Circle) {\n        return testCircleShape(shape1 as Circle, shape2);\n    }\n    else if (shape1 instanceof Line) {\n        return testLineShape(shape1 as Line, shape2);\n    }\n    else if (shape1 instanceof Rect) {\n        return testRectShape(shape1 as Rect, shape2);\n    }\n    else if (shape1 instanceof Polygon) {\n        return testPolygonShape(shape1 as Polygon, shape2);\n    }\n    else if (shape1 instanceof Ellipse) {\n        return testEllipseShape(shape1 as Ellipse, shape2);\n    }\n    else {\n        return false;\n    }\n}\n\n/**\n * @group Math\n */\nexport type RaycastHit = {\n    fraction: number;\n    normal: Vec2;\n    point: Vec2;\n    gridPos?: Vec2;\n    object?: GameObj;\n};\n\n/**\n * @group Math\n */\nexport type RaycastResult = RaycastHit | null;\n\nfunction raycastLine(origin: Vec2, direction: Vec2, line: Line): RaycastResult {\n    const a = origin;\n    const c = line.p1;\n    const d = line.p2;\n    const ab = direction;\n    const cd = d.sub(c);\n    const abxcd = ab.cross(cd);\n    // If parallel, no intersection\n    if (Math.abs(abxcd) < Number.EPSILON) {\n        return null;\n    }\n    const ac = c.sub(a);\n    const s = ac.cross(cd) / abxcd;\n    // Outside the ray\n    if (s <= 0 || s >= 1) {\n        return null;\n    }\n    // Outside the line\n    const t = ac.cross(ab) / abxcd;\n    if (t <= 0 || t >= 1) {\n        return null;\n    }\n\n    const normal = cd.normal().unit();\n    if (direction.dot(normal) > 0) {\n        normal.x *= -1;\n        normal.y *= -1;\n    }\n\n    return {\n        point: a.add(ab.scale(s)),\n        normal: normal,\n        fraction: s,\n    };\n}\n\nfunction raycastRect(origin: Vec2, direction: Vec2, rect: Rect) {\n    let tmin = Number.NEGATIVE_INFINITY, tmax = Number.POSITIVE_INFINITY;\n    let normal;\n\n    if (origin.x != 0.0) {\n        const tx1 = (rect.pos.x - origin.x) / direction.x;\n        const tx2 = (rect.pos.x + rect.width - origin.x) / direction.x;\n\n        normal = vec2(-Math.sign(direction.x), 0);\n\n        tmin = Math.max(tmin, Math.min(tx1, tx2));\n        tmax = Math.min(tmax, Math.max(tx1, tx2));\n    }\n\n    if (origin.y != 0.0) {\n        const ty1 = (rect.pos.y - origin.y) / direction.y;\n        const ty2 = (rect.pos.y + rect.height - origin.y) / direction.y;\n\n        if (Math.min(ty1, ty2) > tmin) {\n            normal = vec2(0, -Math.sign(direction.y));\n        }\n\n        tmin = Math.max(tmin, Math.min(ty1, ty2));\n        tmax = Math.min(tmax, Math.max(ty1, ty2));\n    }\n\n    if (tmax >= tmin && tmin >= 0 && tmin <= 1) {\n        const point = origin.add(direction.scale(tmin));\n\n        return {\n            point: point,\n            normal: normal,\n            fraction: tmin,\n        };\n    }\n    else {\n        return null;\n    }\n}\n\nfunction raycastCircle(\n    origin: Vec2,\n    direction: Vec2,\n    circle: Circle,\n): RaycastResult {\n    const a = origin;\n    const c = circle.center;\n    const ab = direction;\n    const A = ab.dot(ab);\n    const centerToOrigin = a.sub(c);\n    const B = 2 * ab.dot(centerToOrigin);\n    const C = centerToOrigin.dot(centerToOrigin)\n        - circle.radius * circle.radius;\n    // Calculate the discriminant of ax^2 + bx + c\n    const disc = B * B - 4 * A * C;\n    // No root\n    if ((A <= Number.EPSILON) || (disc < 0)) {\n        return null;\n    }\n    // One possible root\n    else if (disc == 0) {\n        const t = -B / (2 * A);\n        if (t >= 0 && t <= 1) {\n            const point = a.add(ab.scale(t));\n            return {\n                point: point,\n                normal: point.sub(c),\n                fraction: t,\n            };\n        }\n    }\n    // Two possible roots\n    else {\n        const t1 = (-B + Math.sqrt(disc)) / (2 * A);\n        const t2 = (-B - Math.sqrt(disc)) / (2 * A);\n        let t = null;\n        if (t1 >= 0 && t1 <= 1) {\n            t = t1;\n        }\n        if (t2 >= 0 && t2 <= 1) {\n            t = Math.min(t2, t ?? t2);\n        }\n        if (t != null) {\n            const point = a.add(ab.scale(t));\n            return {\n                point: point,\n                normal: point.sub(c).unit(),\n                fraction: t,\n            };\n        }\n    }\n\n    return null;\n}\n\nfunction raycastPolygon(\n    origin: Vec2,\n    direction: Vec2,\n    polygon: Polygon,\n): RaycastResult {\n    const points = polygon.pts;\n    let minHit = null;\n\n    let prev = points[points.length - 1];\n    for (let i = 0; i < points.length; i++) {\n        const cur = points[i];\n        const hit = raycastLine(origin, direction, new Line(prev, cur));\n        if (hit && (!minHit || minHit.fraction > hit.fraction)) {\n            minHit = hit;\n        }\n        prev = cur;\n    }\n\n    return minHit;\n}\n\nfunction raycastEllipse(\n    origin: Vec2,\n    direction: Vec2,\n    ellipse: Ellipse,\n): RaycastResult {\n    // Transforms from unit circle to rotated ellipse\n    const T = ellipse.toMat2();\n    // Transforms from rotated ellipse to unit circle\n    const TI = T.inverse;\n    // Transform both origin and direction into the unit circle coordinate system\n    const Torigin = TI.transform(origin.sub(ellipse.center));\n    const Tdirection = TI.transform(direction);\n    // Raycast as if we have a circle\n    const result = raycastCircle(Torigin, Tdirection, new Circle(vec2(), 1));\n    if (result) {\n        const R = Mat2.rotation(deg2rad(-ellipse.angle));\n        const S = Mat2.scale(ellipse.radiusX, ellipse.radiusY);\n        // Scale the point so we have a point on the unrotated ellipse\n        const p = S.transform(result.point);\n        // transform the result point to the coordinate system of the rotated ellipse\n        const point = T.transform(result.point).add(ellipse.center);\n        const fraction = point.dist(origin) / direction.len();\n        return {\n            point: point,\n            // Calculate the normal at the unrotated ellipse, then rotate the normal to the rotated ellipse\n            normal: R.transform(\n                vec2(ellipse.radiusY ** 2 * p.x, ellipse.radiusX ** 2 * p.y),\n            ).unit(),\n            fraction,\n        };\n    }\n    return result;\n}\n\nexport function raycastGrid(\n    origin: Vec2,\n    direction: Vec2,\n    gridPosHit: (gridPos: Vec2) => boolean | RaycastResult,\n    maxDistance: number = 64,\n): RaycastResult | null {\n    const pos = origin;\n    const len = direction.len();\n    const dir = direction.scale(1 / len);\n    let t = 0;\n    const gridPos = vec2(Math.floor(origin.x), Math.floor(origin.y));\n    const step = vec2(dir.x > 0 ? 1 : -1, dir.y > 0 ? 1 : -1);\n    const tDelta = vec2(Math.abs(1 / dir.x), Math.abs(1 / dir.y));\n    const dist = vec2(\n        (step.x > 0) ? (gridPos.x + 1 - origin.x) : (origin.x - gridPos.x),\n        (step.y > 0) ? (gridPos.y + 1 - origin.y) : (origin.y - gridPos.y),\n    );\n    const tMax = vec2(\n        (tDelta.x < Infinity) ? tDelta.x * dist.x : Infinity,\n        (tDelta.y < Infinity) ? tDelta.y * dist.y : Infinity,\n    );\n    let steppedIndex = -1;\n    while (t <= maxDistance) {\n        const hit = gridPosHit(gridPos);\n        if (hit === true) {\n            return {\n                point: pos.add(dir.scale(t)),\n                normal: vec2(\n                    steppedIndex === 0 ? -step.x : 0,\n                    steppedIndex === 1 ? -step.y : 0,\n                ),\n                fraction: t / len, // Since dir is normalized, t is len times too large\n                gridPos,\n            };\n        }\n        else if (hit) {\n            return hit;\n        }\n        if (tMax.x < tMax.y) {\n            gridPos.x += step.x;\n            t = tMax.x;\n            tMax.x += tDelta.x;\n            steppedIndex = 0;\n        }\n        else {\n            gridPos.y += step.y;\n            t = tMax.y;\n            tMax.y += tDelta.y;\n            steppedIndex = 1;\n        }\n    }\n\n    return null;\n}\n\nexport class Point {\n    pt: Vec2;\n    constructor(pt: Vec2) {\n        this.pt = pt.clone();\n    }\n    transform(m: Mat4): Point {\n        return new Point(m.multVec2(this.pt));\n    }\n    bbox(): Rect {\n        return new Rect(this.pt, 0, 0);\n    }\n    area(): number {\n        return 0;\n    }\n    clone(): Point {\n        return new Point(this.pt);\n    }\n    collides(shape: ShapeType): boolean {\n        return testPointShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.pt.eq(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return null;\n    }\n    random(): Vec2 {\n        return this.pt.clone();\n    }\n}\n\n/**\n * @group Math\n */\nexport class Line {\n    p1: Vec2;\n    p2: Vec2;\n    constructor(p1: Vec2, p2: Vec2) {\n        this.p1 = p1.clone();\n        this.p2 = p2.clone();\n    }\n    transform(m: Mat4): Line {\n        return new Line(m.multVec2(this.p1), m.multVec2(this.p2));\n    }\n    bbox(): Rect {\n        return Rect.fromPoints(this.p1, this.p2);\n    }\n    area(): number {\n        return this.p1.dist(this.p2);\n    }\n    clone(): Line {\n        return new Line(this.p1, this.p2);\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testLineShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastLine(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.p1.add(this.p2.sub(this.p1).scale(rand(1)));\n    }\n}\n\n// TODO: use x: number y: number (x, y, width, height)\n/**\n * @group Math\n */\nexport class Rect {\n    pos: Vec2;\n    width: number;\n    height: number;\n    constructor(pos: Vec2, width: number, height: number) {\n        this.pos = pos.clone();\n        this.width = width;\n        this.height = height;\n    }\n    static fromPoints(p1: Vec2, p2: Vec2): Rect {\n        return new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y);\n    }\n    center(): Vec2 {\n        return new Vec2(\n            this.pos.x + this.width / 2,\n            this.pos.y + this.height / 2,\n        );\n    }\n    points(): [Vec2, Vec2, Vec2, Vec2] {\n        return [\n            this.pos,\n            this.pos.add(this.width, 0),\n            this.pos.add(this.width, this.height),\n            this.pos.add(0, this.height),\n        ];\n    }\n    transform(m: Mat4): Polygon {\n        return new Polygon(this.points().map((pt) => m.multVec2(pt)));\n    }\n    bbox(): Rect {\n        return this.clone();\n    }\n    area(): number {\n        return this.width * this.height;\n    }\n    clone(): Rect {\n        return new Rect(this.pos.clone(), this.width, this.height);\n    }\n    distToPoint(p: Vec2): number {\n        return Math.sqrt(this.sdistToPoint(p));\n    }\n    sdistToPoint(p: Vec2): number {\n        const min = this.pos;\n        const max = this.pos.add(this.width, this.height);\n        const dx = Math.max(min.x - p.x, 0, p.x - max.x);\n        const dy = Math.max(min.y - p.y, 0, p.y - max.y);\n        return dx * dx + dy * dy;\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testRectShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        // Further type checking is needed here @mflerackers\n        // @ts-ignore\n        return raycastRect(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.pos.add(rand(this.width), rand(this.height));\n    }\n}\n\n/**\n * @group Math\n */\nexport class Circle {\n    center: Vec2;\n    radius: number;\n    constructor(center: Vec2, radius: number) {\n        this.center = center.clone();\n        this.radius = radius;\n    }\n    transform(tr: Mat4): Ellipse {\n        return new Ellipse(this.center, this.radius, this.radius).transform(tr);\n    }\n    bbox(): Rect {\n        return Rect.fromPoints(\n            this.center.sub(vec2(this.radius)),\n            this.center.add(vec2(this.radius)),\n        );\n    }\n    area(): number {\n        return this.radius * this.radius * Math.PI;\n    }\n    clone(): Circle {\n        return new Circle(this.center, this.radius);\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testCircleShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastCircle(origin, direction, this);\n    }\n    random(): Vec2 {\n        // TODO: Not uniform!!\n        return this.center.add(\n            Vec2.fromAngle(rand(360)).scale(rand(this.radius)),\n        );\n    }\n}\n\n/**\n * @group Math\n */\nexport class Ellipse {\n    center: Vec2;\n    radiusX: number;\n    radiusY: number;\n    angle: number;\n    constructor(center: Vec2, rx: number, ry: number, degrees: number = 0) {\n        this.center = center.clone();\n        this.radiusX = rx;\n        this.radiusY = ry;\n        this.angle = degrees;\n    }\n    static fromMat2(tr: Mat2): Ellipse {\n        const inv = tr.inverse;\n        const M = inv.transpose.mul(inv);\n        const [e1, e2] = M.eigenvalues;\n        const [v1, v2] = M.eigenvectors(e1, e2);\n\n        const [a, b] = [1 / Math.sqrt(e1), 1 / Math.sqrt(e2)];\n\n        // Make sure we use the semi-major axis for the rotation\n        if (a > b) {\n            return new Ellipse(\n                vec2(),\n                a,\n                b,\n                rad2deg(Math.atan2(-v1[1], v1[0])),\n            );\n        }\n        else {\n            return new Ellipse(\n                vec2(),\n                b,\n                a,\n                rad2deg(Math.atan2(-v2[1], v2[0])),\n            );\n        }\n    }\n    toMat2(): Mat2 {\n        const a = deg2rad(this.angle);\n        const c = Math.cos(a);\n        const s = Math.sin(a);\n        return new Mat2(\n            c * this.radiusX,\n            -s * this.radiusY,\n            s * this.radiusX,\n            c * this.radiusY,\n        );\n    }\n    transform(tr: Mat4): Ellipse {\n        if (this.angle == 0 && tr.getRotation() == 0) {\n            // No rotation, so we can just take the scale and translation\n            return new Ellipse(\n                tr.multVec2(this.center),\n                tr.m[0] * this.radiusX,\n                tr.m[5] * this.radiusY,\n            );\n        }\n        else {\n            // Rotation. We can't just add angles, as the scale can squeeze the\n            // ellipse and thus change the angle.\n            // Get the transformation which maps the unit circle onto the ellipse\n            let T = this.toMat2();\n            // Transform the transformation matrix with the rotation+scale matrix\n            const angle = tr.getRotation();\n            const scale = tr.getScale();\n            const M = Mat3.fromMat2(T).scale(scale.x, scale.y).rotate(angle);\n            T = M.toMat2();\n            // Return the ellipse made from the transformed unit circle\n            const ellipse = Ellipse.fromMat2(T);\n            ellipse.center = tr.multVec2(this.center);\n            return ellipse;\n        }\n    }\n    bbox(): Rect {\n        if (this.angle == 0) {\n            // No rotation, so the semi-major and semi-minor axis give the extends\n            return Rect.fromPoints(\n                this.center.sub(vec2(this.radiusX, this.radiusY)),\n                this.center.add(vec2(this.radiusX, this.radiusY)),\n            );\n        }\n        else {\n            // Rotation. We need to find the maximum x and y distance from the\n            // center of the rotated ellipse\n            const angle = deg2rad(this.angle);\n            const c = Math.cos(angle);\n            const s = Math.sin(angle);\n            const ux = this.radiusX * c;\n            const uy = this.radiusX * s;\n            const vx = this.radiusY * s;\n            const vy = this.radiusY * c;\n\n            const halfwidth = Math.sqrt(ux * ux + vx * vx);\n            const halfheight = Math.sqrt(uy * uy + vy * vy);\n\n            return Rect.fromPoints(\n                this.center.sub(vec2(halfwidth, halfheight)),\n                this.center.add(vec2(halfwidth, halfheight)),\n            );\n        }\n    }\n    area(): number {\n        return this.radiusX * this.radiusY * Math.PI;\n    }\n    clone(): Ellipse {\n        return new Ellipse(this.center, this.radiusX, this.radiusY, this.angle);\n    }\n    collides(shape: ShapeType): boolean {\n        return testEllipseShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        // Both methods work, but the second one is faster\n        /*let T = this.toTransform()\n        point = point.sub(this.center)\n        point = T.inverse.transform(point)\n        return testCirclePoint(new Circle(vec2(), 1), point)*/\n        point = point.sub(this.center);\n        const angle = deg2rad(this.angle);\n        const c = Math.cos(angle);\n        const s = Math.sin(angle);\n        const vx = point.x * c + point.y * s;\n        const vy = -point.x * s + point.y * c;\n        return vx * vx / (this.radiusX * this.radiusX)\n                + vy * vy / (this.radiusY * this.radiusY) < 1;\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastEllipse(origin, direction, this);\n    }\n    random(): Vec2 {\n        return this.center;\n    }\n}\n\nfunction segmentLineIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2) {\n    const ab = b.sub(a);\n    const cd = d.sub(c);\n    let s = ab.cross(cd);\n    if (s < 0.00001 && s > -0.00001) return null;\n    const ac = c.sub(a);\n    s = ac.cross(cd) / s;\n    if (s < 0 || s > 1) return null;\n    return a.add(ab.scale(s));\n}\n\n/**\n * @group Math\n */\nexport class Polygon {\n    pts: Vec2[];\n    constructor(pts: Vec2[]) {\n        if (pts.length < 3) {\n            throw new Error(\"Polygons should have at least 3 vertices\");\n        }\n        this.pts = pts;\n    }\n    transform(m: Mat4): Polygon {\n        return new Polygon(this.pts.map((pt) => m.multVec2(pt)));\n    }\n    bbox(): Rect {\n        const p1 = vec2(Number.MAX_VALUE);\n        const p2 = vec2(-Number.MAX_VALUE);\n        for (const pt of this.pts) {\n            p1.x = Math.min(p1.x, pt.x);\n            p2.x = Math.max(p2.x, pt.x);\n            p1.y = Math.min(p1.y, pt.y);\n            p2.y = Math.max(p2.y, pt.y);\n        }\n        return Rect.fromPoints(p1, p2);\n    }\n    area(): number {\n        let total = 0;\n        const l = this.pts.length;\n        for (let i = 0; i < l; i++) {\n            const p1 = this.pts[i];\n            const p2 = this.pts[(i + 1) % l];\n            total += p1.x * p2.y * 0.5;\n            total -= p2.x * p1.y * 0.5;\n        }\n        return Math.abs(total);\n    }\n    clone(): Polygon {\n        return new Polygon(this.pts.map((pt) => pt.clone()));\n    }\n    collides(shape: ShapeType | Vec2): boolean {\n        return testPolygonShape(this, shape);\n    }\n    contains(point: Vec2): boolean {\n        return this.collides(point);\n    }\n    raycast(origin: Vec2, direction: Vec2): RaycastResult {\n        return raycastPolygon(origin, direction, this);\n    }\n    random(): Vec2 {\n        /**\n         * TODO:\n         * - cut into triangles\n         * - choose a random triangle with probability linked to surface area\n         * - choose a random point in the triangle\n         */\n        return vec2();\n    }\n    cut(a: Vec2, b: Vec2): [Polygon | null, Polygon | null] {\n        const surfaceLine = new Line(a, b);\n        const left: Array<Vec2> = [];\n        const right: Array<Vec2> = [];\n        const ab = b.sub(a);\n        let prev = this.pts[this.pts.length - 1];\n        let ap = prev.sub(a);\n        let wasLeft = ab.cross(ap) > 0;\n        this.pts.forEach(p => {\n            ap = p.sub(a);\n            const isLeft = ab.cross(ap) > 0;\n            if (wasLeft != isLeft) {\n                // Since the points are on opposite sides of the line, we know they intersect\n                const intersection = segmentLineIntersection(prev, p, a, b);\n                left.push(intersection!);\n                right.push(intersection!);\n                wasLeft = isLeft;\n            }\n            (isLeft ? left : right).push(p);\n            prev = p;\n        });\n        return [\n            left.length ? new Polygon(left) : null,\n            right.length ? new Polygon(right) : null,\n        ];\n    }\n}\n\nexport function evaluateQuadratic(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    return pt1.scale(mt2).add(pt2.scale(2 * mt * t)).add(\n        pt3.scale(t2),\n    );\n}\n\nexport function evaluateQuadraticFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    const mt = 1 - t;\n    return pt2.sub(pt1).scale(2 * mt).add(pt3.sub(pt2).scale(2 * t));\n}\n\nexport function evaluateQuadraticSecondDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    t: number,\n) {\n    return pt3.sub(pt2.scale(2)).add(pt1).scale(2);\n}\n\nexport function evaluateBezier(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const t3 = t2 * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    const mt3 = mt2 * mt;\n    return pt1.scale(mt3).add(pt2.scale(3 * mt2 * t)).add(\n        pt3.scale(3 * mt * t2),\n    ).add(pt4.scale(t3));\n}\n\nexport function evaluateBezierFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const t2 = t * t;\n    const mt = 1 - t;\n    const mt2 = mt * mt;\n    return pt2.sub(pt1).scale(3 * mt2).add(pt3.sub(pt2).scale(6 * mt * t)).add(\n        pt4.sub(pt3).scale(3 * t2),\n    );\n}\n\nexport function evaluateBezierSecondDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const mt = 1 - t;\n    return pt3.sub(pt2.scale(2)).add(pt1).scale(6 * mt).add(\n        pt4.sub(pt3.scale(2)).add(pt2).scale(6 * t),\n    );\n}\n\nexport function evaluateCatmullRom(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const A = 0.5 * (((-t + 2) * t - 1) * t);\n    const B = 0.5 * (((3 * t - 5) * t) * t + 2);\n    const C = 0.5 * (((-3 * t + 4) * t + 1) * t);\n    const D = 0.5 * (((t - 1) * t) * t);\n    return pt1.scale(A).add(pt2.scale(B)).add(pt3.scale(C)).add(pt4.scale(D));\n}\n\nexport function evaluateCatmullRomFirstDerivative(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    t: number,\n) {\n    const A = 0.5 * ((-3 * t + 4) * t - 1);\n    const B = 0.5 * ((9 * t - 10) * t);\n    const C = 0.5 * ((-9 * t + 8) * t + 1);\n    const D = 0.5 * ((3 * t - 2) * t);\n    return pt1.scale(A).add(pt2.scale(B)).add(pt3.scale(C)).add(pt4.scale(D));\n}\n\nexport function normalizedCurve(curve: (t: number) => Vec2) {\n    const curveLength = curveLengthApproximation(curve);\n    const length = curveLength(1);\n    return (s: number) => {\n        const l = s * length;\n        const t = curveLength(l, true);\n        return curve(t);\n    };\n}\n\nexport function curveLengthApproximation(\n    curve: (t: number) => Vec2,\n    entries: number = 10,\n    detail: number = 10,\n) {\n    const llut = [0];\n    const tlut = [0];\n    const dt = 1 / (entries - 1);\n    const ddt = dt / detail;\n    let length = 0;\n    let pp = curve(0);\n    let t = 0;\n    for (let e = 1; e < entries; e++) {\n        for (let d = 0; d < detail; d++) {\n            t += ddt;\n            const p = curve(t);\n            const l = p.dist(pp);\n            length += l;\n            pp = p;\n        }\n        llut[e] = length;\n        tlut[e] = t;\n    }\n    tlut[entries - 1] = 1;\n    return (t: number, inverse: boolean = false) => {\n        if (inverse) {\n            const l = t;\n            if (l <= 0) return 0;\n            if (l >= length) return 1;\n            let index = 0;\n            while (llut[index + 1] < l) index++;\n            const t1 = tlut[index];\n            const t2 = tlut[index + 1];\n            const l1 = llut[index];\n            const l2 = llut[index + 1];\n            const a = (l - l1) / (l2 - l1);\n            return t1 + (t2 - t1) * a;\n        }\n        else {\n            if (t <= 0) return 0;\n            if (t >= 1) return llut[entries - 1];\n            let index = 0;\n            while (tlut[index + 1] < t) index++;\n            const t1 = tlut[index];\n            const t2 = tlut[index + 1];\n            const l1 = llut[index];\n            const l2 = llut[index + 1];\n            const a = (t - t1) / (t2 - t1);\n            return l1 + (l2 - l1) * a;\n        }\n    };\n}\n\n/**\n * A second order function returning an evaluator for the given 1D Hermite curve\n * @param pt1 First point\n * @param m1 First control point (tangent)\n * @param m2 Second control point (tangent)\n * @param pt2 Second point\n * @returns A function which gives the value on the 1D Hermite curve at t\n */\nexport function hermite(pt1: number, m1: number, m2: number, pt2: number) {\n    const A = 2 * pt1 + m1 - 2 * pt2 + m2;\n    const B = -3 * pt1 + 3 * pt2 - 2 * m1 - m2;\n    const C = m1;\n    const D = pt1;\n\n    return (t: number) => {\n        const t2 = t * t;\n        const t3 = t2 * t;\n        return A * t3 + B * t2 + C * t + D;\n    };\n}\n\n/**\n * A second order function returning an evaluator for the given 2D Cardinal curve\n * @param pt1 Previous point\n * @param pt2 First point\n * @param pt3 Second point\n * @param pt4 Next point\n * @param tension The tension of the curve, [0..1] from round to tight.\n * @param h The hermite function or one of its derivatives.\n * @returns A function which gives the value on the 2D Cardinal curve at t\n */\nexport function cardinal(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    tension: number,\n    h = hermite,\n) {\n    const hx = h(\n        pt2.x,\n        (1 - tension) * (pt3.x - pt1.x),\n        (1 - tension) * (pt4.x - pt2.x),\n        pt3.x,\n    );\n    const hy = h(\n        pt2.y,\n        (1 - tension) * (pt3.y - pt1.y),\n        (1 - tension) * (pt4.y - pt2.y),\n        pt3.y,\n    );\n    return (t: number) => {\n        return new Vec2(hx(t), hy(t));\n    };\n}\n\n/**\n * A second order function returning an evaluator for the given 2D Catmull-Rom curve\n * @param pt1 Previous point\n * @param pt2 First point\n * @param pt3 Second point\n * @param pt4 Next point\n * @returns A function which gives the value on the 2D Catmull-Rom curve at t\n */\nexport function catmullRom(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    h = hermite,\n) {\n    // A Catmull-Rom curve is a Cardinal curve with as tension 0.5\n    return cardinal(pt1, pt2, pt3, pt4, 0.5, h);\n}\n\n/**\n * A second order function returning an evaluator for the given 2D quadratic Bezier curve\n * @param pt1 First point\n * @param pt2 First control point\n * @param pt3 Second control point\n * @param pt4 Second point\n * @returns A function which gives the value on the 2D quadratic Bezier curve at t\n */\nexport function bezier(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    h = hermite,\n) {\n    // Convert the Bezier to a Catmull-Rom curve\n    return catmullRom(\n        pt4.add(pt1.sub(pt2).scale(6)),\n        pt1,\n        pt4,\n        pt1.add(pt4.sub(pt3).scale(6)),\n        h,\n    );\n}\n\n/**\n * A second order function returning an evaluator for the given 2D Kochanek\u2013Bartels curve\n * @param pt1 Previous point\n * @param pt2 First point\n * @param pt3 Second point\n * @param pt4 Next point\n * @param tension The tension of the curve, [-1..1] from round to tight.\n * @param continuity The continuity of the curve, [-1..1] from box corners to inverted corners.\n * @param bias The bias of the curve, [-1..1] from pre-shoot to post-shoot.\n * @returns A function which gives the value on the 2D Kochanek\u2013Bartels curve at t\n */\nexport function kochanekBartels(\n    pt1: Vec2,\n    pt2: Vec2,\n    pt3: Vec2,\n    pt4: Vec2,\n    tension: number,\n    continuity: number,\n    bias: number,\n    h = hermite,\n) {\n    const hx = h(\n        pt2.x,\n        0.5 * (1 - tension) * (1 + bias) * (1 + continuity) * (pt2.x - pt1.x)\n            + 0.5 * (1 - tension) * (1 - bias) * (1 - continuity)\n                * (pt3.x - pt2.x),\n        0.5 * (1 - tension) * (1 + bias) * (1 - continuity) * (pt3.x - pt2.x)\n            + 0.5 * (1 - tension) * (1 - bias) * (1 + continuity)\n                * (pt4.x - pt3.x),\n        pt3.x,\n    );\n    const hy = h(\n        pt2.y,\n        0.5 * (1 - tension) * (1 + bias) * (1 + continuity) * (pt2.y - pt1.y)\n            + 0.5 * (1 - tension) * (1 - bias) * (1 - continuity)\n                * (pt3.y - pt2.y),\n        0.5 * (1 - tension) * (1 + bias) * (1 - continuity) * (pt3.y - pt2.y)\n            + 0.5 * (1 - tension) * (1 - bias) * (1 + continuity)\n                * (pt4.y - pt3.y),\n        pt3.y,\n    );\n    return (t: number) => {\n        return new Vec2(hx(t), hy(t));\n    };\n}\n\n/**\n * A second order function returning an evaluator for the derivative of the given 1D Hermite curve\n * @param pt1 First point\n * @param m1 First control point (tangent)\n * @param m2 Second control point (tangent)\n * @param pt2 Second point\n * @returns A function which gives the first derivative on the 1D Hermite curve at t\n */\nexport function hermiteFirstDerivative(\n    pt1: number,\n    m1: number,\n    m2: number,\n    pt2: number,\n) {\n    const A = 2 * pt1 + m1 - 2 * pt2 + m2;\n    const B = -3 * pt1 + 3 * pt2 - 2 * m1 + m2;\n    const C = m1;\n\n    return (t: number) => {\n        const t2 = t * t;\n        return 3 * A * t2 + 2 * B * t + C;\n    };\n}\n\n// True if t is between 0 and 1\nfunction inZeroOneDomain(t: number) {\n    return 0 <= t && t <= 1;\n}\n\n// True if a and b are almost equal\nfunction approximately(a: number, b: number) {\n    return Math.abs(a - b) <= Number.EPSILON;\n}\n\n// Calculates the cube root \u221B of the given number\nfunction cubeRoot(v: number) {\n    if (v < 0) {\n        return -Math.pow(-v, 1 / 3);\n    }\n    else {\n        return Math.pow(v, 1 / 3);\n    }\n}\n\n// Get all cubic roots of the given 1 dimensional bezier\nfunction getCubicRoots(pa: number, pb: number, pc: number, pd: number) {\n    let a = 3 * pa - 6 * pb + 3 * pc;\n    let b = -3 * pa + 3 * pb;\n    let c = pa;\n    let d = -pa + 3 * pb - 3 * pc + pd;\n\n    if (approximately(d, 0)) {\n        if (approximately(a, 0)) {\n            if (approximately(b, 0)) {\n                return [];\n            }\n            return [-c / b].filter(inZeroOneDomain);\n        }\n        const q = Math.sqrt(b * b - 4 * a * c);\n        const a2 = 2 * a;\n        return [(q - b) / a2, (-b - q) / a2].filter(inZeroOneDomain);\n    }\n\n    a /= d;\n    b /= d;\n    c /= d;\n\n    const p = (3 * b - a * a) / 3;\n    const p3 = p / 3;\n    const q = (2 * a * a * a - 9 * a * b + 27 * c) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n\n    if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = Math.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\n        const phi = Math.acos(cosphi);\n        const crtr = cubeRoot(r);\n        const t1 = 2 * crtr;\n        const root1 = t1 * Math.cos(phi / 3) - a / 3;\n        const root2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3;\n        const root3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3;\n        return [root1, root2, root3].filter(inZeroOneDomain);\n    }\n\n    if (discriminant === 0) {\n        const u1 = q2 < 0 ? cubeRoot(-q2) : -cubeRoot(q2);\n        const root1 = 2 * u1 - a / 3;\n        const root2 = -u1 - a / 3;\n        return [root1, root2].filter(inZeroOneDomain);\n    }\n\n    const sd = Math.sqrt(discriminant);\n    const u1 = cubeRoot(sd - q2);\n    const v1 = cubeRoot(sd + q2);\n    const root1 = u1 - v1 - a / 3;\n    return [root1].filter(inZeroOneDomain);\n}\n\n// Returns y for the given x on the cubic bezier by first calculating the t for the given x, then calculating y from t\nfunction cubicBezierYforX(a: Vec2, b: Vec2, c: Vec2, d: Vec2, x: number) {\n    // Get t for x\n    const t = getCubicRoots(a.x - x, b.x - x, c.x - x, d.x - x);\n    if (t.length > 0) {\n        // Get y for t\n        return evaluateBezier(a, b, c, d, t[0]).y;\n    }\n    return NaN;\n}\n\nexport function easingLinear(keys: Vec2[]) {\n    if (!keys || keys.length == 0) {\n        throw new Error(\n            \"Need at least one point for easingLinear.\",\n        );\n    }\n    const len = keys.length;\n    return (x: number) => {\n        // Before start\n        if (x <= 0 || keys.length == 1 || x <= keys[0].x) {\n            return keys[0].y;\n        }\n        for (let i = 0; i < len; i++) {\n            if (keys[i].x >= x) {\n                // Linear map\n                return map(\n                    x,\n                    keys[i - 1].x,\n                    keys[i].x,\n                    keys[i - 1].y,\n                    keys[i].y,\n                );\n            }\n        }\n        // After end\n        return keys[keys.length - 1].y;\n    };\n}\n\nexport function easingCubicBezier(p1: Vec2, p2: Vec2) {\n    return (x: number) => {\n        return cubicBezierYforX(vec2(0, 0), p1, p2, vec2(1, 1), x);\n    };\n}\n\nexport type StepPosition =\n    | \"jump-start\"\n    | \"jump-end\"\n    | \"jump-none\"\n    | \"jump-both\";\n\nexport function easingSteps(\n    steps: number,\n    position: StepPosition = \"jump-end\",\n) {\n    const xdist = 1 / steps;\n    const jumpStart = position == \"jump-start\" || position == \"jump-both\";\n    const jumpEnd = position == \"jump-end\" || position == \"jump-both\";\n    const ydist = 1 / (steps + (jumpEnd ? 1 : 0));\n    const startY = jumpStart ? ydist : 0;\n    return (x: number) => {\n        const step = Math.floor(x / xdist);\n        return startY + step * ydist;\n    };\n}\n\nexport type SatResult = {\n    normal: Vec2;\n    distance: number;\n};\n\nexport function sat(p1: Polygon, p2: Polygon): SatResult | null {\n    let overlap = Number.MAX_VALUE;\n    let result: SatResult = { normal: vec2(0), distance: 0 };\n    for (const poly of [p1, p2]) {\n        for (let i = 0; i < poly.pts.length; i++) {\n            const a = poly.pts[i];\n            const b = poly.pts[(i + 1) % poly.pts.length];\n            const axisProj = b.sub(a).normal().unit();\n            let min1 = Number.MAX_VALUE;\n            let max1 = -Number.MAX_VALUE;\n            for (let j = 0; j < p1.pts.length; j++) {\n                const q = p1.pts[j].dot(axisProj);\n                min1 = Math.min(min1, q);\n                max1 = Math.max(max1, q);\n            }\n            let min2 = Number.MAX_VALUE;\n            let max2 = -Number.MAX_VALUE;\n            for (let j = 0; j < p2.pts.length; j++) {\n                const q = p2.pts[j].dot(axisProj);\n                min2 = Math.min(min2, q);\n                max2 = Math.max(max2, q);\n            }\n            const o = Math.min(max1, max2) - Math.max(min1, min2);\n            if (o < 0) {\n                return null;\n            }\n            if (o < Math.abs(overlap)) {\n                const o1 = max2 - min1;\n                const o2 = min2 - max1;\n                overlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2;\n                result.normal = axisProj;\n                result.distance = overlap;\n            }\n        }\n    }\n    return result;\n}\n\n// true if the angle is oriented counter clockwise\nfunction isOrientedCcw(a: Vec2, b: Vec2, c: Vec2) {\n    // return det(b-a, c-a) >= 0\n    return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) >= 0;\n}\n\n// true if the polygon is oriented counter clockwise\nfunction isOrientedCcwPolygon(polygon: Vec2[]) {\n    let total = 0;\n    let prev: Vec2 = polygon[polygon.length - 1];\n    for (let i = 0; i < polygon.length; i++) {\n        total += (polygon[i].x - prev.x) * (polygon[i].y + prev.y);\n        prev = polygon[i];\n    }\n    return total < 0;\n}\n\n// true if a and b are on the same side of the line c->d\nfunction onSameSide(a: Vec2, b: Vec2, c: Vec2, d: Vec2) {\n    const px = d.x - c.x, py = d.y - c.y;\n    // return det(p, a-c) * det(p, b-c) >= 0\n    const l = px * (a.y - c.y) - py * (a.x - c.x);\n    const m = px * (b.y - c.y) - py * (b.x - c.x);\n    return l * m >= 0;\n}\n\n// true if p is contained in the triangle abc\nfunction pointInTriangle(p: Vec2, a: Vec2, b: Vec2, c: Vec2) {\n    return onSameSide(p, a, b, c) && onSameSide(p, b, a, c)\n        && onSameSide(p, c, a, b);\n}\n\n// true if any vertex in the list `vertices' is in the triangle abc.\nfunction someInTriangle(vertices: Vec2[], a: Vec2, b: Vec2, c: Vec2) {\n    for (const p of vertices) {\n        if (\n            (p !== a) && (p !== b) && (p !== c) && pointInTriangle(p, a, b, c)\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// true if the triangle is an ear, which is whether it can be cut off from the polygon without leaving a hole behind\nfunction isEar(a: Vec2, b: Vec2, c: Vec2, vertices: Vec2[]) {\n    return isOrientedCcw(a, b, c) && !someInTriangle(vertices, a, b, c);\n}\n\nexport function triangulate(pts: Vec2[]): Vec2[][] {\n    if (pts.length < 3) {\n        return [];\n    }\n    if (pts.length == 3) {\n        return [pts];\n    }\n\n    /* Create a list of indexes to the previous and next points of a given point\n    prev_idx[i] gives the index to the previous point of the point at i */\n    let nextIdx = [];\n    let prevIdx = [];\n    let idx = 0;\n    for (let i = 0; i < pts.length; i++) {\n        const lm = pts[idx];\n        const pt = pts[i];\n        if (pt.x < lm.x || (pt.x == lm.x && pt.y < lm.y)) {\n            idx = idx;\n        }\n        nextIdx[i] = i + 1;\n        prevIdx[i] = i - 1;\n    }\n    nextIdx[nextIdx.length - 1] = 0;\n    prevIdx[0] = prevIdx.length - 1;\n\n    // If the polygon is not counter clockwise, swap the lists, thus reversing the winding\n    if (!isOrientedCcwPolygon(pts)) {\n        [nextIdx, prevIdx] = [prevIdx, nextIdx];\n    }\n\n    const concaveVertices = [];\n    for (let i = 0; i < pts.length; ++i) {\n        if (!isOrientedCcw(pts[prevIdx[i]], pts[i], pts[nextIdx[i]])) {\n            concaveVertices.push(pts[i]);\n        }\n    }\n\n    const triangles = [];\n    let nVertices = pts.length;\n    let current = 1;\n    let skipped = 0;\n    let next;\n    let prev;\n    while (nVertices > 3) {\n        next = nextIdx[current];\n        prev = prevIdx[current];\n        const a = pts[prev];\n        const b = pts[current];\n        const c = pts[next];\n        if (isEar(a, b, c, concaveVertices)) {\n            triangles.push([a, b, c]);\n            nextIdx[prev] = next;\n            prevIdx[next] = prev;\n            concaveVertices.splice(concaveVertices.indexOf(b), 1);\n            --nVertices;\n            skipped = 0;\n        }\n        else if (++skipped > nVertices) {\n            return [];\n        }\n        current = next;\n    }\n    next = nextIdx[current];\n    prev = prevIdx[current];\n    triangles.push([pts[prev], pts[current], pts[next]]);\n\n    return triangles;\n}\n\nexport function isConvex(pts: Vec2[]) {\n    if (pts.length < 3) {\n        return false;\n    }\n\n    // a polygon is convex if all corners turn in the same direction\n    // turning direction can be determined using the cross-product of\n    // the forward difference vectors\n    let i = pts.length - 2;\n    let j = pts.length - 1;\n    let k = 0;\n    let p = pts[j].sub(pts[i]);\n    let q = pts[k].sub(pts[j]);\n    let winding = p.cross(q);\n\n    while (k + 1 < pts.length) {\n        i = j;\n        j = k;\n        k++;\n        p = pts[j].sub(pts[i]);\n        q = pts[k].sub(pts[j]);\n\n        if (p.cross(q) * winding < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n", "import { Color } from \"../math/color\";\nimport { Vec2 } from \"../math/math\";\n\nexport const arrayIsColor = (arr: unknown[]): arr is Color[] => {\n    return arr[0] instanceof Color;\n};\n\nexport const arrayIsVec2 = (arr: unknown[]): arr is Vec2[] => {\n    return arr[0] instanceof Vec2;\n};\n\nexport const arrayIsNumber = (arr: unknown[]): arr is number[] => {\n    return typeof arr[0] === \"number\";\n};\n\nexport function isClass(obj: any): obj is Function {\n    return obj?.prototype\n        && Object.getOwnPropertyDescriptor(obj.prototype, \"constructor\")\n            !== undefined;\n}\n", "export class BinaryHeap<T> {\n    _items: T[];\n    _compareFn: (a: T, b: T) => boolean;\n\n    /**\n     * Creates a binary heap with the given compare function\n     * Not passing a compare function will give a min heap\n     */\n    constructor(compareFn = (a: T, b: T) => a < b) {\n        this._compareFn = compareFn;\n        this._items = [];\n    }\n\n    /**\n     * Insert an item into the binary heap\n     */\n    insert(item: T) {\n        this._items.push(item);\n        this.moveUp(this._items.length - 1);\n    }\n\n    /**\n     * Remove the smallest item from the binary heap in case of a min heap\n     * or the greatest item from the binary heap in case of a max heap\n     */\n    remove() {\n        if (this._items.length === 0) {\n            return null;\n        }\n        const item = this._items[0];\n        const lastItem = this._items.pop();\n        if (this._items.length !== 0) {\n            this._items[0] = lastItem as T;\n            this.moveDown(0);\n        }\n        return item;\n    }\n\n    /**\n     * Remove all items\n     */\n    clear() {\n        this._items.splice(0, this._items.length);\n    }\n\n    moveUp(pos: number) {\n        while (pos > 0) {\n            const parent = Math.floor((pos - 1) / 2);\n            if (!this._compareFn(this._items[pos], this._items[parent])) {\n                if (this._items[pos] >= this._items[parent]) {\n                    break;\n                }\n            }\n            this.swap(pos, parent);\n            pos = parent;\n        }\n    }\n\n    moveDown(pos: number) {\n        while (pos < Math.floor(this._items.length / 2)) {\n            let child = 2 * pos + 1;\n            if (\n                child < this._items.length - 1\n                && !this._compareFn(this._items[child], this._items[child + 1])\n            ) {\n                ++child;\n            }\n            if (this._compareFn(this._items[pos], this._items[child])) {\n                break;\n            }\n            this.swap(pos, child);\n            pos = child;\n        }\n    }\n\n    swap(index1: number, index2: number) {\n        [this._items[index1], this._items[index2]] = [\n            this._items[index2],\n            this._items[index1],\n        ];\n    }\n\n    /**\n     * Returns the amount of items\n     */\n    get length() {\n        return this._items.length;\n    }\n}\n", "export function base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binstr = window.atob(base64);\n    const len = binstr.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binstr.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n    return base64ToArrayBuffer(url.split(\",\")[1]);\n}\n\nexport function download(filename: string, url: string) {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = filename;\n    a.click();\n}\n\nexport function downloadText(filename: string, text: string) {\n    download(filename, \"data:text/plain;charset=utf-8,\" + text);\n}\n\nexport function downloadJSON(filename: string, data: any) {\n    downloadText(filename, JSON.stringify(data));\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    download(filename, url);\n    URL.revokeObjectURL(url);\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/);\nexport const getFileExt = (p: string) => p.split(\".\").pop();\nexport const getFileName = (p: string) => p.split(\".\").slice(0, -1).join(\".\");\n", "export function deepEq(o1: any, o2: any): boolean {\n    if (o1 === o2) {\n        return true;\n    }\n    const t1 = typeof o1;\n    const t2 = typeof o2;\n    if (t1 !== t2) {\n        return false;\n    }\n    if (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n        if (Array.isArray(o1) !== Array.isArray(o2)) {\n            return false;\n        }\n        const k1 = Object.keys(o1);\n        const k2 = Object.keys(o2);\n        if (k1.length !== k2.length) {\n            return false;\n        }\n        for (const k of k1) {\n            const v1 = o1[k];\n            const v2 = o2[k];\n            if (!deepEq(v1, v2)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n", "export class Registry<T> extends Map<number, T> {\n    private lastID: number = 0;\n    push(v: T): number {\n        const id = this.lastID;\n        this.set(id, v);\n        this.lastID++;\n        return id;\n    }\n    pushd(v: T): () => void {\n        const id = this.push(v);\n        return () => this.delete(id);\n    }\n}\n\n/**\n * A controller for all events in KAPLAY.\n *\n * @example\n * ```js\n * // Create a new event\n * const logHi = onUpdate(() => {\n *    debug.log(\"hi\");\n * });\n *\n * // Pause the event\n * logHi.paused = true;\n *\n * // Cancel the event\n * logHi.cancel();\n *\n * ```\n * @group Events\n */\nexport class KEventController {\n    /** If the event is paused */\n    paused: boolean = false;\n    /** Cancel the event */\n    readonly cancel: () => void;\n\n    constructor(cancel: () => void) {\n        this.cancel = cancel;\n    }\n    static join(events: KEventController[]): KEventController {\n        const ev = new KEventController(() =>\n            events.forEach((e) => e.cancel())\n        );\n        Object.defineProperty(ev, \"paused\", {\n            get: () => events[0].paused,\n            set: (p: boolean) => events.forEach((e) => e.paused = p),\n        });\n        ev.paused = false;\n        return ev;\n    }\n}\n\nexport class KEvent<Args extends any[] = any[]> {\n    private handlers: Registry<(...args: Args) => void> = new Registry();\n\n    add(action: (...args: Args) => void): KEventController {\n        const cancel = this.handlers.pushd((...args: Args) => {\n            if (ev.paused) return;\n            action(...args);\n        });\n        const ev = new KEventController(cancel);\n        return ev;\n    }\n    addOnce(\n        action: (...args: (Args | PromiseLike<Args>)[]) => void,\n    ): KEventController {\n        const ev = this.add((...args) => {\n            ev.cancel();\n            action(...args);\n        });\n        return ev;\n    }\n    next(): Promise<Args> {\n        return new Promise((res) => this.addOnce(res));\n    }\n    trigger(...args: Args) {\n        this.handlers.forEach((action) => action(...args));\n    }\n    numListeners(): number {\n        return this.handlers.size;\n    }\n    clear() {\n        this.handlers.clear();\n    }\n}\n\n// TODO: only accept one argument?\nexport class KEventHandler<EventMap extends Record<string, any[]>> {\n    private handlers: Partial<\n        {\n            [Name in keyof EventMap]: KEvent<EventMap[Name]>;\n        }\n    > = {};\n    registers: Partial<\n        {\n            [Name in keyof EventMap]: Registry<\n                (...args: EventMap[Name]) => void\n            >;\n        }\n    > = {};\n\n    on<Name extends keyof EventMap>(\n        name: Name,\n        action: (...args: EventMap[Name]) => void,\n    ): KEventController {\n        if (!this.handlers[name]) {\n            this.handlers[name] = new KEvent<EventMap[Name]>();\n        }\n        return this.handlers[name].add(action);\n    }\n    onOnce<Name extends keyof EventMap>(\n        name: Name,\n        action: (...args: EventMap[Name]) => void,\n    ): KEventController {\n        const ev = this.on(name, (...args) => {\n            ev.cancel();\n            action(...args);\n        });\n        return ev;\n    }\n    next<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n        return new Promise((res) => {\n            // TODO: can only pass 1 val to resolve()\n            this.onOnce(name, (...args: EventMap[Name]) => res(args[0]));\n        });\n    }\n    trigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n        if (this.handlers[name]) {\n            this.handlers[name].trigger(...args);\n        }\n    }\n    remove<Name extends keyof EventMap>(name: Name) {\n        delete this.handlers[name];\n    }\n    clear() {\n        this.handlers = {};\n    }\n    numListeners<Name extends keyof EventMap>(name: Name): number {\n        return this.handlers[name]?.numListeners() ?? 0;\n    }\n}\n", "const warned = new Set();\n\nexport const getErrorMessage = (error: unknown) =>\n    (error instanceof Error) ? error.message : String(error);\n\nexport function deprecate(\n    oldName: string,\n    newName: string,\n    newFunc: (...args: unknown[]) => any,\n) {\n    return (...args: unknown[]) => {\n        deprecateMsg(oldName, newName);\n        return newFunc(...args);\n    };\n}\n\nexport function warn(msg: string) {\n    if (!warned.has(msg)) {\n        warned.add(msg);\n        console.warn(msg);\n    }\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n    warn(`${oldName} is deprecated. Use ${newName} instead.`);\n}\n", "export function toFixed(n: number, f: number) {\n    return Number(n.toFixed(f));\n}\n", "type Func = (...args: any[]) => any;\n\nexport function overload2<A extends Func, B extends Func>(\n    fn1: A,\n    fn2: B,\n): A & B {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n    }) as A & B;\n}\n\nexport function overload3<\n    A extends Func,\n    B extends Func,\n    C extends Func,\n>(fn1: A, fn2: B, fn3: C): A & B & C {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n        if (al === fn3.length) return fn3(...args);\n    }) as A & B & C;\n}\n\nexport function overload4<\n    A extends Func,\n    B extends Func,\n    C extends Func,\n    D extends Func,\n>(fn1: A, fn2: B, fn3: C, fn4: D): A & B & C & D {\n    return ((...args) => {\n        const al = args.length;\n        if (al === fn1.length) return fn1(...args);\n        if (al === fn2.length) return fn2(...args);\n        if (al === fn3.length) return fn3(...args);\n        if (al === fn4.length) return fn4(...args);\n    }) as A & B & C & D;\n}\n", "const enum EnumRunesCode {\n    HIGH_SURROGATE_START = 0xd800,\n    HIGH_SURROGATE_END = 0xdbff,\n\n    LOW_SURROGATE_START = 0xdc00,\n\n    REGIONAL_INDICATOR_START = 0x1f1e6,\n    REGIONAL_INDICATOR_END = 0x1f1ff,\n\n    FITZPATRICK_MODIFIER_START = 0x1f3fb,\n    FITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n    VARIATION_MODIFIER_START = 0xfe00,\n    VARIATION_MODIFIER_END = 0xfe0f,\n\n    DIACRITICAL_MARKS_START = 0x20d0,\n    DIACRITICAL_MARKS_END = 0x20ff,\n\n    SUBDIVISION_INDICATOR_START = 0x1f3f4,\n    TAGS_START = 0xe0000,\n    TAGS_END = 0xe007f,\n\n    ZWJ = 0x200d,\n}\n\nconst GRAPHEMES = Object.freeze([\n    0x0308, // ( \u25CC\u0308 ) COMBINING DIAERESIS\n    0x0937, // ( \u0937 ) DEVANAGARI LETTER SSA\n    0x093F, // ( \u093F ) DEVANAGARI VOWEL SIGN I\n    0x0BA8, // ( \u0BA8 ) TAMIL LETTER NA\n    0x0BBF, // ( \u0BBF ) TAMIL VOWEL SIGN I\n    0x0BCD, // ( \u25CC\u0BCD) TAMIL SIGN VIRAMA\n    0x0E31, // ( \u25CC\u0E31 ) THAI CHARACTER MAI HAN-AKAT\n    0x0E33, // ( \u0E33 ) THAI CHARACTER SARA AM\n    0x0E40, // ( \u0E40 ) THAI CHARACTER SARA E\n    0x0E49, // ( \u0E40 ) THAI CHARACTER MAI THO\n    0x1100, // ( \u1100 ) HANGUL CHOSEONG KIYEOK\n    0x1161, // ( \u1161 ) HANGUL JUNGSEONG A\n    0x11A8, // ( \u11A8 ) HANGUL JONGSEONG KIYEOK\n]);\n\nenum EnumCodeUnits {\n    unit_1 = 1,\n    unit_2 = 2,\n    unit_4 = 4,\n}\n\nexport function runes(string: string): string[] {\n    if (typeof string !== \"string\") {\n        throw new TypeError(\"string cannot be undefined or null\");\n    }\n    const result: string[] = [];\n    let i = 0;\n    let increment = 0;\n    while (i < string.length) {\n        increment += nextUnits(i + increment, string);\n        if (isGrapheme(string[i + increment])) {\n            increment++;\n        }\n        if (isVariationSelector(string[i + increment])) {\n            increment++;\n        }\n        if (isDiacriticalMark(string[i + increment])) {\n            increment++;\n        }\n        if (isZeroWidthJoiner(string[i + increment])) {\n            increment++;\n            continue;\n        }\n        result.push(string.substring(i, i + increment));\n        i += increment;\n        increment = 0;\n    }\n    return result;\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\n// Subdivision flags: 14 code units (7 code points)\nfunction nextUnits(i: number, string: string) {\n    const current = string[i];\n    // If we don't have a value that is part of a surrogate pair, or we're at\n    // the end, only take the value at i\n    if (!isFirstOfSurrogatePair(current) || i === string.length - 1) {\n        return EnumCodeUnits.unit_1;\n    }\n\n    const currentPair = current + string[i + 1];\n    const nextPair = string.substring(i + 2, i + 5);\n\n    // Country flags are comprised of two regional indicator symbols,\n    // each represented by a surrogate pair.\n    // See http://emojipedia.org/flags/\n    // If both pairs are regional indicator symbols, take 4\n    if (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair)) {\n        return EnumCodeUnits.unit_4;\n    }\n\n    // https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\n    // See https://emojipedia.org/emoji-tag-sequence/\n    // If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\n    // then find next closest U+E007F(CANCEL TAG)\n    if (\n        isSubdivisionFlag(currentPair)\n        && isSupplementarySpecialpurposePlane(nextPair)\n    ) {\n        return string.slice(i).indexOf(\n            String.fromCodePoint(EnumRunesCode.TAGS_END),\n        ) + 2;\n    }\n\n    // If the next pair make a Fitzpatrick skin tone\n    // modifier, take 4\n    // See http://emojipedia.org/modifiers/\n    // Technically, only some code points are meant to be\n    // combined with the skin tone modifiers. This function\n    // does not check the current pair to see if it is\n    // one of them.\n    if (isFitzpatrickModifier(nextPair)) {\n        return EnumCodeUnits.unit_4;\n    }\n    return EnumCodeUnits.unit_2;\n}\n\nfunction isFirstOfSurrogatePair(string: string) {\n    return string\n        && betweenInclusive(\n            string[0].charCodeAt(0),\n            EnumRunesCode.HIGH_SURROGATE_START,\n            EnumRunesCode.HIGH_SURROGATE_END,\n        );\n}\n\nfunction isRegionalIndicator(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.REGIONAL_INDICATOR_START,\n        EnumRunesCode.REGIONAL_INDICATOR_END,\n    );\n}\n\nfunction isSubdivisionFlag(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.SUBDIVISION_INDICATOR_START,\n        EnumRunesCode.SUBDIVISION_INDICATOR_START,\n    );\n}\n\nfunction isFitzpatrickModifier(string: string) {\n    return betweenInclusive(\n        codePointFromSurrogatePair(string),\n        EnumRunesCode.FITZPATRICK_MODIFIER_START,\n        EnumRunesCode.FITZPATRICK_MODIFIER_END,\n    );\n}\n\nfunction isVariationSelector(string: string) {\n    return typeof string === \"string\"\n        && betweenInclusive(\n            string.charCodeAt(0),\n            EnumRunesCode.VARIATION_MODIFIER_START,\n            EnumRunesCode.VARIATION_MODIFIER_END,\n        );\n}\n\nfunction isDiacriticalMark(string: string) {\n    return typeof string === \"string\"\n        && betweenInclusive(\n            string.charCodeAt(0),\n            EnumRunesCode.DIACRITICAL_MARKS_START,\n            EnumRunesCode.DIACRITICAL_MARKS_END,\n        );\n}\n\nfunction isSupplementarySpecialpurposePlane(string: string) {\n    const codePoint = string.codePointAt(0);\n    return (typeof string === \"string\" && typeof codePoint === \"number\"\n        && betweenInclusive(\n            codePoint,\n            EnumRunesCode.TAGS_START,\n            EnumRunesCode.TAGS_END,\n        ));\n}\n\nfunction isGrapheme(string: string) {\n    return typeof string === \"string\"\n        && GRAPHEMES.includes(string.charCodeAt(0));\n}\n\nfunction isZeroWidthJoiner(string: string) {\n    return typeof string === \"string\"\n        && string.charCodeAt(0) === EnumRunesCode.ZWJ;\n}\n\nfunction codePointFromSurrogatePair(pair: string) {\n    const highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START;\n    const lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START;\n    return (highOffset << 10) + lowOffset + 0x10000;\n}\n\nfunction betweenInclusive(value: number, lower: number, upper: number) {\n    return value >= lower && value <= upper;\n}\n\nexport function substring(string: string, start?: number, width?: number) {\n    const chars = runes(string);\n    if (start === undefined) {\n        return string;\n    }\n    if (start >= chars.length) {\n        return \"\";\n    }\n    const rest = chars.length - start;\n    const stringWidth = width === undefined ? rest : width;\n    let endIndex: number | null = start + stringWidth;\n\n    if (endIndex > (start + rest)) {\n        endIndex = null;\n    }\n\n    if (endIndex === null) {\n        return chars.slice(start).join(\"\");\n    }\n\n    return chars.slice(start, endIndex).join(\"\");\n}\n", "export const isEqOrIncludes = <T>(listOrSmt: T | T[], el: unknown): boolean => {\n    if (Array.isArray(listOrSmt)) {\n        return (listOrSmt as any[])?.includes(el);\n    }\n\n    return listOrSmt === el;\n};\n\nexport const setHasOrIncludes = <K>(\n    set: Set<K>,\n    key: K | K[],\n): boolean => {\n    if (Array.isArray(key)) {\n        return key.some((k) => set.has(k));\n    }\n\n    return set.has(key);\n};\n\nexport const mapAddOrPush = <K, V>(\n    map: Map<K, V[]>,\n    key: K,\n    value: V,\n): void => {\n    if (map.has(key)) {\n        map.get(key)?.push(value);\n    }\n    else {\n        map.set(key, [value]);\n    }\n};\n", "export const uid = (() => {\n    let id = 0;\n    return () => id++;\n})();\n", "{\n  \"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\",\n      \"17\": \"capture\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  },\n  \"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"9\": \"select\",\n      \"10\": \"lstick\",\n      \"16\": \"start\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 }\n    }\n  },\n  \"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"16\": \"select\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 }\n    }\n  },\n  \"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\",\n      \"17\": \"capture\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  },\n  \"default\": {\n    \"buttons\": {\n      \"0\": \"south\",\n      \"1\": \"east\",\n      \"2\": \"west\",\n      \"3\": \"north\",\n      \"4\": \"lshoulder\",\n      \"5\": \"rshoulder\",\n      \"6\": \"ltrigger\",\n      \"7\": \"rtrigger\",\n      \"8\": \"select\",\n      \"9\": \"start\",\n      \"10\": \"lstick\",\n      \"11\": \"rstick\",\n      \"12\": \"dpad-up\",\n      \"13\": \"dpad-down\",\n      \"14\": \"dpad-left\",\n      \"15\": \"dpad-right\",\n      \"16\": \"home\"\n    },\n    \"sticks\": {\n      \"left\": { \"x\": 0, \"y\": 1 },\n      \"right\": { \"x\": 2, \"y\": 3 }\n    }\n  }\n}\n", "import type { KAPLAYCtx, Key, KGamepadButton, MouseButton } from \"../types\";\nimport { mapAddOrPush } from \"../utils\";\nimport { appState } from \"./app\";\n\n/**\n * A button binding.\n *\n * @group Button Bindings\n */\nexport type ButtonBinding = {\n    keyboard?: Key | Key[];\n    gamepad?: KGamepadButton | KGamepadButton[];\n    mouse?: MouseButton | MouseButton[];\n};\n\n/**\n * A buttons definition for an action (jump, walk-left, run).\n *\n * @group Button Bindings\n */\nexport type ButtonsDef = Record<string, ButtonBinding>;\n\n/**\n * A button binding device\n *\n * @group Button Bindings\n */\nexport type ButtonBindingDevice = \"keyboard\" | \"gamepad\" | \"mouse\";\n\nexport const getLastInputDeviceType: KAPLAYCtx[\"getLastInputDeviceType\"] =\n    () => {\n        return appState.lastInputDevice;\n    };\n\n// pass the user `buttons` definition to different keymaps\nexport const parseButtonBindings = () => {\n    const btns = appState.buttons;\n\n    for (const b in btns) {\n        const keyboardBtns = btns[b].keyboard && [btns[b].keyboard].flat();\n        const gamepadBtns = btns[b].gamepad && [btns[b].gamepad].flat();\n        const mouseBtns = btns[b].mouse && [btns[b].mouse].flat();\n\n        if (keyboardBtns) {\n            keyboardBtns.forEach((k) => {\n                mapAddOrPush(appState.buttonsByKey, k, b);\n            });\n        }\n\n        if (gamepadBtns) {\n            gamepadBtns.forEach((g) => {\n                mapAddOrPush(appState.buttonsByGamepad, g, b);\n            });\n        }\n\n        if (mouseBtns) {\n            mouseBtns.forEach((m) => {\n                mapAddOrPush(appState.buttonsByMouse, m, b);\n            });\n        }\n    }\n};\n", "// everything related to canvas, game loop and input\n\nimport type {\n    Cursor,\n    GamepadDef,\n    GamepadStick,\n    Key,\n    KGamePad,\n    KGamepadButton,\n    MouseButton,\n} from \"../types\";\n\nimport { map, Vec2, vec2 } from \"../math/math\";\n\nimport {\n    isEqOrIncludes,\n    KEventController,\n    KEventHandler,\n    overload2,\n    setHasOrIncludes,\n} from \"../utils\";\n\nimport GAMEPAD_MAP from \"../data/gamepad.json\";\nimport {\n    type ButtonBinding,\n    type ButtonsDef,\n    getLastInputDeviceType,\n    parseButtonBindings,\n} from \"./inputBindings\";\n\nexport class ButtonState<T = string> {\n    pressed: Set<T> = new Set([]);\n    pressedRepeat: Set<T> = new Set([]);\n    released: Set<T> = new Set([]);\n    down: Set<T> = new Set([]);\n    update() {\n        this.pressed.clear();\n        this.released.clear();\n        this.pressedRepeat.clear();\n    }\n    press(btn: T) {\n        this.pressed.add(btn);\n        this.pressedRepeat.add(btn);\n        this.down.add(btn);\n    }\n    pressRepeat(btn: T) {\n        this.pressedRepeat.add(btn);\n    }\n    release(btn: T) {\n        this.down.delete(btn);\n        this.pressed.delete(btn);\n        this.released.add(btn);\n    }\n}\n\nclass GamepadState {\n    buttonState: ButtonState<KGamepadButton> = new ButtonState();\n    stickState: Map<GamepadStick, Vec2> = new Map();\n}\n\nclass FPSCounter {\n    private dts: number[] = [];\n    private timer: number = 0;\n    fps: number = 0;\n    tick(dt: number) {\n        this.dts.push(dt);\n        this.timer += dt;\n        if (this.timer >= 1) {\n            this.timer = 0;\n            this.fps = Math.round(\n                1 / (this.dts.reduce((a, b) => a + b) / this.dts.length),\n            );\n            this.dts = [];\n        }\n    }\n}\n\nexport type App = ReturnType<typeof initApp>;\nexport type AppState = ReturnType<typeof initAppState>;\n\nexport let appState: AppState;\n\nexport const initAppState = (opt: {\n    canvas: HTMLCanvasElement;\n    touchToMouse?: boolean;\n    gamepads?: Record<string, GamepadDef>;\n    pixelDensity?: number;\n    maxFPS?: number;\n    buttons?: ButtonsDef;\n}) => {\n    const buttons = opt.buttons ?? {};\n\n    return {\n        canvas: opt.canvas,\n        buttons: buttons,\n        buttonsByKey: new Map<Key, string[]>(),\n        buttonsByMouse: new Map<MouseButton, string[]>(),\n        buttonsByGamepad: new Map<KGamepadButton, string[]>(),\n        loopID: null as null | number,\n        stopped: false,\n        dt: 0,\n        fixedDt: 1 / 50,\n        restDt: 0,\n        time: 0,\n        realTime: 0,\n        fpsCounter: new FPSCounter(),\n        timeScale: 1,\n        skipTime: false,\n        isHidden: false,\n        numFrames: 0,\n        mousePos: new Vec2(0),\n        mouseDeltaPos: new Vec2(0),\n        keyState: new ButtonState<Key>(),\n        mouseState: new ButtonState<MouseButton>(),\n        mergedGamepadState: new GamepadState(),\n        gamepadStates: new Map<number, GamepadState>(),\n        lastInputDevice: null as \"mouse\" | \"keyboard\" | \"gamepad\" | null,\n        // unified input state\n        buttonState: new ButtonState<string>(),\n        gamepads: [] as KGamePad[],\n        charInputted: [] as string[],\n        isMouseMoved: false,\n        lastWidth: opt.canvas.offsetWidth,\n        lastHeight: opt.canvas.offsetHeight,\n        events: new KEventHandler<{\n            mouseMove: [];\n            mouseDown: [MouseButton];\n            mousePress: [MouseButton];\n            mouseRelease: [MouseButton];\n            charInput: [string];\n            keyPress: [Key];\n            keyDown: [Key];\n            keyPressRepeat: [Key];\n            keyRelease: [Key];\n            touchStart: [Vec2, Touch];\n            touchMove: [Vec2, Touch];\n            touchEnd: [Vec2, Touch];\n            gamepadButtonDown: [KGamepadButton];\n            gamepadButtonPress: [KGamepadButton];\n            gamepadButtonRelease: [KGamepadButton];\n            gamepadStick: [string, Vec2];\n            gamepadConnect: [KGamePad];\n            gamepadDisconnect: [KGamePad];\n            buttonDown: [string];\n            buttonPress: [string];\n            buttonRelease: [string];\n            scroll: [Vec2];\n            hide: [];\n            show: [];\n            resize: [];\n            input: [];\n        }>(),\n    };\n};\n\nexport const initApp = (opt: {\n    canvas: HTMLCanvasElement;\n    touchToMouse?: boolean;\n    gamepads?: Record<string, GamepadDef>;\n    pixelDensity?: number;\n    maxFPS?: number;\n    buttons?: ButtonsDef;\n}) => {\n    if (!opt.canvas) {\n        throw new Error(\"Please provide a canvas\");\n    }\n\n    const state = initAppState(opt);\n    appState = state;\n    parseButtonBindings();\n\n    function dt() {\n        return state.dt * state.timeScale;\n    }\n\n    function fixedDt() {\n        return state.fixedDt * state.timeScale;\n    }\n\n    function restDt() {\n        return state.restDt * state.timeScale;\n    }\n\n    function isHidden() {\n        return state.isHidden;\n    }\n\n    function time() {\n        return state.time;\n    }\n\n    function fps() {\n        return state.fpsCounter.fps;\n    }\n\n    function numFrames() {\n        return state.numFrames;\n    }\n\n    function screenshot(): string {\n        return state.canvas.toDataURL();\n    }\n\n    function setCursor(c: Cursor): void {\n        state.canvas.style.cursor = c;\n    }\n\n    function getCursor(): Cursor {\n        return state.canvas.style.cursor;\n    }\n\n    function setCursorLocked(b: boolean): void {\n        if (b) {\n            try {\n                const res = state.canvas\n                    .requestPointerLock() as unknown as Promise<void>;\n                if (res.catch) {\n                    res.catch((e) => console.error(e));\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        else {\n            document.exitPointerLock();\n        }\n    }\n\n    function isCursorLocked(): boolean {\n        return !!document.pointerLockElement;\n    }\n\n    // wrappers around full screen functions to work across browsers\n    function enterFullscreen(el: HTMLElement) {\n        if (el.requestFullscreen) el.requestFullscreen();\n        // @ts-ignore\n        else if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n    }\n\n    function exitFullscreen() {\n        if (document.exitFullscreen) document.exitFullscreen();\n        // @ts-ignore\n        else if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n    }\n\n    function setFullscreen(f: boolean = true) {\n        if (f) {\n            enterFullscreen(state.canvas);\n        }\n        else {\n            exitFullscreen();\n        }\n    }\n\n    function isFullscreen(): boolean {\n        return document.fullscreenElement === state.canvas\n            // @ts-ignore\n            || document.webkitFullscreenElement === state.canvas;\n    }\n\n    function quit() {\n        state.stopped = true;\n        const ce = Object.entries(canvasEvents);\n        const de = Object.entries(docEvents);\n        const we = Object.entries(winEvents);\n        type EL = EventListenerOrEventListenerObject;\n        for (const [name, val] of ce) {\n            state.canvas.removeEventListener(name, val as EL);\n        }\n        for (const [name, val] of de) {\n            document.removeEventListener(name, val as EL);\n        }\n        for (const [name, val] of we) {\n            window.removeEventListener(name, val as EL);\n        }\n        resizeObserver.disconnect();\n    }\n\n    function run(fixedUpdate: () => void, update: () => void) {\n        if (state.loopID !== null) {\n            cancelAnimationFrame(state.loopID);\n        }\n\n        let fixedAccumulatedDt = 0;\n        let accumulatedDt = 0;\n\n        const frame = (t: number) => {\n            if (state.stopped) return;\n\n            // TODO: allow background actions?\n            if (document.visibilityState !== \"visible\") {\n                state.loopID = requestAnimationFrame(frame);\n                return;\n            }\n\n            const loopTime = t / 1000;\n            const realDt = Math.min(loopTime - state.realTime, 0.25);\n            const desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0;\n\n            state.realTime = loopTime;\n            accumulatedDt += realDt;\n\n            if (accumulatedDt > desiredDt) {\n                if (!state.skipTime) {\n                    fixedAccumulatedDt += accumulatedDt;\n                    state.dt = state.fixedDt;\n                    state.restDt = 0;\n                    while (fixedAccumulatedDt > state.fixedDt) {\n                        fixedAccumulatedDt -= state.fixedDt;\n                        if (fixedAccumulatedDt < state.fixedDt) {\n                            state.restDt = fixedAccumulatedDt;\n                        }\n                        fixedUpdate();\n                    }\n                    state.restDt = fixedAccumulatedDt;\n                    state.dt = accumulatedDt;\n                    state.time += dt();\n                    state.fpsCounter.tick(state.dt);\n                }\n                accumulatedDt = 0;\n                state.skipTime = false;\n                state.numFrames++;\n                processInput();\n                update();\n                resetInput();\n            }\n\n            state.loopID = requestAnimationFrame(frame);\n        };\n\n        frame(0);\n    }\n\n    function isTouchscreen() {\n        return (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n    }\n\n    function mousePos(): Vec2 {\n        return state.mousePos.clone();\n    }\n\n    function mouseDeltaPos(): Vec2 {\n        return state.mouseDeltaPos.clone();\n    }\n\n    function isMousePressed(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.pressed.has(m);\n    }\n\n    function isMouseDown(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.down.has(m);\n    }\n\n    function isMouseReleased(m: MouseButton = \"left\"): boolean {\n        return state.mouseState.released.has(m);\n    }\n\n    function isMouseMoved(): boolean {\n        return state.isMouseMoved;\n    }\n\n    function isKeyPressed(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.pressed.size > 0\n            : setHasOrIncludes(state.keyState.pressed, k);\n    }\n\n    function isKeyPressedRepeat(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.pressedRepeat.size > 0\n            : setHasOrIncludes(state.keyState.pressedRepeat, k);\n    }\n\n    function isKeyDown(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.down.size > 0\n            : setHasOrIncludes(state.keyState.down, k);\n    }\n\n    function isKeyReleased(k?: Key | Key[]): boolean {\n        return k === undefined\n            ? state.keyState.released.size > 0\n            : setHasOrIncludes(state.keyState.released, k);\n    }\n\n    function isGamepadButtonPressed(\n        btn?: KGamepadButton | KGamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.pressed.size > 0\n            : setHasOrIncludes(\n                state.mergedGamepadState.buttonState.pressed,\n                btn,\n            );\n    }\n\n    function isGamepadButtonDown(\n        btn?: KGamepadButton | KGamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.down.size > 0\n            : setHasOrIncludes(state.mergedGamepadState.buttonState.down, btn);\n    }\n\n    function isGamepadButtonReleased(\n        btn?: KGamepadButton | KGamepadButton[],\n    ): boolean {\n        return btn === undefined\n            ? state.mergedGamepadState.buttonState.released.size > 0\n            : setHasOrIncludes(\n                state.mergedGamepadState.buttonState.released,\n                btn,\n            );\n    }\n\n    function isButtonPressed(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.pressed.size > 0\n            : setHasOrIncludes(state.buttonState.pressed, btn);\n    }\n\n    function isButtonDown(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.down.size > 0\n            : setHasOrIncludes(state.buttonState.down, btn);\n    }\n\n    function isButtonReleased(btn?: string | string[]): boolean {\n        return btn === undefined\n            ? state.buttonState.released.size > 0\n            : setHasOrIncludes(state.buttonState.released, btn);\n    }\n\n    function getButton(btn: string): ButtonBinding {\n        return state.buttons?.[btn];\n    }\n\n    function setButton(btn: string, binding: ButtonBinding) {\n        state.buttons[btn] = {\n            ...state.buttons[btn],\n            ...binding,\n        };\n    }\n\n    function onResize(action: () => void): KEventController {\n        return state.events.on(\"resize\", action);\n    }\n\n    // input callbacks\n    const onKeyDown = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyDown\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyDown\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    // key pressed is equal to the key by the user\n    const onKeyPress = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyPress\", (k) => action(k));\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyPress\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onKeyPressRepeat = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyPressRepeat\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyPressRepeat\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onKeyRelease = overload2((action: (key: Key) => void) => {\n        return state.events.on(\"keyRelease\", action);\n    }, (key: Key | Key[], action: (key: Key) => void) => {\n        return state.events.on(\n            \"keyRelease\",\n            (k) => isEqOrIncludes(key, k) && action(k),\n        );\n    });\n\n    const onMouseDown = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mouseDown\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\n            \"mouseDown\",\n            (m) => isEqOrIncludes(mouse, m) && action(m),\n        );\n    });\n\n    const onMousePress = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mousePress\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\n            \"mousePress\",\n            (m) => isEqOrIncludes(mouse, m) && action(m),\n        );\n    });\n\n    const onMouseRelease = overload2((action: (m: MouseButton) => void) => {\n        return state.events.on(\"mouseRelease\", (m) => action(m));\n    }, (\n        mouse: MouseButton | MouseButton[],\n        action: (m: MouseButton) => void,\n    ) => {\n        return state.events.on(\"mouseRelease\", (m) => m === mouse && action(m));\n    });\n\n    function onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): KEventController {\n        return state.events.on(\n            \"mouseMove\",\n            () => f(mousePos(), mouseDeltaPos()),\n        );\n    }\n\n    function onCharInput(action: (ch: string) => void): KEventController {\n        return state.events.on(\"charInput\", action);\n    }\n\n    function onTouchStart(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchStart\", f);\n    }\n\n    function onTouchMove(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchMove\", f);\n    }\n\n    function onTouchEnd(f: (pos: Vec2, t: Touch) => void): KEventController {\n        return state.events.on(\"touchEnd\", f);\n    }\n\n    function onScroll(action: (delta: Vec2) => void): KEventController {\n        return state.events.on(\"scroll\", action);\n    }\n\n    function onHide(action: () => void): KEventController {\n        return state.events.on(\"hide\", action);\n    }\n\n    function onShow(action: () => void): KEventController {\n        return state.events.on(\"show\", action);\n    }\n\n    const onGamepadButtonPress = overload2(\n        (action: (btn: KGamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonPress\", (b) => action(b));\n        },\n        (\n            btn: KGamepadButton | KGamepadButton[],\n            action: (btn: KGamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonPress\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    const onGamepadButtonDown = overload2(\n        (action: (btn: KGamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonDown\", (b) => action(b));\n        },\n        (\n            btn: KGamepadButton,\n            action: (btn: KGamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonDown\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    const onGamepadButtonRelease = overload2(\n        (action: (btn: KGamepadButton) => void) => {\n            return state.events.on(\"gamepadButtonRelease\", (b) => action(b));\n        },\n        (\n            btn: KGamepadButton | KGamepadButton[],\n            action: (btn: KGamepadButton) => void,\n        ) => {\n            return state.events.on(\n                \"gamepadButtonRelease\",\n                (b) => isEqOrIncludes(btn, b) && action(b),\n            );\n        },\n    );\n\n    function onGamepadStick(\n        stick: GamepadStick,\n        action: (value: Vec2) => void,\n    ): KEventController {\n        return state.events.on(\n            \"gamepadStick\",\n            (a: string, v: Vec2) => a === stick && action(v),\n        );\n    }\n\n    function onGamepadConnect(action: (gamepad: KGamePad) => void) {\n        state.events.on(\"gamepadConnect\", action);\n    }\n\n    function onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n        state.events.on(\"gamepadDisconnect\", action);\n    }\n\n    function getGamepadStick(stick: GamepadStick): Vec2 {\n        return state.mergedGamepadState.stickState.get(stick) || new Vec2(0);\n    }\n\n    function charInputted(): string[] {\n        return [...state.charInputted];\n    }\n\n    function getGamepads(): KGamePad[] {\n        return [...state.gamepads];\n    }\n\n    const onButtonPress = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonPress\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonPress\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    const onButtonDown = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonDown\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonDown\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    const onButtonRelease = overload2((action: (btn: string) => void) => {\n        return state.events.on(\"buttonRelease\", (b) => action(b));\n    }, (btn: string | string, action: (btn: string) => void) => {\n        return state.events.on(\n            \"buttonRelease\",\n            (b) => isEqOrIncludes(btn, b) && action(b),\n        );\n    });\n\n    function processInput() {\n        state.events.trigger(\"input\");\n        state.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k));\n        state.mouseState.down.forEach((k) =>\n            state.events.trigger(\"mouseDown\", k)\n        );\n        state.buttonState.down.forEach((btn) =>\n            state.events.trigger(\"buttonDown\", btn)\n        );\n        processGamepad();\n    }\n\n    function resetInput() {\n        state.keyState.update();\n        state.mouseState.update();\n        state.buttonState.update();\n\n        state.mergedGamepadState.buttonState.update();\n        state.mergedGamepadState.stickState.forEach((v, k) => {\n            state.mergedGamepadState.stickState.set(k, new Vec2(0));\n        });\n\n        state.charInputted = [];\n        state.isMouseMoved = false;\n        state.mouseDeltaPos = new Vec2(0);\n\n        state.gamepadStates.forEach((s) => {\n            s.buttonState.update();\n            s.stickState.forEach((v, k) => {\n                s.stickState.set(k, new Vec2(0));\n            });\n        });\n    }\n\n    function registerGamepad(browserGamepad: Gamepad) {\n        const gamepad: KGamePad = {\n            index: browserGamepad.index,\n            isPressed: (btn: KGamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index)\n                    ?.buttonState\n                    .pressed.has(btn) || false;\n            },\n            isDown: (btn: KGamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index)\n                    ?.buttonState\n                    .down.has(btn) || false;\n            },\n            isReleased: (btn: KGamepadButton) => {\n                return state.gamepadStates.get(browserGamepad.index)\n                    ?.buttonState\n                    .released.has(btn) || false;\n            },\n            getStick: (stick: GamepadStick) => {\n                return state.gamepadStates.get(browserGamepad.index)?.stickState\n                    .get(stick) || vec2();\n            },\n        };\n\n        state.gamepads.push(gamepad);\n\n        state.gamepadStates.set(browserGamepad.index, {\n            buttonState: new ButtonState(),\n            stickState: new Map([\n                [\"left\", new Vec2(0)],\n                [\"right\", new Vec2(0)],\n            ]),\n        });\n\n        return gamepad;\n    }\n\n    function removeGamepad(gamepad: Gamepad) {\n        state.gamepads = state.gamepads.filter((g) =>\n            g.index !== gamepad.index\n        );\n        state.gamepadStates.delete(gamepad.index);\n    }\n\n    // TODO: Clean up this function\n    function processGamepad() {\n        for (const browserGamepad of navigator.getGamepads()) {\n            if (\n                browserGamepad && !state.gamepadStates.has(\n                    browserGamepad.index,\n                )\n            ) {\n                registerGamepad(browserGamepad);\n            }\n        }\n\n        for (const gamepad of state.gamepads) {\n            const browserGamepad = navigator.getGamepads()[gamepad.index];\n            if (!browserGamepad) continue;\n            const customMap = opt.gamepads ?? {};\n            const map = customMap[browserGamepad.id]\n                ?? (GAMEPAD_MAP as Record<any, GamepadDef>)[browserGamepad.id]\n                ?? GAMEPAD_MAP[\"default\"];\n            const gamepadState = state.gamepadStates.get(gamepad.index);\n            if (!gamepadState) continue;\n\n            for (let i = 0; i < browserGamepad.buttons.length; i++) {\n                const gamepadBtn = map.buttons[i];\n                const browserGamepadBtn = browserGamepad.buttons[i];\n                const isGamepadButtonBind = state.buttonsByGamepad.has(\n                    gamepadBtn,\n                );\n\n                if (browserGamepadBtn.pressed) {\n                    if (!gamepadState.buttonState.down.has(gamepadBtn)) {\n                        state.lastInputDevice = \"gamepad\";\n\n                        if (isGamepadButtonBind) {\n                            // replicate input in merged state, defined button state and gamepad state\n                            state.buttonsByGamepad.get(gamepadBtn)?.forEach(\n                                (btn) => {\n                                    state.buttonState.press(btn);\n                                    state.events.trigger(\"buttonPress\", btn);\n                                },\n                            );\n                        }\n\n                        state.mergedGamepadState.buttonState.press(gamepadBtn);\n                        gamepadState.buttonState.press(gamepadBtn);\n                        state.events.trigger(\"gamepadButtonPress\", gamepadBtn);\n                    }\n\n                    if (isGamepadButtonBind) {\n                        state.buttonsByGamepad.get(gamepadBtn)?.forEach(\n                            (btn) => {\n                                state.buttonState.press(btn);\n                                state.events.trigger(\"buttonDown\", btn);\n                            },\n                        );\n                    }\n\n                    state.events.trigger(\"gamepadButtonDown\", gamepadBtn);\n                }\n                else if (gamepadState.buttonState.down.has(gamepadBtn)) {\n                    if (isGamepadButtonBind) {\n                        state.buttonsByGamepad.get(gamepadBtn)?.forEach(\n                            (btn) => {\n                                state.buttonState.release(btn);\n                                state.events.trigger(\"buttonRelease\", btn);\n                            },\n                        );\n                    }\n\n                    state.mergedGamepadState.buttonState.release(\n                        gamepadBtn,\n                    );\n                    gamepadState.buttonState.release(gamepadBtn);\n\n                    state.events.trigger(\n                        \"gamepadButtonRelease\",\n                        gamepadBtn,\n                    );\n                }\n            }\n\n            for (const stickName in map.sticks) {\n                const stick = map.sticks[stickName as GamepadStick];\n                if (!stick) continue;\n                const value = new Vec2(\n                    browserGamepad.axes[stick.x],\n                    browserGamepad.axes[stick.y],\n                );\n                gamepadState.stickState.set(stickName as GamepadStick, value);\n                state.mergedGamepadState.stickState.set(\n                    stickName as GamepadStick,\n                    value,\n                );\n                state.events.trigger(\"gamepadStick\", stickName, value);\n            }\n        }\n    }\n\n    type EventList<M> = {\n        [event in keyof M]?: (event: M[event]) => void;\n    };\n\n    const canvasEvents: EventList<HTMLElementEventMap> = {};\n    const docEvents: EventList<DocumentEventMap> = {};\n    const winEvents: EventList<WindowEventMap> = {};\n\n    const pd = opt.pixelDensity || window.devicePixelRatio || 1;\n\n    canvasEvents.mousemove = (e) => {\n        const mousePos = new Vec2(e.offsetX, e.offsetY);\n        const mouseDeltaPos = new Vec2(e.movementX, e.movementY);\n\n        if (isFullscreen()) {\n            const cw = state.canvas.width / pd;\n            const ch = state.canvas.height / pd;\n            const ww = window.innerWidth;\n            const wh = window.innerHeight;\n            const rw = ww / wh;\n            const rc = cw / ch;\n            if (rw > rc) {\n                const ratio = wh / ch;\n                const offset = (ww - (cw * ratio)) / 2;\n                mousePos.x = map(e.offsetX - offset, 0, cw * ratio, 0, cw);\n                mousePos.y = map(e.offsetY, 0, ch * ratio, 0, ch);\n            }\n            else {\n                const ratio = ww / cw;\n                const offset = (wh - (ch * ratio)) / 2;\n                mousePos.x = map(e.offsetX, 0, cw * ratio, 0, cw);\n                mousePos.y = map(e.offsetY - offset, 0, ch * ratio, 0, ch);\n            }\n        }\n\n        state.events.onOnce(\"input\", () => {\n            state.isMouseMoved = true;\n            state.mousePos = mousePos;\n            state.mouseDeltaPos = mouseDeltaPos;\n            state.events.trigger(\"mouseMove\");\n        });\n    };\n\n    const MOUSE_BUTTONS: MouseButton[] = [\n        \"left\",\n        \"middle\",\n        \"right\",\n        \"back\",\n        \"forward\",\n    ];\n\n    canvasEvents.mousedown = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const m = MOUSE_BUTTONS[e.button];\n            if (!m) return;\n\n            state.lastInputDevice = \"mouse\";\n\n            if (state.buttonsByMouse.has(m)) {\n                state.buttonsByMouse.get(m)?.forEach((btn) => {\n                    state.buttonState.press(btn);\n                    state.events.trigger(\"buttonPress\", btn);\n                });\n            }\n\n            state.mouseState.press(m);\n            state.events.trigger(\"mousePress\", m);\n        });\n    };\n\n    canvasEvents.mouseup = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const m = MOUSE_BUTTONS[e.button];\n            if (!m) return;\n\n            if (state.buttonsByMouse.has(m)) {\n                state.buttonsByMouse.get(m)?.forEach((btn) => {\n                    state.buttonState.release(btn);\n                    state.events.trigger(\"buttonRelease\", btn);\n                });\n            }\n\n            state.mouseState.release(m);\n            state.events.trigger(\"mouseRelease\", m);\n        });\n    };\n\n    const PREVENT_DEFAULT_KEYS = new Set([\n        \" \",\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\",\n        \"Tab\",\n    ]);\n\n    // translate these key names to a simpler version\n    const KEY_ALIAS = {\n        \"ArrowLeft\": \"left\",\n        \"ArrowRight\": \"right\",\n        \"ArrowUp\": \"up\",\n        \"ArrowDown\": \"down\",\n        \" \": \"space\",\n    };\n\n    canvasEvents.keydown = (e) => {\n        if (PREVENT_DEFAULT_KEYS.has(e.key)) {\n            e.preventDefault();\n        }\n        state.events.onOnce(\"input\", () => {\n            const k: Key = KEY_ALIAS[e.key as keyof typeof KEY_ALIAS] as Key\n                || e.key.toLowerCase();\n            if (k === undefined) throw new Error(`Unknown key: ${e.key}`);\n            if (k.length === 1) {\n                state.events.trigger(\"charInput\", k);\n                state.charInputted.push(k);\n            }\n            else if (k === \"space\") {\n                state.events.trigger(\"charInput\", \" \");\n                state.charInputted.push(\" \");\n            }\n            if (e.repeat) {\n                state.keyState.pressRepeat(k);\n                state.events.trigger(\"keyPressRepeat\", k);\n            }\n            else {\n                state.lastInputDevice = \"keyboard\";\n\n                if (state.buttonsByKey.has(k)) {\n                    state.buttonsByKey.get(k)?.forEach((btn) => {\n                        state.buttonState.press(btn);\n                        state.events.trigger(\"buttonPress\", btn);\n                    });\n                }\n\n                state.keyState.press(k);\n                state.events.trigger(\"keyPressRepeat\", k);\n                state.events.trigger(\"keyPress\", k);\n            }\n        });\n    };\n\n    canvasEvents.keyup = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const k: Key = KEY_ALIAS[e.key as keyof typeof KEY_ALIAS] as Key\n                || e.key.toLowerCase();\n\n            if (state.buttonsByKey.has(k)) {\n                state.buttonsByKey.get(k)?.forEach((btn) => {\n                    state.buttonState.release(btn);\n                    state.events.trigger(\"buttonRelease\", btn);\n                });\n            }\n\n            state.keyState.release(k);\n            state.events.trigger(\"keyRelease\", k);\n        });\n    };\n\n    // TODO: handle all touches at once instead of sequentially\n    canvasEvents.touchstart = (e) => {\n        // disable long tap context menu\n        e.preventDefault();\n\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n\n                state.lastInputDevice = \"mouse\";\n\n                if (state.buttonsByMouse.has(\"left\")) {\n                    state.buttonsByMouse.get(\"left\")?.forEach((btn) => {\n                        state.buttonState.press(btn);\n                        state.events.trigger(\"buttonPress\", btn);\n                    });\n                }\n\n                state.mouseState.press(\"left\");\n                state.events.trigger(\"mousePress\", \"left\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchStart\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchmove = (e) => {\n        // disable scrolling\n        e.preventDefault();\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                const lastMousePos = state.mousePos;\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseDeltaPos = state.mousePos.sub(lastMousePos);\n                state.events.trigger(\"mouseMove\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchMove\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchend = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseDeltaPos = new Vec2(0, 0);\n\n                if (state.buttonsByMouse.has(\"left\")) {\n                    state.buttonsByMouse.get(\"left\")?.forEach((btn) => {\n                        state.buttonState.release(btn);\n                        state.events.trigger(\"buttonRelease\", btn);\n                    });\n                }\n\n                state.mouseState.release(\"left\");\n                state.events.trigger(\"mouseRelease\", \"left\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchEnd\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    canvasEvents.touchcancel = (e) => {\n        state.events.onOnce(\"input\", () => {\n            const touches = [...e.changedTouches];\n            const box = state.canvas.getBoundingClientRect();\n            if (opt.touchToMouse !== false) {\n                state.mousePos = new Vec2(\n                    touches[0].clientX - box.x,\n                    touches[0].clientY - box.y,\n                );\n                state.mouseState.release(\"left\");\n                state.events.trigger(\"mouseRelease\", \"left\");\n            }\n            touches.forEach((t) => {\n                state.events.trigger(\n                    \"touchEnd\",\n                    new Vec2(t.clientX - box.x, t.clientY - box.y),\n                    t,\n                );\n            });\n        });\n    };\n\n    // TODO: option to not prevent default?\n    canvasEvents.wheel = (e) => {\n        e.preventDefault();\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY));\n        });\n    };\n\n    canvasEvents.contextmenu = (e) => e.preventDefault();\n\n    docEvents.visibilitychange = () => {\n        if (document.visibilityState === \"visible\") {\n            // prevent a surge of dt when switch back after the tab being hidden for a while\n            state.skipTime = true;\n            state.isHidden = false;\n            state.events.trigger(\"show\");\n        }\n        else {\n            state.isHidden = true;\n            state.events.trigger(\"hide\");\n        }\n    };\n\n    winEvents.gamepadconnected = (e) => {\n        const kbGamepad = registerGamepad(e.gamepad);\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"gamepadConnect\", kbGamepad);\n        });\n    };\n\n    winEvents.gamepaddisconnected = (e) => {\n        const kbGamepad =\n            getGamepads().filter((g) => g.index === e.gamepad.index)[0];\n        removeGamepad(e.gamepad);\n        state.events.onOnce(\"input\", () => {\n            state.events.trigger(\"gamepadDisconnect\", kbGamepad);\n        });\n    };\n\n    for (const [name, val] of Object.entries(canvasEvents)) {\n        state.canvas.addEventListener(\n            name,\n            val as EventListenerOrEventListenerObject,\n        );\n    }\n\n    for (const [name, val] of Object.entries(docEvents)) {\n        document.addEventListener(\n            name,\n            val as EventListenerOrEventListenerObject,\n        );\n    }\n\n    for (const [name, val] of Object.entries(winEvents)) {\n        window.addEventListener(\n            name,\n            val as EventListenerOrEventListenerObject,\n        );\n    }\n\n    const resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.target !== state.canvas) continue;\n            if (\n                state.lastWidth === state.canvas.offsetWidth\n                && state.lastHeight === state.canvas.offsetHeight\n            ) return;\n            state.lastWidth = state.canvas.offsetWidth;\n            state.lastHeight = state.canvas.offsetHeight;\n            state.events.onOnce(\"input\", () => {\n                state.events.trigger(\"resize\");\n            });\n        }\n    });\n\n    resizeObserver.observe(state.canvas);\n\n    return {\n        dt,\n        fixedDt,\n        restDt,\n        time,\n        run,\n        canvas: state.canvas,\n        fps,\n        numFrames,\n        quit,\n        isHidden,\n        setFullscreen,\n        isFullscreen,\n        setCursor,\n        screenshot,\n        getGamepads,\n        getCursor,\n        setCursorLocked,\n        isCursorLocked,\n        isTouchscreen,\n        mousePos,\n        mouseDeltaPos,\n        isKeyDown,\n        isKeyPressed,\n        isKeyPressedRepeat,\n        isKeyReleased,\n        isMouseDown,\n        isMousePressed,\n        isMouseReleased,\n        isMouseMoved,\n        isGamepadButtonPressed,\n        isGamepadButtonDown,\n        isGamepadButtonReleased,\n        getGamepadStick,\n        isButtonPressed,\n        isButtonDown,\n        isButtonReleased,\n        setButton,\n        getButton,\n        charInputted,\n        onResize,\n        onKeyDown,\n        onKeyPress,\n        onKeyPressRepeat,\n        onKeyRelease,\n        onMouseDown,\n        onMousePress,\n        onMouseRelease,\n        onMouseMove,\n        onCharInput,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        onScroll,\n        onHide,\n        onShow,\n        onGamepadButtonDown,\n        onGamepadButtonPress,\n        onGamepadButtonRelease,\n        onGamepadStick,\n        onGamepadConnect,\n        onGamepadDisconnect,\n        onButtonPress,\n        onButtonDown,\n        onButtonRelease,\n        getLastInputDeviceType,\n        events: state.events,\n    };\n};\n", "import { app, debug } from \"../kaplay\";\n\nexport function dt() {\n    return app.dt() * debug.timeScale;\n}\n\nexport function fixedDt() {\n    return app.fixedDt() * debug.timeScale;\n}\n\nexport function restDt() {\n    return app.restDt() * debug.timeScale;\n}\n", "import { Vec2 } from \"../math/math\";\nimport { type Anchor } from \"../types\";\nimport type { TextAlign } from \"./draw\";\n\n// convert anchor string to a vec2 offset\nexport function anchorPt(orig: Anchor | Vec2): Vec2 {\n    switch (orig) {\n        case \"topleft\":\n            return new Vec2(-1, -1);\n        case \"top\":\n            return new Vec2(0, -1);\n        case \"topright\":\n            return new Vec2(1, -1);\n        case \"left\":\n            return new Vec2(-1, 0);\n        case \"center\":\n            return new Vec2(0, 0);\n        case \"right\":\n            return new Vec2(1, 0);\n        case \"botleft\":\n            return new Vec2(-1, 1);\n        case \"bot\":\n            return new Vec2(0, 1);\n        case \"botright\":\n            return new Vec2(1, 1);\n        default:\n            return orig;\n    }\n}\n\nexport function alignPt(align: TextAlign): number {\n    switch (align) {\n        case \"left\":\n            return 0;\n        case \"center\":\n            return 0.5;\n        case \"right\":\n            return 1;\n        default:\n            return 0;\n    }\n}\n\nexport function createEmptyAudioBuffer(ctx: AudioContext) {\n    return ctx.createBuffer(1, 1, 44100);\n}\n", "// https://easings.net/\nconst c1 = 1.70158;\nconst c2 = c1 * 1.525;\nconst c3 = c1 + 1;\nconst c4 = (2 * Math.PI) / 3;\nconst c5 = (2 * Math.PI) / 4.5;\n\nconst easings = {\n    linear: (x: number) => x,\n    easeInSine: (x: number) => 1 - Math.cos((x * Math.PI) / 2),\n    easeOutSine: (x: number) => Math.sin((x * Math.PI) / 2),\n    easeInOutSine: (x: number) => -(Math.cos(Math.PI * x) - 1) / 2,\n    easeInQuad: (x: number) => x * x,\n    easeOutQuad: (x: number) => 1 - (1 - x) * (1 - x),\n    easeInOutQuad: (x: number) =>\n        x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n    easeInCubic: (x: number) => x * x * x,\n    easeOutCubic: (x: number) => 1 - Math.pow(1 - x, 3),\n    easeInOutCubic: (x: number) =>\n        x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n    easeInQuart: (x: number) => x * x * x * x,\n    easeOutQuart: (x: number) => 1 - Math.pow(1 - x, 4),\n    easeInOutQuart: (x: number) =>\n        x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n    easeInQuint: (x: number) => x * x * x * x * x,\n    easeOutQuint: (x: number) => 1 - Math.pow(1 - x, 5),\n    easeInOutQuint: (x: number) =>\n        x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n    easeInExpo: (x: number) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n    easeOutExpo: (x: number) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n    easeInOutExpo: (x: number) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : x < 0.5\n            ? Math.pow(2, 20 * x - 10) / 2\n            : (2 - Math.pow(2, -20 * x + 10)) / 2;\n    },\n    easeInCirc: (x: number) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n    easeOutCirc: (x: number) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n    easeInOutCirc: (x: number) => {\n        return x < 0.5\n            ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n            : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n    },\n    easeInBack: (x: number) => c3 * x * x * x - c1 * x * x,\n    easeOutBack: (x: number) =>\n        1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n    easeInOutBack: (x: number) => {\n        return x < 0.5\n            ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n            : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n    },\n    easeInElastic: (x: number) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4);\n    },\n    easeOutElastic: (x: number) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1;\n    },\n    easeInOutElastic: (x: number) => {\n        return x === 0\n            ? 0\n            : x === 1\n            ? 1\n            : x < 0.5\n            ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n            : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n                + 1;\n    },\n    easeInBounce: (x: number) => 1 - easings.easeOutBounce(1 - x),\n    easeOutBounce: (x: number) => {\n        const n1 = 7.5625;\n        const d1 = 2.75;\n        if (x < 1 / d1) {\n            return n1 * x * x;\n        }\n        else if (x < 2 / d1) {\n            return n1 * (x -= 1.5 / d1) * x + 0.75;\n        }\n        else if (x < 2.5 / d1) {\n            return n1 * (x -= 2.25 / d1) * x + 0.9375;\n        }\n        else {\n            return n1 * (x -= 2.625 / d1) * x + 0.984375;\n        }\n    },\n    easeInOutBounce: (x: number) => {\n        return x < 0.5\n            ? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n            : (1 + easings.easeOutBounce(2 * x - 1)) / 2;\n    },\n};\n\nexport default easings;\n", "import { BinaryHeap } from \"../utils/\";\nimport { Vec2 } from \"./math\";\n\nexport interface Graph {\n    /* Returns the reachable neighbours of this location */\n    getNeighbours(node: number): number[];\n    /* Returns the cost to go from the node to its neighbor */\n    getCost(node: number, neighbor: number): number;\n    /* Returns the cost to go from the node to the goal */\n    getHeuristic(node: number, goal: number): number;\n    /* Returns the path as locations */\n    getPath(from: number, to: number): number[];\n    /* Returns the path as waypoints */\n    getWaypointPath(\n        from: Vec2,\n        to: Vec2,\n        opt: any,\n    ): Vec2[];\n}\n\nfunction buildPath(start: number, goal: number, cameFrom: Map<number, number>) {\n    const path = [];\n    let node = goal;\n    path.push(node);\n    while (node !== start) {\n        // TODO: Remove non-null assertion\n        node = cameFrom.get(node)!;\n        if (node == undefined) return null;\n        path.push(node);\n    }\n    return path.reverse();\n}\n\nexport function breadthFirstSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n) {\n    let frontier = [];\n    frontier.push(start);\n\n    let cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n\n    while (frontier.length !== 0) {\n        let current = frontier.pop();\n\n        if (current === goal) {\n            break;\n        }\n\n        // TODO: Remove non-null assertion\n        const neighbours = graph.getNeighbours(current!);\n        for (let next of neighbours) {\n            if (!cameFrom.get(next)) {\n                frontier.push(next);\n                // TODO: Remove non-null assertion\n                cameFrom.set(next, current!);\n            }\n        }\n    }\n    return buildPath(start, goal, cameFrom);\n}\n\nexport function dijkstraSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n) {\n    interface CostNode {\n        cost: number;\n        node: number;\n    }\n    const frontier = new BinaryHeap<CostNode>();\n    frontier.insert({ cost: 0, node: start });\n\n    const cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n    const costSoFar = new Map<number, number>();\n    costSoFar.set(start, 0);\n\n    while (frontier.length !== 0) {\n        const current = frontier.remove()?.node;\n\n        if (current === goal) {\n            break;\n        }\n\n        // TODO: Remove non-null assertion\n        const neighbours = graph.getNeighbours(current!);\n        for (let next of neighbours) {\n            const newCost = (costSoFar.get(current!) || 0)\n                + graph.getCost(current!, next);\n            if (\n                !costSoFar.has(next)\n                || newCost < costSoFar.get(next)!\n            ) {\n                costSoFar.set(next, newCost);\n                frontier.insert({ cost: newCost, node: next });\n                cameFrom.set(next, current!);\n            }\n        }\n    }\n\n    return buildPath(start, goal, cameFrom);\n}\n\nexport function aStarSearch(\n    graph: Graph,\n    start: number,\n    goal: number,\n): number[] {\n    interface CostNode {\n        cost: number;\n        node: number;\n    }\n    const frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost);\n    frontier.insert({ cost: 0, node: start });\n\n    const cameFrom = new Map<number, number>();\n    cameFrom.set(start, start);\n    const costSoFar = new Map<number, number>();\n    costSoFar.set(start, 0);\n\n    while (frontier.length !== 0) {\n        const current = frontier.remove()?.node;\n\n        if (current === goal) {\n            break;\n        }\n\n        // TODO: Remove non-null assertion\n        const neighbours = graph.getNeighbours(current!);\n        for (let next of neighbours) {\n            const newCost = (costSoFar.get(current!) || 0)\n                + graph.getCost(current!, next)\n                + graph.getHeuristic(next, goal);\n            if (\n                !costSoFar.has(next)\n                || newCost < costSoFar.get(next)!\n            ) {\n                costSoFar.set(next, newCost);\n                frontier.insert({ cost: newCost, node: next });\n                cameFrom.set(next, current!);\n            }\n        }\n    }\n\n    // TODO: Remove non-null assertion\n    return buildPath(start, goal, cameFrom)!;\n}\n", "import { Vec2, vec2 } from \"./math\";\nimport { aStarSearch, type Graph } from \"./navigation\";\n\nclass NavEdge {\n    a: Vec2;\n    b: Vec2;\n    polygon: WeakRef<NavPolygon>;\n\n    constructor(a: Vec2, b: Vec2, polygon: NavPolygon) {\n        this.a = a;\n        this.b = b;\n        this.polygon = new WeakRef(polygon);\n    }\n\n    isLeft(x: number, y: number) {\n        return ((this.b.x - this.a.x) * (y - this.a.y)\n            - (x - this.a.x) * (this.b.y - this.a.y));\n    }\n\n    get middle() {\n        return this.a.add(this.b).scale(0.5);\n    }\n}\n\nclass NavPolygon {\n    // I don't know if set a default affects how the code is did\n    // TODO: Remove non-null assertion\n    private _edges!: NavEdge[];\n    private _centroid!: Vec2;\n    private _id: number;\n\n    constructor(id: number) {\n        this._id = id;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    set edges(edges: NavEdge[]) {\n        this._edges = edges;\n        let centerX = 0;\n        let centerY = 0;\n        let area = 0;\n        for (let edge of this._edges) {\n            edge.polygon = new WeakRef(this);\n            const cross = edge.a.x * edge.b.y - edge.a.y * edge.b.x;\n            centerX += (edge.a.x + edge.b.x) * cross;\n            centerY += (edge.a.y + edge.b.y) * cross;\n            area += cross;\n        }\n        area /= 2;\n        this._centroid = vec2(centerX / (6 * area), centerY / (6 * area));\n    }\n\n    get edges(): NavEdge[] {\n        return this._edges;\n    }\n\n    get centroid(): Vec2 {\n        return this._centroid;\n    }\n\n    // https://web.archive.org/web/20130126163405/http://geomalgorithms.com/a03-_inclusion.html\n    /*contains(x: number, y: number) {\n        let wn = 0;\n\n        for (let edge of this._edges) {\n            if (edge.a.y <= y) {\n                if (edge.b.y > y) {\n                    if (edge.isLeft(x, y) > 0) {\n                        ++wn;\n                    }\n                }\n            } else {\n                if (edge.b.y <= y) {\n                    if (edge.isLeft(x, y) < 0) {\n                        --wn;\n                    }\n                }\n            }\n        }\n        return wn;\n    }*/\n\n    contains(p: Vec2) {\n        let c = false;\n\n        for (const e of this.edges) {\n            if (\n                ((e.b.y > p.y) != (e.a.y > p.y))\n                && (p.x\n                    < (e.a.x - e.b.x) * (p.y - e.b.y) / (e.a.y - e.b.y) + e.b.x)\n            ) {\n                c = !c;\n            }\n        }\n\n        return c;\n    }\n}\n\nexport class NavMesh implements Graph {\n    private _polygons: NavPolygon[];\n    private _pointCache: { [key: string]: Vec2 };\n    private _edgeCache: { [key: string]: NavEdge };\n\n    constructor() {\n        this._polygons = [];\n        this._pointCache = {};\n        this._edgeCache = {};\n    }\n\n    private _addPoint(p: Vec2) {\n        let point = this._pointCache[`${p.x}_${p.y}`];\n        if (point) {\n            return point;\n        }\n        point = p.clone();\n        this._pointCache[`${p.x}_${p.y}`] = point;\n        return point;\n    }\n\n    private _addEdge(edge: NavEdge): NavEdge {\n        const key = `${edge.a.x}_${edge.a.y}-${edge.b.x}_${edge.b.y}`;\n        this._edgeCache[key] = edge;\n        return edge;\n    }\n\n    private _findEdge(a: Vec2, b: Vec2) {\n        const key = `${a.x}_${a.y}-${b.x}_${b.y}`;\n        return this._edgeCache[key];\n    }\n\n    private _findCommonEdge(a: NavPolygon, b: NavPolygon): NavEdge | null {\n        for (const edge of a.edges) {\n            const e = this._findEdge(edge.b, edge.a);\n            // TODO: Remove non-null assertion\n            if (e && e.polygon.deref()!.id === b.id) {\n                return e;\n            }\n        }\n        return null;\n    }\n\n    addPolygon(vertices: Vec2[]) {\n        const polygon = new NavPolygon(this._polygons.length);\n        const edges = vertices.map((v, index) =>\n            new NavEdge(v, vertices[(index + 1) % vertices.length], polygon)\n        );\n        polygon.edges = edges;\n        this._polygons.push(polygon);\n        for (const edge of polygon.edges) {\n            this._addEdge(edge);\n        }\n        return polygon;\n    }\n\n    addRect(pos: Vec2, size: Vec2) {\n        const a = this._addPoint(pos);\n        const b = this._addPoint(pos.add(size.x, 0));\n        const c = this._addPoint(pos.add(size));\n        const d = this._addPoint(pos.add(0, size.y));\n        return this.addPolygon([a, b, c, d]);\n    }\n\n    private _getLocation(p: Vec2): NavPolygon | null {\n        for (let polygon of this._polygons) {\n            if (polygon.contains(p)) {\n                return polygon;\n            }\n        }\n        return null;\n    }\n\n    getNeighbours(index: number): number[] {\n        const neighbours = [];\n        for (let edge of this._polygons[index].edges) {\n            // Lookup polygons with reverse edge\n            const pairEdge = this._findEdge(edge.b, edge.a);\n            if (pairEdge) {\n                const pairPolygon = pairEdge.polygon.deref();\n                if (pairPolygon) {\n                    neighbours.push(pairPolygon.id);\n                }\n            }\n        }\n        return neighbours;\n    }\n\n    getCost(a: number, b: number) {\n        return 1;\n    }\n\n    getHeuristic(indexA: number, indexB: number) {\n        const a = this._polygons[indexA];\n        const b = this._polygons[indexB];\n        const x = a.centroid.x - b.centroid.x;\n        const y = a.centroid.y - b.centroid.y;\n        return Math.sqrt(x * x + y * y);\n    }\n\n    getPath(start: number, goal: number): number[] {\n        // Points are not within the navigation mesh\n        if (start === undefined || goal === undefined) {\n            return [];\n        }\n\n        // Same polygon\n        if (start === goal) {\n            return [start, goal];\n        }\n\n        return aStarSearch(this, start, goal);\n    }\n\n    getWaypointPath(start: Vec2, goal: Vec2, opt: any): Vec2[] {\n        const type = opt?.type || \"centroids\";\n\n        const startPolygon = this._getLocation(start);\n        const goalPolygon = this._getLocation(goal);\n\n        // Points are not within the navigation mesh\n        if (startPolygon === undefined || goalPolygon === undefined) {\n            return [];\n        }\n\n        // TODO: Remove non-null assertion\n        const path = this.getPath(startPolygon!.id, goalPolygon!.id);\n\n        // No path was found\n        if (!path) {\n            return [];\n        }\n\n        if (type === \"edges\") {\n            const edges = [];\n            for (let i = 1; i < path.length; i++) {\n                const p1 = this._polygons[path[i - 1]];\n                const p2 = this._polygons[path[i]];\n                const edge = this._findCommonEdge(p1, p2);\n                // TODO: Remove non-null assertion\n                edges.push(\n                    edge!.middle.add(\n                        p2.centroid.sub(edge!.middle).unit().scale(4),\n                    ),\n                );\n            }\n            return [start, ...edges, goal];\n        }\n        else { // type === \"centroids\"\n            return [\n                start,\n                ...path.slice(1, -1).map(index =>\n                    this._polygons[index].centroid\n                ),\n                goal,\n            ];\n        }\n    }\n}\n", "import { height, width } from \"../gfx\";\nimport type { GameObj } from \"../types\";\nimport { deg2rad, Mat4, Vec2, vec2 } from \"./math\";\n\nexport function calcTransform(obj: GameObj): Mat4 {\n    const tr = new Mat4();\n    if (obj.pos) tr.translate(obj.pos);\n    if (obj.scale) tr.scale(obj.scale);\n    if (obj.angle) tr.rotate(obj.angle);\n    return obj.parent ? tr.mult(obj.parent.transform) : tr;\n}\n\n// convert a screen space coordinate to webgl normalized device coordinate\nexport function screen2ndc(pt: Vec2): Vec2 {\n    return new Vec2(\n        pt.x / width() * 2 - 1,\n        -pt.y / height() * 2 + 1,\n    );\n}\n\nexport function getArcPts(\n    pos: Vec2,\n    radiusX: number,\n    radiusY: number,\n    start: number,\n    end: number,\n    res: number = 1,\n): Vec2[] {\n    // normalize and turn start and end angles to radians\n    start = deg2rad(start % 360);\n    end = deg2rad(end % 360);\n    if (end <= start) end += Math.PI * 2;\n\n    const pts: Vec2[] = [];\n    const nverts = Math.ceil((end - start) / deg2rad(8) * res);\n    const step = (end - start) / nverts;\n\n    // Rotate vector v by r nverts+1 times\n    let v = vec2(Math.cos(start), Math.sin(start));\n    const r = vec2(Math.cos(step), Math.sin(step));\n    for (let i = 0; i <= nverts; i++) {\n        pts.push(pos.add(radiusX * v.x, radiusY * v.y));\n        // cos(a + b) = cos(a)cos(b) - sin(a)sin(b)\n        // sin(a + b) = cos(a)sin(b) + sin(a)cos(b)\n        v = vec2(v.x * r.x - v.y * r.y, v.x * r.y + v.y * r.x);\n    }\n\n    return pts;\n}\n", "import { gfx } from \"../kaplay\";\nimport { type ColorArgs, rgb } from \"../math\";\n\nexport function setBackground(...args: ColorArgs) {\n    const color = rgb(...args);\n    const alpha = args[3] ?? 1;\n\n    gfx.bgColor = color;\n    gfx.bgAlpha = alpha;\n\n    gfx.ggl.gl.clearColor(\n        color.r / 255,\n        color.g / 255,\n        color.b / 255,\n        alpha,\n    );\n}\n\nexport function getBackground() {\n    return gfx.bgColor?.clone?.() ?? null;\n}\n", "import { app, gfx } from \"../kaplay\";\nimport { type Mat4, Vec2, vec2, type Vec2Args } from \"../math/math\";\n\nexport function pushTranslate(...args: Vec2Args | [undefined]) {\n    if (args[0] === undefined) return;\n\n    const p = vec2(...args);\n    if (p.x === 0 && p.y === 0) return;\n    gfx.transform.translate(p);\n}\n\nexport function pushTransform() {\n    gfx.transformStack.push(gfx.transform.clone());\n}\n\nexport function pushMatrix(m: Mat4) {\n    gfx.transform = m.clone();\n}\n\nexport function pushScale(\n    ...args: Vec2Args | [undefined] | [undefined, undefined]\n) {\n    if (args[0] === undefined) return;\n\n    const p = vec2(...args);\n    if (p.x === 1 && p.y === 1) return;\n    gfx.transform.scale(p);\n}\n\nexport function pushRotate(a: number | undefined) {\n    if (!a) return;\n\n    gfx.transform.rotate(a);\n}\n\nexport function popTransform() {\n    if (gfx.transformStack.length > 0) {\n        // if there's more than 1 element, it will return obviously a Mat4\n        gfx.transform = gfx.transformStack.pop()!;\n    }\n}\n\nexport function flush() {\n    gfx.renderer.flush();\n}\n\n// get game width\nexport function width(): number {\n    return gfx.width;\n}\n\n// get game height\nexport function height(): number {\n    return gfx.height;\n}\n\nexport function getViewportScale() {\n    return (gfx.viewport.width + gfx.viewport.height)\n        / (gfx.width + gfx.height);\n}\n\n// transform a point from content space to view space\nexport function contentToView(pt: Vec2) {\n    return new Vec2(\n        pt.x * gfx.viewport.width / gfx.width,\n        pt.y * gfx.viewport.height / gfx.height,\n    );\n}\n\n// transform a point from window space to content space\nexport function windowToContent(pt: Vec2) {\n    return new Vec2(\n        (pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n        (pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n    );\n}\n\nexport function mousePos() {\n    return windowToContent(app.mousePos());\n}\n\nexport function center(): Vec2 {\n    return vec2(width() / 2, height() / 2);\n}\n", "// some default charsets for loading bitmap fonts\nexport const ASCII_CHARS =\n    \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nexport const DEF_ANCHOR = \"topleft\";\nexport const BG_GRID_SIZE = 64;\nexport const DEF_FONT = \"monospace\";\nexport const DBG_FONT = \"monospace\";\nexport const DEF_TEXT_SIZE = 36;\nexport const DEF_TEXT_CACHE_SIZE = 64;\nexport const MAX_TEXT_CACHE_SIZE = 256;\nexport const FONT_ATLAS_WIDTH = 2048;\nexport const FONT_ATLAS_HEIGHT = 2048;\nexport const SPRITE_ATLAS_WIDTH = 2048;\nexport const SPRITE_ATLAS_HEIGHT = 2048;\n// 0.1 pixel padding to texture coordinates to prevent artifact\nexport const UV_PAD = 0.1;\nexport const DEF_HASH_GRID_SIZE = 64;\nexport const DEF_FONT_FILTER = \"linear\";\nexport const LOG_MAX = 8;\nexport const LOG_TIME = 4;\nexport const VERTEX_FORMAT = [\n    { name: \"a_pos\", size: 2 },\n    { name: \"a_uv\", size: 2 },\n    { name: \"a_color\", size: 4 },\n];\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0);\nconst MAX_BATCHED_QUAD = 2048;\nexport const MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE;\nexport const MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6;\n// vertex shader template, replace {{user}} with user vertex shader code\nexport const VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n// fragment shader template, replace {{user}} with user fragment shader code\nexport const FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n// default {{user}} vertex shader code\nexport const DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n// default {{user}} fragment shader code\nexport const DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\nexport const COMP_DESC = new Set([\"id\", \"require\"]);\nexport const COMP_EVENTS = new Set([\n    \"add\",\n    \"fixedUpdate\",\n    \"update\",\n    \"draw\",\n    \"destroy\",\n    \"inspect\",\n    \"drawInspect\",\n]);\nexport const MULTI_WORD_RE = /^\\w+$/;\nexport const DEF_OFFSCREEN_DIS = 200;\n// maximum y velocity with body()\nexport const DEF_JUMP_FORCE = 640;\nexport const MAX_VEL = 65536;\n", "import type { ImageSource } from \"../types\";\n\nimport { type GfxCtx, Texture } from \"../gfx\";\n\nimport { Quad, Vec2 } from \"../math/math\";\n\nexport default class TexPacker {\n    private textures: Texture[] = [];\n    private bigTextures: Texture[] = [];\n    private canvas: HTMLCanvasElement;\n    private c2d: CanvasRenderingContext2D;\n    private x: number = 0;\n    private y: number = 0;\n    private curHeight: number = 0;\n    private gfx: GfxCtx;\n    constructor(gfx: GfxCtx, w: number, h: number) {\n        this.gfx = gfx;\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = w;\n        this.canvas.height = h;\n        this.textures = [Texture.fromImage(gfx, this.canvas)];\n        this.bigTextures = [];\n\n        const context2D = this.canvas.getContext(\"2d\");\n        if (!context2D) throw new Error(\"Failed to get 2d context\");\n\n        this.c2d = context2D;\n    }\n    add(img: ImageSource): [Texture, Quad] {\n        if (img.width > this.canvas.width || img.height > this.canvas.height) {\n            const tex = Texture.fromImage(this.gfx, img);\n            this.bigTextures.push(tex);\n            return [tex, new Quad(0, 0, 1, 1)];\n        }\n        // next row\n        if (this.x + img.width > this.canvas.width) {\n            this.x = 0;\n            this.y += this.curHeight;\n            this.curHeight = 0;\n        }\n        // next texture\n        if (this.y + img.height > this.canvas.height) {\n            this.c2d.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.textures.push(Texture.fromImage(this.gfx, this.canvas));\n            this.x = 0;\n            this.y = 0;\n            this.curHeight = 0;\n        }\n        const curTex = this.textures[this.textures.length - 1];\n        const pos = new Vec2(this.x, this.y);\n        this.x += img.width;\n        if (img.height > this.curHeight) {\n            this.curHeight = img.height;\n        }\n        if (img instanceof ImageData) {\n            this.c2d.putImageData(img, pos.x, pos.y);\n        }\n        else {\n            this.c2d.drawImage(img, pos.x, pos.y);\n        }\n        curTex.update(this.canvas);\n        return [\n            curTex,\n            new Quad(\n                pos.x / this.canvas.width,\n                pos.y / this.canvas.height,\n                img.width / this.canvas.width,\n                img.height / this.canvas.height,\n            ),\n        ];\n    }\n    free() {\n        for (const tex of this.textures) {\n            tex.free();\n        }\n        for (const tex of this.bigTextures) {\n            tex.free();\n        }\n    }\n}\n", "import { SPRITE_ATLAS_HEIGHT, SPRITE_ATLAS_WIDTH } from \"../constants\";\nimport type { GfxCtx } from \"../gfx/gfx\";\nimport TexPacker from \"../gfx/texPacker\";\nimport { assets } from \"../kaplay\";\nimport { KEvent } from \"../utils\";\nimport type { BitmapFontData } from \"./bitmapFont\";\nimport type { FontData } from \"./font\";\nimport type { ShaderData } from \"./shader\";\nimport type { SoundData } from \"./sound\";\nimport type { SpriteData } from \"./sprite\";\n\n/**\n * An asset is a resource that is loaded asynchronously.\n */\nexport class Asset<D> {\n    loaded: boolean = false;\n    data: D | null = null;\n    error: Error | null = null;\n    private onLoadEvents: KEvent<[D]> = new KEvent();\n    private onErrorEvents: KEvent<[Error]> = new KEvent();\n    private onFinishEvents: KEvent<[]> = new KEvent();\n    constructor(loader: Promise<D>) {\n        loader.then((data) => {\n            this.loaded = true;\n            this.data = data;\n            this.onLoadEvents.trigger(data);\n        }).catch((err) => {\n            this.error = err;\n            if (this.onErrorEvents.numListeners() > 0) {\n                this.onErrorEvents.trigger(err);\n            }\n            else {\n                throw err;\n            }\n        }).finally(() => {\n            this.onFinishEvents.trigger();\n            this.loaded = true;\n        });\n    }\n    static loaded<D>(data: D): Asset<D> {\n        const asset = new Asset(Promise.resolve(data)) as Asset<D>;\n        asset.data = data;\n        asset.loaded = true;\n        return asset;\n    }\n    onLoad(action: (data: D) => void) {\n        if (this.loaded && this.data) {\n            action(this.data);\n        }\n        else {\n            this.onLoadEvents.add(action);\n        }\n        return this;\n    }\n    onError(action: (err: Error) => void) {\n        if (this.loaded && this.error) {\n            action(this.error);\n        }\n        else {\n            this.onErrorEvents.add(action);\n        }\n        return this;\n    }\n    onFinish(action: () => void) {\n        if (this.loaded) {\n            action();\n        }\n        else {\n            this.onFinishEvents.add(action);\n        }\n        return this;\n    }\n    then(action: (data: D) => void): Asset<D> {\n        return this.onLoad(action);\n    }\n    catch(action: (err: Error) => void): Asset<D> {\n        return this.onError(action);\n    }\n    finally(action: () => void): Asset<D> {\n        return this.onFinish(action);\n    }\n}\n\nexport class AssetBucket<D> {\n    assets: Map<string, Asset<D>> = new Map();\n    lastUID: number = 0;\n    add(name: string | null, loader: Promise<D>): Asset<D> {\n        // if user don't provide a name we use a generated one\n        const id = name ?? (this.lastUID++ + \"\");\n        const asset = new Asset(loader);\n        this.assets.set(id, asset);\n        return asset;\n    }\n    addLoaded(name: string | null, data: D): Asset<D> {\n        const id = name ?? (this.lastUID++ + \"\");\n        const asset = Asset.loaded(data);\n        this.assets.set(id, asset);\n        return asset;\n    }\n    // if not found return undefined\n    get(handle: string): Asset<D> | undefined {\n        return this.assets.get(handle);\n    }\n    progress(): number {\n        if (this.assets.size === 0) {\n            return 1;\n        }\n        let loaded = 0;\n        this.assets.forEach((asset) => {\n            if (asset.loaded) {\n                loaded++;\n            }\n        });\n        return loaded / this.assets.size;\n    }\n}\n\nexport function fetchURL(url: string) {\n    return fetch(url)\n        .then((res) => {\n            if (!res.ok) throw new Error(`Failed to fetch \"${url}\"`);\n            return res;\n        });\n}\n\nexport function fetchJSON(path: string) {\n    return fetchURL(path).then((res) => res.json());\n}\n\nexport function fetchText(path: string) {\n    return fetchURL(path).then((res) => res.text());\n}\n\nexport function fetchArrayBuffer(path: string) {\n    return fetchURL(path).then((res) => res.arrayBuffer());\n}\n\n// global load path prefix\nexport function loadRoot(path?: string): string {\n    if (path !== undefined) {\n        assets.urlPrefix = path;\n    }\n    return assets.urlPrefix;\n}\n\nexport function loadJSON(name: string, url: string) {\n    return assets.custom.add(name, fetchJSON(url));\n}\n\n// wrapper around image loader to get a Promise\nexport function loadImg(src: string): Promise<HTMLImageElement> {\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.src = src;\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = () =>\n            reject(new Error(`Failed to load image from \"${src}\"`));\n    });\n}\n\nexport function loadProgress(): number {\n    const buckets = [\n        assets.sprites,\n        assets.sounds,\n        assets.shaders,\n        assets.fonts,\n        assets.bitmapFonts,\n        assets.custom,\n    ];\n    return buckets.reduce((n, bucket) => n + bucket.progress(), 0)\n        / buckets.length;\n}\n\nexport function getAsset(name: string): Asset<any> | null {\n    return assets.custom.get(name) ?? null;\n}\n\n// wrap individual loaders with global loader counter, for stuff like progress bar\nexport function load<T>(prom: Promise<T>): Asset<T> {\n    return assets.custom.add(null, prom);\n}\n\n// create assets\nexport type AssetsCtx = ReturnType<typeof initAssets>;\n\nexport const initAssets = (ggl: GfxCtx) => {\n    const assets = {\n        urlPrefix: \"\",\n        // asset holders\n        sprites: new AssetBucket<SpriteData>(),\n        fonts: new AssetBucket<FontData>(),\n        bitmapFonts: new AssetBucket<BitmapFontData>(),\n        sounds: new AssetBucket<SoundData>(),\n        shaders: new AssetBucket<ShaderData>(),\n        custom: new AssetBucket<any>(),\n        music: {} as Record<string, string>,\n        packer: new TexPacker(ggl, SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n        // if we finished initially loading all assets\n        loaded: false,\n    };\n\n    return assets;\n};\n", "import { assets } from \"../kaplay\";\nimport { isDataURL } from \"../utils\";\n\nexport function fixURL<D>(url: D): D {\n    if (typeof url !== \"string\" || isDataURL(url)) return url;\n    return assets.urlPrefix + url as D;\n}\n", "import { Asset, loadImg, loadProgress } from \"../assets\";\nimport type { DrawSpriteOpt } from \"../gfx\";\nimport type { Texture } from \"../gfx/gfx\";\nimport { assets } from \"../kaplay\";\nimport beanSpriteSrc from \"../kassets/bean.png\";\nimport { Quad } from \"../math/math\";\nimport { type ImageSource } from \"../types\";\nimport { fixURL } from \"./utils\";\n\n/**\n * Frame-based animation configuration.\n */\nexport type SpriteAnim = number | {\n    /**\n     * The starting frame.\n     */\n    from: number;\n    /**\n     * The end frame.\n     */\n    to: number;\n    /**\n     * If this anim should be played in loop.\n     */\n    loop?: boolean;\n    /**\n     * When looping should it move back instead of go to start frame again.\n     */\n    pingpong?: boolean;\n    /**\n     * This anim's speed in frames per second.\n     */\n    speed?: number;\n};\n\n/**\n * A dict of name <-> animation.\n */\nexport type SpriteAnims = Record<string, SpriteAnim>;\n\n// TODO: support frameWidth and frameHeight as alternative to slice\n/**\n * Sprite loading configuration.\n */\nexport interface LoadSpriteOpt {\n    /**\n     * If the defined area contains multiple sprites, how many frames are in the area hozizontally.\n     */\n    sliceX?: number;\n    /**\n     * If the defined area contains multiple sprites, how many frames are in the area vertically.\n     */\n    sliceY?: number;\n    /**\n     * 9 slice sprite for proportional scaling.\n     *\n     * @since v3000.0\n     */\n    slice9?: NineSlice;\n    /**\n     * Individual frames.\n     *\n     * @since v3000.0\n     */\n    frames?: Quad[];\n    /**\n     * Animation configuration.\n     */\n    anims?: SpriteAnims;\n}\n\nexport type NineSlice = {\n    /**\n     * The width of the 9-slice's left column.\n     */\n    left: number;\n    /**\n     * The width of the 9-slice's right column.\n     */\n    right: number;\n    /**\n     * The height of the 9-slice's top row.\n     */\n    top: number;\n    /**\n     * The height of the 9-slice's bottom row.\n     */\n    bottom: number;\n};\n\nexport type LoadSpriteSrc = string | ImageSource;\n\nexport class SpriteData {\n    tex: Texture;\n    frames: Quad[] = [new Quad(0, 0, 1, 1)];\n    anims: SpriteAnims = {};\n    slice9: NineSlice | null = null;\n\n    constructor(\n        tex: Texture,\n        frames?: Quad[],\n        anims: SpriteAnims = {},\n        slice9: NineSlice | null = null,\n    ) {\n        this.tex = tex;\n        if (frames) this.frames = frames;\n        this.anims = anims;\n        this.slice9 = slice9;\n    }\n\n    /**\n     * @since v3001.0\n     */\n    get width() {\n        return this.tex.width * this.frames[0].w;\n    }\n\n    get height() {\n        return this.tex.height * this.frames[0].h;\n    }\n\n    static from(\n        src: LoadSpriteSrc,\n        opt: LoadSpriteOpt = {},\n    ): Promise<SpriteData> {\n        return typeof src === \"string\"\n            ? SpriteData.fromURL(src, opt)\n            : Promise.resolve(SpriteData.fromImage(src, opt));\n    }\n\n    static fromImage(\n        data: ImageSource,\n        opt: LoadSpriteOpt = {},\n    ): SpriteData {\n        const [tex, quad] = assets.packer.add(data);\n        const frames = opt.frames\n            ? opt.frames.map((f) =>\n                new Quad(\n                    quad.x + f.x * quad.w,\n                    quad.y + f.y * quad.h,\n                    f.w * quad.w,\n                    f.h * quad.h,\n                )\n            )\n            : slice(\n                opt.sliceX || 1,\n                opt.sliceY || 1,\n                quad.x,\n                quad.y,\n                quad.w,\n                quad.h,\n            );\n        return new SpriteData(tex, frames, opt.anims, opt.slice9);\n    }\n\n    static fromURL(\n        url: string,\n        opt: LoadSpriteOpt = {},\n    ): Promise<SpriteData> {\n        return loadImg(url).then((img) => SpriteData.fromImage(img, opt));\n    }\n}\n\nexport function resolveSprite(\n    src: DrawSpriteOpt[\"sprite\"],\n): Asset<SpriteData> | null {\n    if (typeof src === \"string\") {\n        const spr = getSprite(src);\n        if (spr) {\n            // if it's already loaded or being loading, return it\n            return spr;\n        }\n        else if (loadProgress() < 1) {\n            // if there's any other ongoing loading task we return empty and don't error yet\n            return null;\n        }\n        else {\n            // if all other assets are loaded and we still haven't found this sprite, throw\n            throw new Error(`Sprite not found: ${src}`);\n        }\n    }\n    else if (src instanceof SpriteData) {\n        return Asset.loaded(src);\n    }\n    else if (src instanceof Asset) {\n        return src;\n    }\n    else {\n        throw new Error(`Invalid sprite: ${src}`);\n    }\n}\n\nexport function getSprite(name: string): Asset<SpriteData> | null {\n    return assets.sprites.get(name) ?? null;\n}\n\n// load a sprite to asset manager\nexport function loadSprite(\n    name: string | null,\n    src: LoadSpriteSrc | LoadSpriteSrc[],\n    opt: LoadSpriteOpt = {\n        sliceX: 1,\n        sliceY: 1,\n        anims: {},\n    },\n): Asset<SpriteData> {\n    src = fixURL(src);\n    if (Array.isArray(src)) {\n        if (src.some((s) => typeof s === \"string\")) {\n            return assets.sprites.add(\n                name,\n                Promise.all(src.map((s) => {\n                    return typeof s === \"string\"\n                        ? loadImg(s)\n                        : Promise.resolve(s);\n                })).then((images) => createSpriteSheet(images, opt)),\n            );\n        }\n        else {\n            return assets.sprites.addLoaded(\n                name,\n                createSpriteSheet(src as ImageSource[], opt),\n            );\n        }\n    }\n    else {\n        if (typeof src === \"string\") {\n            return assets.sprites.add(name, SpriteData.from(src, opt));\n        }\n        else {\n            return assets.sprites.addLoaded(\n                name,\n                SpriteData.fromImage(src, opt),\n            );\n        }\n    }\n}\n\nexport function slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n    const frames: Quad[] = [];\n    const qw = w / x;\n    const qh = h / y;\n    for (let j = 0; j < y; j++) {\n        for (let i = 0; i < x; i++) {\n            frames.push(\n                new Quad(\n                    dx + i * qw,\n                    dy + j * qh,\n                    qw,\n                    qh,\n                ),\n            );\n        }\n    }\n    return frames;\n}\n\n// TODO: load synchronously if passed ImageSource\n\nexport function createSpriteSheet(\n    images: ImageSource[],\n    opt: LoadSpriteOpt = {},\n): SpriteData {\n    const canvas = document.createElement(\"canvas\");\n    const width = images[0].width;\n    const height = images[0].height;\n    canvas.width = width * images.length;\n    canvas.height = height;\n    const c2d = canvas.getContext(\"2d\");\n    if (!c2d) throw new Error(\"Failed to create canvas context\");\n    images.forEach((img, i) => {\n        if (img instanceof ImageData) {\n            c2d.putImageData(img, i * width, 0);\n        }\n        else {\n            c2d.drawImage(img, i * width, 0);\n        }\n    });\n    const merged = c2d.getImageData(0, 0, images.length * width, height);\n    return SpriteData.fromImage(merged, {\n        ...opt,\n        sliceX: images.length,\n        sliceY: 1,\n    });\n}\n\nexport function loadBean(name: string = \"bean\"): Asset<SpriteData> {\n    return loadSprite(name, beanSpriteSrc);\n}\n", "import { assets } from \"../kaplay\";\nimport { Quad } from \"../math\";\nimport { getFileName } from \"../utils\";\nimport { type Asset, fetchJSON } from \"./asset\";\nimport { type LoadSpriteSrc, type SpriteAnim, SpriteData } from \"./sprite\";\nimport { fixURL } from \"./utils\";\n\nexport type AsepriteData = {\n    frames: Array<{\n        frame: {\n            x: number;\n            y: number;\n            w: number;\n            h: number;\n        };\n    }>;\n    meta: {\n        size: { w: number; h: number };\n        frameTags: Array<{\n            name: string;\n            from: number;\n            to: number;\n            direction: \"forward\" | \"reverse\" | \"pingpong\";\n        }>;\n    };\n};\n\nexport function loadAseprite(\n    name: string | null,\n    imgSrc: LoadSpriteSrc,\n    jsonSrc: string | AsepriteData,\n): Asset<SpriteData> {\n    imgSrc = fixURL(imgSrc);\n    jsonSrc = fixURL(jsonSrc);\n\n    if (typeof imgSrc === \"string\" && !jsonSrc) {\n        jsonSrc = getFileName(imgSrc) + \".json\";\n    }\n\n    const resolveJSON = typeof jsonSrc === \"string\"\n        ? fetchJSON(jsonSrc)\n        : Promise.resolve(jsonSrc);\n\n    return assets.sprites.add(\n        name,\n        resolveJSON.then((data: AsepriteData) => {\n            const size = data.meta.size;\n            const frames = data.frames.map((f: any) => {\n                return new Quad(\n                    f.frame.x / size.w,\n                    f.frame.y / size.h,\n                    f.frame.w / size.w,\n                    f.frame.h / size.h,\n                );\n            });\n            const anims: Record<string, number | SpriteAnim> = {};\n\n            for (const anim of data.meta.frameTags) {\n                if (anim.from === anim.to) {\n                    anims[anim.name] = anim.from;\n                }\n                else {\n                    anims[anim.name] = {\n                        from: anim.from,\n                        to: anim.to,\n                        speed: 10,\n                        loop: true,\n                        pingpong: anim.direction === \"pingpong\",\n                    };\n                }\n            }\n            return SpriteData.from(imgSrc, {\n                frames: frames,\n                anims: anims,\n            });\n        }),\n    );\n}\n", "import {\n    DEF_FONT,\n    DEF_FONT_FILTER,\n    DEF_TEXT_CACHE_SIZE,\n    MAX_TEXT_CACHE_SIZE,\n} from \"../constants\";\nimport type { Texture } from \"../gfx\";\nimport type { DrawTextOpt } from \"../gfx/draw/drawText\";\nimport { assets, globalOpt } from \"../kaplay\";\nimport { rgb } from \"../math/color\";\nimport { Quad } from \"../math/math\";\nimport type { LoadFontOpt, Outline, TexFilter } from \"../types\";\nimport { Asset, loadProgress } from \"./asset\";\nimport { type BitmapFontData, getBitmapFont, type GfxFont } from \"./bitmapFont\";\n\nexport class FontData {\n    fontface: FontFace;\n    filter: TexFilter = DEF_FONT_FILTER;\n    outline: Outline | null = null;\n    size: number = DEF_TEXT_CACHE_SIZE;\n    constructor(face: FontFace, opt: LoadFontOpt = {}) {\n        this.fontface = face;\n        this.filter = opt.filter ?? DEF_FONT_FILTER;\n        this.size = opt.size ?? DEF_TEXT_CACHE_SIZE;\n        if (this.size > MAX_TEXT_CACHE_SIZE) {\n            throw new Error(`Max font size: ${MAX_TEXT_CACHE_SIZE}`);\n        }\n        if (opt.outline) {\n            this.outline = {\n                width: 1,\n                color: rgb(0, 0, 0),\n            };\n            if (typeof opt.outline === \"number\") {\n                this.outline.width = opt.outline;\n            }\n            else if (typeof opt.outline === \"object\") {\n                if (opt.outline.width) {\n                    this.outline.width = opt.outline.width;\n                }\n                if (opt.outline.color) {\n                    this.outline.color = opt.outline.color;\n                }\n            }\n        }\n    }\n}\n\nexport function resolveFont(\n    src: DrawTextOpt[\"font\"],\n):\n    | FontData\n    | Asset<FontData>\n    | BitmapFontData\n    | Asset<BitmapFontData>\n    | string\n    | null\n    | void\n{\n    if (!src) {\n        return resolveFont(globalOpt.font ?? DEF_FONT);\n    }\n    if (typeof src === \"string\") {\n        const bfont = getBitmapFont(src);\n        const font = getFont(src);\n        if (bfont) {\n            return bfont.data ?? bfont;\n        }\n        else if (font) {\n            return font.data ?? font;\n        }\n        else if (\n            document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)\n        ) {\n            return src;\n        }\n        else if (loadProgress() < 1) {\n            return null;\n        }\n        else {\n            throw new Error(`Font not found: ${src}`);\n        }\n    }\n    else if (src instanceof Asset) {\n        return src.data ? src.data : src;\n    }\n\n    return src;\n}\n\nexport function getFont(name: string): Asset<FontData> | null {\n    return assets.fonts.get(name) ?? null;\n}\n\n// TODO: pass in null src to store opt for default fonts like \"monospace\"\nexport function loadFont(\n    name: string,\n    src: string | BinaryData,\n    opt: LoadFontOpt = {},\n): Asset<FontData> {\n    const font = new FontFace(\n        name,\n        typeof src === \"string\" ? `url(${src})` : src,\n    );\n    document.fonts.add(font);\n\n    return assets.fonts.add(\n        name,\n        font.load().catch((err) => {\n            throw new Error(`Failed to load font from \"${src}\": ${err}`);\n        }).then((face) => new FontData(face, opt)),\n    );\n}\n\nexport function makeFont(\n    tex: Texture,\n    gw: number,\n    gh: number,\n    chars: string,\n): GfxFont {\n    const cols = tex.width / gw;\n    const map: Record<string, Quad> = {};\n    const charMap = chars.split(\"\").entries();\n\n    for (const [i, ch] of charMap) {\n        map[ch] = new Quad(\n            (i % cols) * gw,\n            Math.floor(i / cols) * gh,\n            gw,\n            gh,\n        );\n    }\n\n    return {\n        tex: tex,\n        map: map,\n        size: gh,\n    };\n}\n", "import { ASCII_CHARS } from \"../constants\";\nimport { Texture } from \"../gfx\";\nimport { assets, gfx } from \"../kaplay\";\nimport type { Quad } from \"../math/math\";\nimport type { TexFilter } from \"../types\";\nimport { type Asset, loadImg } from \"./asset\";\nimport { makeFont } from \"./font\";\n\nexport interface GfxFont {\n    tex: Texture;\n    map: Record<string, Quad>;\n    size: number;\n}\n\nexport type BitmapFontData = GfxFont;\n\nexport function getBitmapFont(name: string): Asset<BitmapFontData> | null {\n    return assets.bitmapFonts.get(name) ?? null;\n}\n\nexport interface LoadBitmapFontOpt {\n    chars?: string;\n    filter?: TexFilter;\n    outline?: number;\n}\n\n// TODO: support outline\n// TODO: support LoadSpriteSrc\nexport function loadBitmapFont(\n    name: string | null,\n    src: string,\n    gw: number,\n    gh: number,\n    opt: LoadBitmapFontOpt = {},\n): Asset<BitmapFontData> {\n    return assets.bitmapFonts.add(\n        name,\n        loadImg(src)\n            .then((img) => {\n                return makeFont(\n                    Texture.fromImage(gfx.ggl, img, opt),\n                    gw,\n                    gh,\n                    opt.chars ?? ASCII_CHARS,\n                );\n            }),\n    );\n}\n", "import { assets } from \"../kaplay\";\nimport { type Asset, fetchJSON, loadImg } from \"./asset\";\nimport { loadSprite, type SpriteAnims, type SpriteData } from \"./sprite\";\nimport { fixURL } from \"./utils\";\n\nexport interface PeditFile {\n    width: number;\n    height: number;\n    frames: string[];\n    anims: SpriteAnims;\n}\n\nexport function loadPedit(\n    name: string | null,\n    src: string | PeditFile,\n): Asset<SpriteData> {\n    src = fixURL(src);\n\n    return assets.sprites.add(\n        name,\n        new Promise(async (resolve) => {\n            const data = typeof src === \"string\"\n                ? await fetchJSON(src)\n                : src;\n            const images = await Promise.all(data.frames.map(loadImg));\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = data.width;\n            canvas.height = data.height * data.frames.length;\n\n            const c2d = canvas.getContext(\"2d\");\n            if (!c2d) throw new Error(\"Failed to create canvas context\");\n\n            images.forEach((img: HTMLImageElement, i) => {\n                c2d.drawImage(img, 0, i * data.height);\n            });\n\n            const spr = await loadSprite(null, canvas, {\n                sliceY: data.frames.length,\n                anims: data.anims,\n            });\n\n            resolve(spr);\n        }),\n    );\n}\n", "import {\n    DEF_FRAG,\n    DEF_VERT,\n    FRAG_TEMPLATE,\n    VERT_TEMPLATE,\n    VERTEX_FORMAT,\n} from \"../constants\";\nimport { type GfxCtx } from \"../gfx\";\nimport { assets, gfx } from \"../kaplay\";\nimport { Color } from \"../math/color\";\nimport { Mat4, Vec2 } from \"../math/math\";\nimport type { RenderProps } from \"../types\";\nimport {\n    arrayIsColor,\n    arrayIsNumber,\n    arrayIsVec2,\n    getErrorMessage,\n} from \"../utils\";\nimport { fetchText, loadProgress } from \"./asset\";\nimport { Asset } from \"./asset\";\nimport { fixURL } from \"./utils\";\n\nexport type ShaderData = Shader;\n\n/**\n * @group Math\n */\nexport type UniformValue =\n    | number\n    | Vec2\n    | Color\n    | Mat4\n    | number[]\n    | Vec2[]\n    | Color[];\n\n/**\n * @group Math\n */\nexport type UniformKey = Exclude<string, \"u_tex\">;\n/**\n * @group Math\n */\nexport type Uniform = Record<UniformKey, UniformValue>;\n\n/**\n * @group GFX\n */\nexport class Shader {\n    ctx: GfxCtx;\n    glProgram: WebGLProgram;\n\n    constructor(ctx: GfxCtx, vert: string, frag: string, attribs: string[]) {\n        this.ctx = ctx;\n        ctx.onDestroy(() => this.free());\n\n        const gl = ctx.gl;\n        const vertShader = gl.createShader(gl.VERTEX_SHADER);\n        const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n        if (!vertShader || !fragShader) {\n            throw new Error(\"Failed to create shader\");\n        }\n\n        // What we should do if vert or frag are null?\n\n        gl.shaderSource(vertShader, vert);\n        gl.shaderSource(fragShader, frag);\n        gl.compileShader(vertShader);\n        gl.compileShader(fragShader);\n\n        const prog = gl.createProgram();\n        this.glProgram = prog!;\n\n        gl.attachShader(prog!, vertShader!);\n        gl.attachShader(prog!, fragShader!);\n\n        attribs.forEach((attrib, i) => gl.bindAttribLocation(prog!, i, attrib));\n\n        gl.linkProgram(prog!);\n\n        if (!gl.getProgramParameter(prog!, gl.LINK_STATUS)) {\n            const vertError = gl.getShaderInfoLog(vertShader!);\n            if (vertError) throw new Error(\"VERTEX SHADER \" + vertError);\n            const fragError = gl.getShaderInfoLog(fragShader!);\n            if (fragError) throw new Error(\"FRAGMENT SHADER \" + fragError);\n        }\n\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n    }\n\n    bind() {\n        this.ctx.pushProgram(this.glProgram);\n    }\n\n    unbind() {\n        this.ctx.popProgram();\n    }\n\n    send(uniform: Uniform) {\n        const gl = this.ctx.gl;\n        for (const name in uniform) {\n            const val = uniform[name];\n            const loc = gl.getUniformLocation(this.glProgram, name);\n            if (typeof val === \"number\") {\n                gl.uniform1f(loc, val);\n            }\n            else if (val instanceof Mat4) {\n                gl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n            }\n            else if (val instanceof Color) {\n                gl.uniform3f(loc, val.r, val.g, val.b);\n            }\n            else if (val instanceof Vec2) {\n                gl.uniform2f(loc, val.x, val.y);\n            }\n            else if (Array.isArray(val)) {\n                const first = val[0];\n\n                if (arrayIsNumber(val)) {\n                    gl.uniform1fv(loc, val as number[]);\n                }\n                else if (arrayIsVec2(val)) {\n                    gl.uniform2fv(loc, val.map((v) => [v.x, v.y]).flat());\n                }\n                else if (arrayIsColor(val)) {\n                    gl.uniform3fv(loc, val.map(v => [v.r, v.g, v.b]).flat());\n                }\n            }\n            else {\n                throw new Error(\"Unsupported uniform data type\");\n            }\n        }\n    }\n\n    free() {\n        this.ctx.gl.deleteProgram(this.glProgram);\n    }\n}\n\nexport function makeShader(\n    ggl: GfxCtx,\n    vertSrc: string | null = DEF_VERT,\n    fragSrc: string | null = DEF_FRAG,\n): Shader {\n    const vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n    const fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\n    try {\n        return new Shader(\n            ggl,\n            vcode,\n            fcode,\n            VERTEX_FORMAT.map((vert) => vert.name),\n        );\n    } catch (e) {\n        const lineOffset = 14;\n        const fmt = /(?<type>^\\w+) SHADER ERROR: 0:(?<line>\\d+): (?<msg>.+)/;\n        const match = getErrorMessage(e).match(fmt);\n        if (!match?.groups) throw e;\n        const line = Number(match.groups.line) - lineOffset;\n        const msg = match.groups.msg.trim();\n        const ty = match.groups.type.toLowerCase();\n        throw new Error(`${ty} shader line ${line}: ${msg}`);\n    }\n}\n\nexport function resolveShader(\n    src: RenderProps[\"shader\"],\n): ShaderData | Asset<ShaderData> | null {\n    if (!src) {\n        return gfx.defShader;\n    }\n    if (typeof src === \"string\") {\n        const shader = getShader(src);\n        if (shader) {\n            return shader.data ?? shader;\n        }\n        else if (loadProgress() < 1) {\n            return null;\n        }\n        else {\n            throw new Error(`Shader not found: ${src}`);\n        }\n    }\n    else if (src instanceof Asset) {\n        return src.data ? src.data : src;\n    }\n\n    return src;\n}\n\nexport function getShader(name: string): Asset<ShaderData> | null {\n    return assets.shaders.get(name) ?? null;\n}\n\nexport function loadShader(\n    name: string | null,\n    vert?: string,\n    frag?: string,\n) {\n    return assets.shaders.addLoaded(name, makeShader(gfx.ggl, vert, frag));\n}\n\nexport function loadShaderURL(\n    name: string | null,\n    vert?: string,\n    frag?: string,\n): Asset<ShaderData> {\n    vert = fixURL(vert);\n    frag = fixURL(frag);\n    const resolveUrl = (url?: string) =>\n        url\n            ? fetchText(url)\n            : Promise.resolve(null);\n    const load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n        .then(([vcode, fcode]: [string | null, string | null]) => {\n            return makeShader(gfx.ggl, vcode, fcode);\n        });\n    return assets.shaders.add(name, load);\n}\n", "import { assets, audio } from \"../kaplay\";\nimport { dataURLToArrayBuffer, isDataURL } from \"../utils\";\nimport { Asset, fetchArrayBuffer, loadProgress } from \"./asset\";\nimport { fixURL } from \"./utils\";\n\nexport class SoundData {\n    buf: AudioBuffer;\n\n    constructor(buf: AudioBuffer) {\n        this.buf = buf;\n    }\n\n    static fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n        return new Promise((resolve, reject) =>\n            audio.ctx.decodeAudioData(buf, resolve, reject)\n        ).then((buf) => new SoundData(buf as AudioBuffer));\n    }\n\n    static fromURL(url: string): Promise<SoundData> {\n        if (isDataURL(url)) {\n            return SoundData.fromArrayBuffer(dataURLToArrayBuffer(url));\n        }\n        else {\n            return fetchArrayBuffer(url).then((buf) =>\n                SoundData.fromArrayBuffer(buf)\n            );\n        }\n    }\n}\n\nexport function resolveSound(\n    src: string | SoundData | Asset<SoundData>,\n): Asset<SoundData> | null {\n    if (typeof src === \"string\") {\n        const snd = getSound(src);\n        if (snd) {\n            return snd;\n        }\n        else if (loadProgress() < 1) {\n            return null;\n        }\n        else {\n            throw new Error(`Sound not found: ${src}`);\n        }\n    }\n    else if (src instanceof SoundData) {\n        return Asset.loaded(src);\n    }\n    else if (src instanceof Asset) {\n        return src;\n    }\n    else {\n        throw new Error(`Invalid sound: ${src}`);\n    }\n}\n\nexport function getSound(name: string): Asset<SoundData> | null {\n    return assets.sounds.get(name) ?? null;\n}\n\n// load a sound to asset manager\nexport function loadSound(\n    name: string | null,\n    src: string | ArrayBuffer,\n): Asset<SoundData> {\n    src = fixURL(src);\n    return assets.sounds.add(\n        name,\n        typeof src === \"string\"\n            ? SoundData.fromURL(src)\n            : SoundData.fromArrayBuffer(src),\n    );\n}\n\nexport function loadMusic(\n    name: string | null,\n    url: string,\n) {\n    const a = new Audio(url);\n    a.preload = \"auto\";\n\n    return assets.music[name as keyof typeof assets.music] = fixURL(url);\n}\n", "import { SPRITE_ATLAS_HEIGHT, SPRITE_ATLAS_WIDTH } from \"../constants\";\nimport { assets } from \"../kaplay\";\nimport { Quad } from \"../math\";\nimport { type Asset, fetchJSON, load } from \"./asset\";\nimport {\n    type LoadSpriteOpt,\n    type LoadSpriteSrc,\n    slice,\n    SpriteData,\n} from \"./sprite\";\nimport { fixURL } from \"./utils\";\n\nexport type SpriteAtlasData = Record<string, SpriteAtlasEntry>;\n\n/**\n * A sprite in a sprite atlas.\n */\nexport type SpriteAtlasEntry = LoadSpriteOpt & {\n    /**\n     * X position of the top left corner.\n     */\n    x: number;\n    /**\n     * Y position of the top left corner.\n     */\n    y: number;\n    /**\n     * Sprite area width.\n     */\n    width: number;\n    /**\n     * Sprite area height.\n     */\n    height: number;\n};\n\nexport function loadSpriteAtlas(\n    src: LoadSpriteSrc,\n    data: SpriteAtlasData | string,\n): Asset<Record<string, SpriteData>> {\n    src = fixURL(src);\n    if (typeof data === \"string\") {\n        return load(\n            new Promise((res, rej) => {\n                fetchJSON(data).then((json) => {\n                    loadSpriteAtlas(src, json).then(res).catch(rej);\n                });\n            }),\n        );\n    }\n    return load(\n        SpriteData.from(src).then((atlas) => {\n            const map: Record<string, SpriteData> = {};\n\n            for (const name in data) {\n                const info = data[name];\n                const quad = atlas.frames[0];\n                const w = SPRITE_ATLAS_WIDTH * quad.w;\n                const h = SPRITE_ATLAS_HEIGHT * quad.h;\n                const frames = info.frames\n                    ? info.frames.map((f) =>\n                        new Quad(\n                            quad.x + (info.x + f.x) / w * quad.w,\n                            quad.y + (info.y + f.y) / h * quad.h,\n                            f.w / w * quad.w,\n                            f.h / h * quad.h,\n                        )\n                    )\n                    : slice(\n                        info.sliceX || 1,\n                        info.sliceY || 1,\n                        quad.x + info.x / w * quad.w,\n                        quad.y + info.y / h * quad.h,\n                        info.width / w * quad.w,\n                        info.height / h * quad.h,\n                    );\n                const spr = new SpriteData(atlas.tex, frames, info.anims);\n                assets.sprites.addLoaded(name, spr);\n                map[name] = spr;\n            }\n            return map;\n        }),\n    );\n}\n", "import { Asset, resolveShader, type Uniform } from \"../../assets\";\nimport { game, gfx } from \"../../kaplay\";\nimport { screen2ndc } from \"../../math/various\";\nimport type { RenderProps, Vertex } from \"../../types\";\nimport type { Texture } from \"../gfx\";\n\nexport function drawRaw(\n    verts: Vertex[],\n    indices: number[],\n    fixed: boolean = false,\n    tex?: Texture,\n    shaderSrc?: RenderProps[\"shader\"],\n    uniform: Uniform = {},\n) {\n    const parsedTex = tex ?? gfx.defTex;\n    const parsedShader = shaderSrc ?? gfx.defShader;\n    const shader = resolveShader(parsedShader);\n\n    if (!shader || shader instanceof Asset) {\n        return;\n    }\n\n    const transform = (gfx.fixed || fixed)\n        ? gfx.transform\n        : game.cam.transform.mult(gfx.transform);\n\n    const vv: number[] = [];\n\n    for (const v of verts) {\n        // normalized world space coordinate [-1.0 ~ 1.0]\n        const pt = screen2ndc(transform.multVec2(v.pos));\n\n        vv.push(\n            pt.x,\n            pt.y,\n            v.uv.x,\n            v.uv.y,\n            v.color.r / 255,\n            v.color.g / 255,\n            v.color.b / 255,\n            v.opacity,\n        );\n    }\n\n    gfx.renderer.push(\n        gfx.ggl.gl.TRIANGLES,\n        vv,\n        indices,\n        shader,\n        parsedTex,\n        uniform,\n    );\n}\n", "import { gfx } from \"../../kaplay\";\nimport { Color } from \"../../math/color\";\nimport { triangulate, Vec2 } from \"../../math/math\";\nimport type { DrawPolygonOpt } from \"../../types\";\nimport {\n    popTransform,\n    pushRotate,\n    pushScale,\n    pushTransform,\n    pushTranslate,\n} from \"../stack\";\nimport { drawLines } from \"./drawLine\";\nimport { drawRaw } from \"./drawRaw\";\n\nexport function drawPolygon(opt: DrawPolygonOpt) {\n    if (!opt.pts) {\n        throw new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n    }\n\n    const npts = opt.pts.length;\n\n    if (npts < 3) {\n        return;\n    }\n\n    pushTransform();\n    pushTranslate(opt.pos!);\n    pushScale(opt.scale);\n    pushRotate(opt.angle);\n    pushTranslate(opt.offset!);\n\n    if (opt.fill !== false) {\n        const color = opt.color ?? Color.WHITE;\n\n        const verts = opt.pts.map((pt, i) => ({\n            pos: new Vec2(pt.x, pt.y),\n            uv: opt.uv\n                ? opt.uv[i]\n                : new Vec2(0, 0),\n            color: opt.colors\n                ? (opt.colors[i] ? opt.colors[i].mult(color) : color)\n                : color,\n            opacity: opt.opacity ?? 1,\n        }));\n\n        let indices;\n\n        if (opt.triangulate /* && !isConvex(opt.pts)*/) {\n            const triangles = triangulate(opt.pts);\n            // TODO rewrite triangulate to just return new indices\n            indices = triangles.map(t => t.map(p => opt.pts.indexOf(p)))\n                .flat();\n        }\n        else {\n            indices = [...Array(npts - 2).keys()]\n                .map((n) => [0, n + 1, n + 2])\n                .flat();\n        }\n\n        drawRaw(\n            verts,\n            opt.indices ?? indices,\n            opt.fixed,\n            opt.uv ? opt.tex : gfx.defTex,\n            opt.shader,\n            opt.uniform ?? undefined,\n        );\n    }\n\n    if (opt.outline) {\n        drawLines({\n            pts: [...opt.pts, opt.pts[0]],\n            radius: opt.radius,\n            width: opt.outline.width,\n            color: opt.outline.color,\n            join: opt.outline.join,\n            uniform: opt.uniform,\n            fixed: opt.fixed,\n            opacity: opt.opacity ?? opt.outline.opacity,\n        });\n    }\n\n    popTransform();\n}\n", "import { Vec2 } from \"../../math/math\";\nimport { getArcPts } from \"../../math/various\";\nimport type { DrawEllipseOpt } from \"../../types\";\nimport { anchorPt } from \"../anchor\";\nimport { drawPolygon } from \"./drawPolygon\";\n\nexport function drawEllipse(opt: DrawEllipseOpt) {\n    if (opt.radiusX === undefined || opt.radiusY === undefined) {\n        throw new Error(\n            \"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\",\n        );\n    }\n\n    if (opt.radiusX === 0 || opt.radiusY === 0) {\n        return;\n    }\n\n    const start = opt.start ?? 0;\n    const end = opt.end ?? 360;\n    const offset = anchorPt(opt.anchor ?? \"center\").scale(\n        new Vec2(-opt.radiusX, -opt.radiusY),\n    );\n\n    const pts = getArcPts(\n        offset,\n        opt.radiusX,\n        opt.radiusY,\n        start,\n        end,\n        opt.resolution,\n    );\n\n    // center\n    pts.unshift(offset);\n\n    const polyOpt = Object.assign({}, opt, {\n        pts,\n        radius: 0,\n        ...(opt.gradient\n            ? {\n                colors: [\n                    opt.gradient[0],\n                    ...Array(pts.length - 1).fill(opt.gradient[1]),\n                ],\n            }\n            : {}),\n    });\n\n    // full circle with outline shouldn't have the center point\n    if (end - start >= 360 && opt.outline) {\n        if (opt.fill !== false) {\n            drawPolygon(Object.assign({}, polyOpt, {\n                outline: null,\n            }));\n        }\n        drawPolygon(Object.assign({}, polyOpt, {\n            pts: pts.slice(1),\n            fill: false,\n        }));\n        return;\n    }\n\n    drawPolygon(polyOpt);\n}\n", "import type { Color } from \"../../math/color\";\nimport type { Vec2 } from \"../../math/math\";\nimport type { Anchor, RenderProps } from \"../../types\";\nimport { drawEllipse } from \"./drawEllipse\";\n\n/**\n * How the circle should look like.\n */\nexport type DrawCircleOpt = Omit<RenderProps, \"angle\"> & {\n    /**\n     * Radius of the circle.\n     */\n    radius: number;\n    /**\n     * Starting angle.\n     */\n    start?: number;\n    /**\n     * Ending angle.\n     */\n    end?: number;\n    /**\n     * If fill the shape with color (set this to false if you only want an outline).\n     */\n    fill?: boolean;\n    /**\n     * Use gradient instead of solid color.\n     *\n     * @since v3000.0\n     */\n    gradient?: [Color, Color];\n    /**\n     * Multiplier for circle vertices resolution (default 1)\n     */\n    resolution?: number;\n    /**\n     * The anchor point, or the pivot point. Default to \"topleft\".\n     */\n    anchor?: Anchor | Vec2;\n};\n\nexport function drawCircle(opt: DrawCircleOpt) {\n    if (typeof opt.radius !== \"number\") {\n        throw new Error(\"drawCircle() requires property \\\"radius\\\".\");\n    }\n\n    if (opt.radius === 0) {\n        return;\n    }\n\n    drawEllipse(Object.assign({}, opt, {\n        radiusX: opt.radius,\n        radiusY: opt.radius,\n        angle: 0,\n    }));\n}\n", "import { gfx } from \"../../kaplay\";\nimport { Color } from \"../../math/color\";\nimport { deg2rad, Vec2, vec2 } from \"../../math/math\";\nimport type { RenderProps } from \"../../types\";\nimport { drawCircle } from \"./drawCircle\";\nimport { drawRaw } from \"./drawRaw\";\n\n/**\n * How the line should look like.\n */\nexport type DrawLineOpt = Omit<RenderProps, \"angle\" | \"scale\"> & {\n    /**\n     * Starting point of the line.\n     */\n    p1: Vec2;\n    /**\n     * Ending point of the line.\n     */\n    p2: Vec2;\n    /**\n     * The width, or thickness of the line,\n     */\n    width?: number;\n};\n\nexport function drawLine(opt: DrawLineOpt) {\n    const { p1, p2 } = opt;\n\n    if (!p1 || !p2) {\n        throw new Error(\n            \"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\",\n        );\n    }\n\n    const w = opt.width || 1;\n\n    // the displacement from the line end point to the corner point\n    const dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n    // calculate the 4 corner points of the line polygon\n    const verts = [\n        p1.sub(dis),\n        p1.add(dis),\n        p2.add(dis),\n        p2.sub(dis),\n    ].map((p) => ({\n        pos: new Vec2(p.x, p.y),\n        uv: new Vec2(0),\n        color: opt.color ?? Color.WHITE,\n        opacity: opt.opacity ?? 1,\n    }));\n\n    drawRaw(\n        verts,\n        [0, 1, 3, 1, 2, 3],\n        opt.fixed,\n        gfx.defTex,\n        opt.shader,\n        opt.uniform ?? undefined,\n    );\n}\n\nexport type LineJoin =\n    | \"none\"\n    | \"round\"\n    | \"bevel\"\n    | \"miter\";\n\nexport type LineCap =\n    | \"butt\"\n    | \"round\"\n    | \"square\";\n\n/**\n * How the lines should look like.\n */\nexport type DrawLinesOpt = Omit<RenderProps, \"angle\" | \"scale\"> & {\n    /**\n     * The points that should be connected with a line.\n     */\n    pts: Vec2[];\n    /**\n     * The width, or thickness of the lines,\n     */\n    width?: number;\n    /**\n     * The radius of each corner.\n     */\n    radius?: number | number[];\n    /**\n     * Line join style (default \"none\").\n     */\n    join?: LineJoin;\n    /**\n     * Line cap style (default \"none\").\n     */\n    cap?: LineCap;\n    /**\n     * Maximum miter length, anything longer becomes bevel.\n     */\n    miterLimit?: number;\n};\n\nexport function _drawLinesBevel(opt: DrawLinesOpt) {\n    const pts = opt.pts;\n    const vertices = [];\n    const halfWidth = (opt.width || 1) * 0.5;\n    const isLoop = pts[0] === pts[pts.length - 1]\n        || pts[0].eq(pts[pts.length - 1]);\n    const offset = opt.pos || vec2(0, 0);\n    let segment;\n\n    if (isLoop) {\n        segment = pts[0].sub(pts[pts.length - 2]);\n    }\n    else {\n        segment = pts[1].sub(pts[0]);\n    }\n\n    let length = segment.len();\n    let normal = segment.normal().scale(-halfWidth / length);\n\n    let pt1;\n    let pt2 = pts[0];\n\n    if (!isLoop) {\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(-halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(-1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                }\n            }\n        }\n    }\n\n    for (let i = 1; i < pts.length; i++) {\n        if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n        pt1 = pt2;\n        pt2 = pts[i];\n\n        const nextSegment = pt2.sub(pt1);\n        const nextLength = nextSegment.len();\n        const nextNormal = nextSegment.normal().scale(\n            -halfWidth / nextLength,\n        );\n\n        const det = segment.cross(nextSegment);\n\n        if (Math.abs(det) / (length * nextLength) < 0.05) {\n            // Parallel\n            vertices.push(pt1.add(normal));\n            vertices.push(pt1.sub(normal));\n\n            if (segment.dot(nextSegment) < 0) {\n                vertices.push(pt1.sub(normal));\n                vertices.push(pt1.add(normal));\n            }\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n            continue;\n        }\n\n        const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n        const d = normal.add(segment.scale(lambda));\n\n        if (det > 0) {\n            vertices.push(pt1.add(d));\n            vertices.push(pt1.sub(normal));\n            vertices.push(pt1.add(d));\n            vertices.push(pt1.sub(nextNormal));\n        }\n        else {\n            vertices.push(pt1.add(normal));\n            vertices.push(pt1.sub(d));\n            vertices.push(pt1.add(nextNormal));\n            vertices.push(pt1.sub(d));\n        }\n\n        segment = nextSegment;\n        length = nextLength;\n        normal = nextNormal;\n    }\n\n    if (!isLoop) {\n        vertices.push(pt2.add(normal));\n        vertices.push(pt2.sub(normal));\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                }\n            }\n        }\n    }\n\n    if (vertices.length < 4) return;\n\n    const verts = vertices.map(v => ({\n        pos: offset.add(v),\n        uv: vec2(),\n        color: opt.color || Color.WHITE,\n        opacity: opt.opacity ?? 1,\n    }));\n\n    const indices = [];\n    let index = 0;\n    for (let i = 0; i < vertices.length - 2; i += 2) {\n        indices[index++] = i + 1;\n        indices[index++] = i;\n        indices[index++] = i + 2;\n        indices[index++] = i + 2;\n        indices[index++] = i + 3;\n        indices[index++] = i + 1;\n    }\n\n    if (isLoop) {\n        indices[index++] = vertices.length - 1;\n        indices[index++] = vertices.length - 2;\n        indices[index++] = 0;\n        indices[index++] = 0;\n        indices[index++] = 1;\n        indices[index++] = vertices.length - 1;\n    }\n\n    drawRaw(\n        verts,\n        indices,\n        opt.fixed,\n        gfx.defTex,\n        opt.shader,\n        opt.uniform ?? undefined,\n    );\n}\n\nexport function _drawLinesRound(opt: DrawLinesOpt) {\n    const pts = opt.pts;\n    const vertices = [];\n    const halfWidth = (opt.width || 1) * 0.5;\n    const isLoop = pts[0] === pts[pts.length - 1]\n        || pts[0].eq(pts[pts.length - 1]);\n    const offset = opt.pos || vec2(0, 0);\n    let segment;\n\n    if (isLoop) {\n        segment = pts[0].sub(pts[pts.length - 2]);\n    }\n    else {\n        segment = pts[1].sub(pts[0]);\n    }\n\n    let length = segment.len();\n    let normal = segment.normal().scale(-halfWidth / length);\n\n    let pt1;\n    let pt2 = pts[0];\n\n    if (!isLoop) {\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(-halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(-1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                }\n            }\n        }\n    }\n\n    for (let i = 1; i < pts.length; i++) {\n        if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n        pt1 = pt2;\n        pt2 = pts[i];\n\n        const nextSegment = pt2.sub(pt1);\n        const nextLength = nextSegment.len();\n        const nextNormal = nextSegment.normal().scale(\n            -halfWidth / nextLength,\n        );\n\n        const det = segment.cross(nextSegment);\n\n        if (Math.abs(det) / (length * nextLength) < 0.05) {\n            // Parallel\n            vertices.push(pt1.add(normal));\n            vertices.push(pt1.sub(normal));\n\n            if (segment.dot(nextSegment) < 0) {\n                vertices.push(pt1.sub(normal));\n                vertices.push(pt1.add(normal));\n            }\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n            continue;\n        }\n\n        const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n        const d = normal.add(segment.scale(lambda));\n\n        if (det > 0) {\n            const fixedPoint = pt1.add(d);\n            const n = Math.max(halfWidth, 10);\n            const angle = deg2rad(normal.angleBetween(nextNormal) / n);\n            let vector = normal;\n            const cs = Math.cos(angle);\n            const sn = Math.sin(angle);\n            for (let j = 0; j < n; j++) {\n                vertices.push(fixedPoint);\n                vertices.push(pt1.sub(vector));\n                vector = vec2(\n                    vector.x * cs - vector.y * sn,\n                    vector.x * sn + vector.y * cs,\n                );\n            }\n        }\n        else {\n            const fixedPoint = pt1.sub(d);\n            const n = Math.max(halfWidth, 10);\n            const angle = deg2rad(normal.angleBetween(nextNormal) / n);\n            let vector = normal;\n            const cs = Math.cos(angle);\n            const sn = Math.sin(angle);\n            for (let j = 0; j < n; j++) {\n                vertices.push(pt1.add(vector));\n                vertices.push(fixedPoint);\n                vector = vec2(\n                    vector.x * cs - vector.y * sn,\n                    vector.x * sn + vector.y * cs,\n                );\n            }\n        }\n\n        segment = nextSegment;\n        length = nextLength;\n        normal = nextNormal;\n    }\n\n    if (!isLoop) {\n        vertices.push(pt2.add(normal));\n        vertices.push(pt2.sub(normal));\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                }\n            }\n        }\n    }\n\n    if (vertices.length < 4) return;\n\n    const verts = vertices.map(v => ({\n        pos: offset.add(v),\n        uv: vec2(),\n        color: opt.color || Color.WHITE,\n        opacity: opt.opacity ?? 1,\n    }));\n\n    const indices = [];\n    let index = 0;\n    for (let i = 0; i < vertices.length - 2; i += 2) {\n        indices[index++] = i + 1;\n        indices[index++] = i;\n        indices[index++] = i + 2;\n        indices[index++] = i + 2;\n        indices[index++] = i + 3;\n        indices[index++] = i + 1;\n    }\n\n    if (isLoop) {\n        indices[index++] = vertices.length - 1;\n        indices[index++] = vertices.length - 2;\n        indices[index++] = 0;\n        indices[index++] = 0;\n        indices[index++] = 1;\n        indices[index++] = vertices.length - 1;\n    }\n\n    drawRaw(\n        verts,\n        indices,\n        opt.fixed,\n        gfx.defTex,\n        opt.shader,\n        opt.uniform ?? undefined,\n    );\n}\n\nexport function _drawLinesMiter(opt: DrawLinesOpt) {\n    const pts = opt.pts;\n    const vertices = [];\n    const halfWidth = (opt.width || 1) * 0.5;\n    const isLoop = pts[0] === pts[pts.length - 1]\n        || pts[0].eq(pts[pts.length - 1]);\n    const offset = opt.pos || vec2(0, 0);\n    let segment;\n\n    if (isLoop) {\n        segment = pts[0].sub(pts[pts.length - 2]);\n    }\n    else {\n        segment = pts[1].sub(pts[0]);\n    }\n\n    let length = segment.len();\n    let normal = segment.normal().scale(-halfWidth / length);\n\n    let pt1;\n    let pt2 = pts[0];\n\n    if (!isLoop) {\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(-halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(-1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                }\n            }\n        }\n    }\n\n    for (let i = 1; i < pts.length; i++) {\n        if (pt2 === pts[i] || pt2.eq(pts[i])) continue;\n        pt1 = pt2;\n        pt2 = pts[i];\n\n        const nextSegment = pt2.sub(pt1);\n        const nextLength = nextSegment.len();\n        const nextNormal = nextSegment.normal().scale(\n            -halfWidth / nextLength,\n        );\n\n        const det = segment.cross(nextSegment);\n\n        if (Math.abs(det) / (length * nextLength) < 0.05) {\n            // Parallel\n            vertices.push(pt1.add(normal));\n            vertices.push(pt1.sub(normal));\n\n            if (segment.dot(nextSegment) < 0) {\n                vertices.push(pt1.sub(normal));\n                vertices.push(pt1.add(normal));\n            }\n\n            segment = nextSegment;\n            length = nextLength;\n            normal = nextNormal;\n            continue;\n        }\n\n        const lambda = (nextNormal.sub(normal)).cross(nextSegment) / det;\n        const d = normal.add(segment.scale(lambda));\n\n        vertices.push(pt1.add(d));\n        vertices.push(pt1.sub(d));\n\n        segment = nextSegment;\n        length = nextLength;\n        normal = nextNormal;\n    }\n\n    if (!isLoop) {\n        vertices.push(pt2.add(normal));\n        vertices.push(pt2.sub(normal));\n        switch (opt.cap) {\n            case \"square\": {\n                const dir = segment.scale(halfWidth / length);\n                vertices.push(pt2.add(dir).add(normal));\n                vertices.push(pt2.add(dir).sub(normal));\n                break;\n            }\n            case \"round\": {\n                const n = Math.max(halfWidth, 10);\n                const angle = Math.PI / n;\n                let vector = normal.scale(1);\n                const cs = Math.cos(angle);\n                const sn = Math.sin(angle);\n                for (let j = 0; j < n; j++) {\n                    vector = vec2(\n                        vector.x * cs - vector.y * sn,\n                        vector.x * sn + vector.y * cs,\n                    );\n                    vertices.push(pt2);\n                    vertices.push(pt2.sub(vector));\n                }\n            }\n        }\n    }\n\n    if (vertices.length < 4) return;\n\n    const verts = vertices.map(v => ({\n        pos: offset.add(v),\n        uv: vec2(),\n        color: opt.color || Color.WHITE,\n        opacity: opt.opacity ?? 1,\n    }));\n\n    const indices = [];\n    let index = 0;\n    for (let i = 0; i < vertices.length - 2; i += 2) {\n        indices[index++] = i + 1;\n        indices[index++] = i;\n        indices[index++] = i + 2;\n        indices[index++] = i + 2;\n        indices[index++] = i + 3;\n        indices[index++] = i + 1;\n    }\n\n    if (isLoop) {\n        indices[index++] = vertices.length - 1;\n        indices[index++] = vertices.length - 2;\n        indices[index++] = 0;\n        indices[index++] = 0;\n        indices[index++] = 1;\n        indices[index++] = vertices.length - 1;\n    }\n\n    drawRaw(\n        verts,\n        indices,\n        opt.fixed,\n        gfx.defTex,\n        opt.shader,\n        opt.uniform ?? undefined,\n    );\n}\n\nexport function drawLines(opt: DrawLinesOpt) {\n    const pts = opt.pts;\n    const width = opt.width ?? 1;\n\n    if (!pts) {\n        throw new Error(\"drawLines() requires property \\\"pts\\\".\");\n    }\n\n    if (pts.length < 2) {\n        return;\n    }\n\n    if (pts.length > 2) {\n        switch (opt.join) {\n            case \"bevel\":\n                return _drawLinesBevel(opt);\n            case \"round\":\n                return _drawLinesRound(opt);\n            case \"miter\":\n                return _drawLinesMiter(opt);\n        }\n    }\n\n    if (opt.radius && pts.length >= 3) {\n        // TODO: line joines\n        // TODO: rounded vertices for arbitrary polygonic shape\n        drawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }));\n\n        for (let i = 1; i < pts.length - 2; i++) {\n            const p1 = pts[i];\n            const p2 = pts[i + 1];\n            drawLine(Object.assign({}, opt, {\n                p1: p1,\n                p2: p2,\n            }));\n        }\n\n        drawLine(Object.assign({}, opt, {\n            p1: pts[pts.length - 2],\n            p2: pts[pts.length - 1],\n        }));\n    }\n    else {\n        for (let i = 0; i < pts.length - 1; i++) {\n            drawLine(Object.assign({}, opt, {\n                p1: pts[i],\n                p2: pts[i + 1],\n            }));\n            // TODO: other line join types\n            if (opt.join !== \"none\") {\n                drawCircle(Object.assign({}, opt, {\n                    pos: pts[i],\n                    radius: width / 2,\n                }));\n            }\n        }\n    }\n}\n", "import type { Vec2 } from \"../../math/math\";\nimport type { RenderProps } from \"../../types\";\nimport { drawLines } from \"./drawLine\";\n\nexport type DrawCurveOpt = RenderProps & {\n    /**\n     * The amount of line segments to draw.\n     */\n    segments?: number;\n    /**\n     * The width of the line.\n     */\n    width?: number;\n};\n\nexport function drawCurve(curve: (t: number) => Vec2, opt: DrawCurveOpt) {\n    const segments = opt.segments ?? 16;\n    const p: Vec2[] = [];\n\n    for (let i = 0; i <= segments; i++) {\n        p.push(curve(i / segments));\n    }\n\n    drawLines({\n        pts: p,\n        width: opt.width || 1,\n        pos: opt.pos,\n        color: opt.color,\n        opacity: opt.opacity,\n    });\n}\n", "import { evaluateBezier, type Vec2 } from \"../../math/math\";\nimport { drawCurve, type DrawCurveOpt } from \"./drawCurve\";\n\nexport type DrawBezierOpt = DrawCurveOpt & {\n    /**\n     * The first point.\n     */\n    pt1: Vec2;\n    /**\n     * The the first control point.\n     */\n    pt2: Vec2;\n    /**\n     * The the second control point.\n     */\n    pt3: Vec2;\n    /**\n     * The second point.\n     */\n    pt4: Vec2;\n};\n\nexport function drawBezier(opt: DrawBezierOpt) {\n    drawCurve(\n        t => evaluateBezier(opt.pt1, opt.pt2, opt.pt3, opt.pt4, t),\n        opt,\n    );\n}\n", "import type { Shader, Uniform } from \"../assets\";\nimport type { ImageSource, TexFilter, TextureOpt } from \"../types\";\nimport { deepEq } from \"../utils/\";\n\nexport type GfxCtx = ReturnType<typeof initGfx>;\n\nexport class Texture {\n    ctx: GfxCtx;\n    src: null | ImageSource = null;\n    glTex: WebGLTexture;\n    width: number;\n    height: number;\n\n    constructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n        this.ctx = ctx;\n        const gl = ctx.gl;\n        const glText = ctx.gl.createTexture();\n\n        if (!glText) {\n            throw new Error(\"Failed to create texture\");\n        }\n\n        this.glTex = glText;\n        ctx.onDestroy(() => this.free());\n\n        this.width = w;\n        this.height = h;\n\n        const filter = {\n            \"linear\": gl.LINEAR,\n            \"nearest\": gl.NEAREST,\n        }[opt.filter ?? ctx.opts.texFilter ?? \"nearest\"];\n\n        const wrap = {\n            \"repeat\": gl.REPEAT,\n            \"clampToEdge\": gl.CLAMP_TO_EDGE,\n        }[opt.wrap ?? \"clampToEdge\"];\n\n        this.bind();\n\n        if (w && h) {\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA,\n                w,\n                h,\n                0,\n                gl.RGBA,\n                gl.UNSIGNED_BYTE,\n                null,\n            );\n        }\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n        this.unbind();\n    }\n\n    static fromImage(\n        ctx: GfxCtx,\n        img: ImageSource,\n        opt: TextureOpt = {},\n    ): Texture {\n        const tex = new Texture(ctx, img.width, img.height, opt);\n        tex.update(img);\n        tex.src = img;\n        return tex;\n    }\n\n    update(img: ImageSource, x = 0, y = 0) {\n        const gl = this.ctx.gl;\n        this.bind();\n        gl.texSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            x,\n            y,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            img,\n        );\n        this.unbind();\n    }\n\n    bind() {\n        this.ctx.pushTexture2D(this.glTex);\n    }\n\n    unbind() {\n        this.ctx.popTexture2D();\n    }\n\n    /** Frees up texture memory. Call this once the texture is no longer being used to avoid memory leaks. */\n    free() {\n        this.ctx.gl.deleteTexture(this.glTex);\n    }\n}\n\n/**\n * @group GFX\n */\nexport class FrameBuffer {\n    ctx: GfxCtx;\n    tex: Texture;\n    glFramebuffer: WebGLFramebuffer;\n    glRenderbuffer: WebGLRenderbuffer;\n\n    constructor(ctx: GfxCtx, w: number, h: number, opt: TextureOpt = {}) {\n        this.ctx = ctx;\n        const gl = ctx.gl;\n        ctx.onDestroy(() => this.free());\n        this.tex = new Texture(ctx, w, h, opt);\n\n        const frameBuffer = gl.createFramebuffer();\n        const renderBuffer = gl.createRenderbuffer();\n\n        if (!frameBuffer || !renderBuffer) {\n            throw new Error(\"Failed to create framebuffer\");\n        }\n\n        this.glFramebuffer = frameBuffer;\n        this.glRenderbuffer = renderBuffer;\n\n        this.bind();\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h);\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            this.tex.glTex,\n            0,\n        );\n        gl.framebufferRenderbuffer(\n            gl.FRAMEBUFFER,\n            gl.DEPTH_STENCIL_ATTACHMENT,\n            gl.RENDERBUFFER,\n            this.glRenderbuffer,\n        );\n        this.unbind();\n    }\n\n    get width() {\n        return this.tex.width;\n    }\n\n    get height() {\n        return this.tex.height;\n    }\n\n    toImageData() {\n        const gl = this.ctx.gl;\n        const data = new Uint8ClampedArray(this.width * this.height * 4);\n        this.bind();\n        gl.readPixels(\n            0,\n            0,\n            this.width,\n            this.height,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            data,\n        );\n        this.unbind();\n        // flip vertically\n        const bytesPerRow = this.width * 4;\n        const temp = new Uint8Array(bytesPerRow);\n        for (let y = 0; y < (this.height / 2 | 0); y++) {\n            const topOffset = y * bytesPerRow;\n            const bottomOffset = (this.height - y - 1) * bytesPerRow;\n            temp.set(data.subarray(topOffset, topOffset + bytesPerRow));\n            data.copyWithin(\n                topOffset,\n                bottomOffset,\n                bottomOffset + bytesPerRow,\n            );\n            data.set(temp, bottomOffset);\n        }\n        return new ImageData(data, this.width, this.height);\n    }\n\n    toDataURL() {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        if (!ctx) throw new Error(\"Failed to get 2d context\");\n\n        ctx.putImageData(this.toImageData(), 0, 0);\n        return canvas.toDataURL();\n    }\n\n    clear() {\n        const gl = this.ctx.gl;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    draw(action: () => void) {\n        this.bind();\n        action();\n        this.unbind();\n    }\n\n    bind() {\n        this.ctx.pushFramebuffer(this.glFramebuffer);\n        this.ctx.pushRenderbuffer(this.glRenderbuffer);\n        this.ctx.pushViewport({ x: 0, y: 0, w: this.width, h: this.height });\n    }\n\n    unbind() {\n        this.ctx.popFramebuffer();\n        this.ctx.popRenderbuffer();\n        this.ctx.popViewport();\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteFramebuffer(this.glFramebuffer);\n        gl.deleteRenderbuffer(this.glRenderbuffer);\n        this.tex.free();\n    }\n}\n\nexport type VertexFormat = {\n    name: string;\n    size: number;\n}[];\n\nexport class BatchRenderer {\n    ctx: GfxCtx;\n\n    glVBuf: WebGLBuffer;\n    glIBuf: WebGLBuffer;\n    vqueue: number[] = [];\n    iqueue: number[] = [];\n    stride: number;\n    maxVertices: number;\n    maxIndices: number;\n\n    vertexFormat: VertexFormat;\n    numDraws: number = 0;\n\n    curPrimitive: GLenum | null = null;\n    curTex: Texture | null = null;\n    curShader: Shader | null = null;\n    curUniform: Uniform = {};\n\n    constructor(\n        ctx: GfxCtx,\n        format: VertexFormat,\n        maxVertices: number,\n        maxIndices: number,\n    ) {\n        const gl = ctx.gl;\n\n        this.vertexFormat = format;\n        this.ctx = ctx;\n        this.stride = format.reduce((sum, f) => sum + f.size, 0);\n        this.maxVertices = maxVertices;\n        this.maxIndices = maxIndices;\n\n        const glVBuf = gl.createBuffer();\n\n        if (!glVBuf) {\n            throw new Error(\"Failed to create vertex buffer\");\n        }\n\n        this.glVBuf = glVBuf;\n\n        ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, maxVertices * 4, gl.DYNAMIC_DRAW);\n        ctx.popArrayBuffer();\n\n        this.glIBuf = gl.createBuffer()!;\n        ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, maxIndices * 4, gl.DYNAMIC_DRAW);\n        ctx.popElementArrayBuffer();\n    }\n\n    push(\n        primitive: GLenum,\n        verts: number[],\n        indices: number[],\n        shader: Shader,\n        tex: Texture | null = null,\n        uniform: Uniform = {},\n    ) {\n        if (\n            primitive !== this.curPrimitive\n            || tex !== this.curTex\n            || shader !== this.curShader\n            || !deepEq(this.curUniform, uniform)\n            || this.vqueue.length + verts.length * this.stride\n                > this.maxVertices\n            || this.iqueue.length + indices.length > this.maxIndices\n        ) {\n            this.flush();\n        }\n        const indexOffset = this.vqueue.length / this.stride;\n        for (const v of verts) {\n            this.vqueue.push(v);\n        }\n        for (const i of indices) {\n            this.iqueue.push(i + indexOffset);\n        }\n        this.curPrimitive = primitive;\n        this.curShader = shader;\n        this.curTex = tex;\n        this.curUniform = uniform;\n    }\n\n    flush() {\n        if (\n            !this.curPrimitive\n            || !this.curShader\n            || this.vqueue.length === 0\n            || this.iqueue.length === 0\n        ) {\n            return;\n        }\n\n        const gl = this.ctx.gl;\n\n        this.ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(this.vqueue));\n        this.ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferSubData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            0,\n            new Uint16Array(this.iqueue),\n        );\n        this.ctx.setVertexFormat(this.vertexFormat);\n        this.curShader.bind();\n        this.curShader.send(this.curUniform);\n        this.curTex?.bind();\n        gl.drawElements(\n            this.curPrimitive,\n            this.iqueue.length,\n            gl.UNSIGNED_SHORT,\n            0,\n        );\n        this.curTex?.unbind();\n        this.curShader.unbind();\n\n        this.ctx.popArrayBuffer();\n        this.ctx.popElementArrayBuffer();\n\n        this.vqueue = [];\n        this.iqueue = [];\n        this.numDraws++;\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteBuffer(this.glVBuf);\n        gl.deleteBuffer(this.glIBuf);\n    }\n}\n\nexport class Mesh {\n    ctx: GfxCtx;\n    glVBuf: WebGLBuffer;\n    glIBuf: WebGLBuffer;\n    vertexFormat: VertexFormat;\n    count: number;\n\n    constructor(\n        ctx: GfxCtx,\n        format: VertexFormat,\n        verts: number[],\n        indices: number[],\n    ) {\n        const gl = ctx.gl;\n        this.vertexFormat = format;\n        this.ctx = ctx;\n        const glVBuf = gl.createBuffer();\n\n        if (!glVBuf) throw new Error(\"Failed to create vertex buffer\");\n\n        this.glVBuf = glVBuf;\n\n        ctx.pushArrayBuffer(this.glVBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\n        ctx.popArrayBuffer();\n\n        this.glIBuf = gl.createBuffer()!;\n        ctx.pushElementArrayBuffer(this.glIBuf);\n        gl.bufferData(\n            gl.ELEMENT_ARRAY_BUFFER,\n            new Uint16Array(indices),\n            gl.STATIC_DRAW,\n        );\n        ctx.popElementArrayBuffer();\n\n        this.count = indices.length;\n    }\n\n    draw(primitive?: GLenum) {\n        const gl = this.ctx.gl;\n        this.ctx.pushArrayBuffer(this.glVBuf);\n        this.ctx.pushElementArrayBuffer(this.glIBuf);\n        this.ctx.setVertexFormat(this.vertexFormat);\n        gl.drawElements(\n            primitive ?? gl.TRIANGLES,\n            this.count,\n            gl.UNSIGNED_SHORT,\n            0,\n        );\n        this.ctx.popArrayBuffer();\n        this.ctx.popElementArrayBuffer();\n    }\n\n    free() {\n        const gl = this.ctx.gl;\n        gl.deleteBuffer(this.glVBuf);\n        gl.deleteBuffer(this.glIBuf);\n    }\n}\n\nfunction genStack<T>(setFunc: (item: T | null) => void) {\n    const stack: T[] = [];\n    // TODO: don't do anything if pushed item is the same as the one on top?\n    const push = (item: T) => {\n        stack.push(item);\n        setFunc(item);\n    };\n    const pop = () => {\n        stack.pop();\n        setFunc(cur() ?? null);\n    };\n    const cur = () => stack[stack.length - 1];\n    return [push, pop, cur] as const;\n}\n\nexport function initGfx(gl: WebGLRenderingContext, opts: {\n    texFilter?: TexFilter;\n} = {}) {\n    const gc: Array<() => void> = [];\n\n    function onDestroy(action: () => unknown) {\n        gc.push(action);\n    }\n\n    function destroy() {\n        gc.forEach((action) => action());\n        const extension = gl.getExtension(\"WEBGL_lose_context\");\n        if (extension) extension.loseContext();\n    }\n\n    let curVertexFormat: object | null = null;\n\n    function setVertexFormat(fmt: VertexFormat) {\n        if (deepEq(fmt, curVertexFormat)) return;\n        curVertexFormat = fmt;\n        const stride = fmt.reduce((sum, f) => sum + f.size, 0);\n        fmt.reduce((offset, f, i) => {\n            gl.vertexAttribPointer(\n                i,\n                f.size,\n                gl.FLOAT,\n                false,\n                stride * 4,\n                offset,\n            );\n            gl.enableVertexAttribArray(i);\n            return offset + f.size * 4;\n        }, 0);\n    }\n\n    const [pushTexture2D, popTexture2D] = genStack<WebGLTexture>((t) =>\n        gl.bindTexture(gl.TEXTURE_2D, t)\n    );\n\n    const [pushArrayBuffer, popArrayBuffer] = genStack<WebGLBuffer>((b) =>\n        gl.bindBuffer(gl.ARRAY_BUFFER, b)\n    );\n\n    const [pushElementArrayBuffer, popElementArrayBuffer] = genStack<\n        WebGLBuffer\n    >((b) => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b));\n\n    const [pushFramebuffer, popFramebuffer] = genStack<WebGLFramebuffer>((b) =>\n        gl.bindFramebuffer(gl.FRAMEBUFFER, b)\n    );\n\n    const [pushRenderbuffer, popRenderbuffer] = genStack<WebGLRenderbuffer>((\n        b,\n    ) => gl.bindRenderbuffer(gl.RENDERBUFFER, b));\n\n    const [pushViewport, popViewport] = genStack<\n        { x: number; y: number; w: number; h: number }\n    >((stack) => {\n        if (!stack) return;\n        const { x, y, w, h } = stack;\n\n        gl.viewport(x, y, w, h);\n    });\n\n    const [pushProgram, popProgram] = genStack<WebGLProgram>((p) =>\n        gl.useProgram(p)\n    );\n\n    pushViewport({\n        x: 0,\n        y: 0,\n        w: gl.drawingBufferWidth,\n        h: gl.drawingBufferHeight,\n    });\n\n    return {\n        gl,\n        opts,\n        onDestroy,\n        destroy,\n        pushTexture2D,\n        popTexture2D,\n        pushArrayBuffer,\n        popArrayBuffer,\n        pushElementArrayBuffer,\n        popElementArrayBuffer,\n        pushFramebuffer,\n        popFramebuffer,\n        pushRenderbuffer,\n        popRenderbuffer,\n        pushViewport,\n        popViewport,\n        pushProgram,\n        popProgram,\n        setVertexFormat,\n    };\n}\n", "import { Asset, type BitmapFontData, FontData, resolveFont } from \"../assets\";\nimport {\n    DEF_FONT_FILTER,\n    DEF_TEXT_CACHE_SIZE,\n    FONT_ATLAS_HEIGHT,\n    FONT_ATLAS_WIDTH,\n    MULTI_WORD_RE,\n} from \"../constants\";\nimport { fontCacheC2d, fontCacheCanvas, gfx } from \"../kaplay\";\nimport { Color } from \"../math/color\";\nimport { Quad, Vec2, vec2 } from \"../math/math\";\nimport { type Outline, type TexFilter } from \"../types\";\nimport { runes } from \"../utils\";\nimport { alignPt } from \"./anchor\";\nimport type {\n    CharTransform,\n    DrawTextOpt,\n    FormattedChar,\n    FormattedText,\n} from \"./draw\";\nimport { Texture } from \"./gfx\";\n\ntype FontAtlas = {\n    font: BitmapFontData;\n    cursor: Vec2;\n    outline: Outline | null;\n};\n\nconst fontAtlases: Record<string, FontAtlas> = {};\n\nfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n    if (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n    if (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n    if (tr.angle) fchar.angle += tr.angle;\n    if (tr.color && fchar.ch.length === 1) {\n        fchar.color = fchar.color.mult(tr.color);\n    }\n    if (tr.opacity) fchar.opacity *= tr.opacity;\n}\n\nfunction compileStyledText(text: string): {\n    charStyleMap: Record<number, string[]>;\n    text: string;\n} {\n    const charStyleMap = {} as Record<number, string[]>;\n    let renderText = \"\";\n    let styleStack: [string, number][] = [];\n    let lastIndex = 0;\n    let skipCount = 0;\n\n    for (let i = 0; i < text.length; i++) {\n        if (i !== lastIndex + 1) skipCount += i - lastIndex;\n        lastIndex = i;\n\n        if (text[i] === \"\\\\\" && text[i + 1] === \"[\") continue;\n\n        if ((i === 0 || text[i - 1] !== \"\\\\\") && text[i] === \"[\") {\n            const start = i;\n\n            i++;\n\n            let isClosing = text[i] === \"/\";\n            let style = \"\";\n\n            if (isClosing) i++;\n\n            while (i < text.length && text[i] !== \"]\") {\n                style += text[i++];\n            }\n\n            if (\n                !MULTI_WORD_RE.test(style)\n                || i >= text.length\n                || text[i] !== \"]\"\n                || (isClosing\n                    && (styleStack.length === 0\n                        || styleStack[styleStack.length - 1][0] !== style))\n            ) {\n                i = start;\n            }\n            else {\n                if (!isClosing) styleStack.push([style, start]);\n                else styleStack.pop();\n\n                continue;\n            }\n        }\n\n        renderText += text[i];\n        if (styleStack.length > 0) {\n            charStyleMap[i - skipCount] = styleStack.map(([name]) => name);\n        }\n    }\n\n    if (styleStack.length > 0) {\n        while (styleStack.length > 0) {\n            const [_, start] = styleStack.pop()!;\n            text = text.substring(0, start) + \"\\\\\" + text.substring(start);\n        }\n\n        return compileStyledText(text);\n    }\n\n    return {\n        charStyleMap: charStyleMap,\n        text: renderText,\n    };\n}\n\nexport function formatText(opt: DrawTextOpt): FormattedText {\n    if (opt.text === undefined) {\n        throw new Error(\"formatText() requires property \\\"text\\\".\");\n    }\n\n    let font = resolveFont(opt.font);\n\n    // if it's still loading\n    if (opt.text === \"\" || font instanceof Asset || !font) {\n        return {\n            width: 0,\n            height: 0,\n            chars: [],\n            opt: opt,\n        };\n    }\n\n    const { charStyleMap, text } = compileStyledText(opt.text + \"\");\n    const chars = runes(text);\n\n    // if it's not bitmap font, we draw it with 2d canvas or use cached image\n    if (font instanceof FontData || typeof font === \"string\") {\n        const fontName = font instanceof FontData\n            ? font.fontface.family\n            : font;\n        const opts: {\n            outline: Outline | null;\n            filter: TexFilter;\n        } = font instanceof FontData\n            ? {\n                outline: font.outline,\n                filter: font.filter,\n            }\n            : {\n                outline: null,\n                filter: DEF_FONT_FILTER,\n            };\n\n        // TODO: customizable font tex filter\n        const atlas: FontAtlas = fontAtlases[fontName] ?? {\n            font: {\n                tex: new Texture(gfx.ggl, FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n                    filter: opts.filter,\n                }),\n                map: {},\n                size: DEF_TEXT_CACHE_SIZE,\n            },\n            cursor: new Vec2(0),\n            outline: opts.outline,\n        };\n\n        if (!fontAtlases[fontName]) {\n            fontAtlases[fontName] = atlas;\n        }\n\n        font = atlas.font;\n\n        for (const ch of chars) {\n            if (!atlas.font.map[ch]) {\n                // TODO: use assets.packer to pack font texture\n                const c2d = fontCacheC2d;\n                if (!c2d) throw new Error(\"fontCacheC2d is not defined.\");\n\n                if (!fontCacheCanvas) {\n                    throw new Error(\"fontCacheCanvas is not defined.\");\n                }\n\n                c2d.clearRect(\n                    0,\n                    0,\n                    fontCacheCanvas.width,\n                    fontCacheCanvas.height,\n                );\n                c2d.font = `${font.size}px ${fontName}`;\n                c2d.textBaseline = \"top\";\n                c2d.textAlign = \"left\";\n                c2d.fillStyle = \"#ffffff\";\n                const m = c2d.measureText(ch);\n                let w = Math.ceil(m.width);\n                if (!w) continue;\n                let h = font.size;\n\n                // TODO: Test if this works with the verification of width and color\n                if (\n                    atlas.outline && atlas.outline.width\n                    && atlas.outline.color\n                ) {\n                    c2d.lineJoin = \"round\";\n                    c2d.lineWidth = atlas.outline.width * 2;\n                    c2d.strokeStyle = atlas.outline.color.toHex();\n                    c2d.strokeText(\n                        ch,\n                        atlas.outline.width,\n                        atlas.outline.width,\n                    );\n\n                    w += atlas.outline.width * 2;\n                    h += atlas.outline.width * 3;\n                }\n\n                c2d.fillText(\n                    ch,\n                    atlas.outline?.width ?? 0,\n                    atlas.outline?.width ?? 0,\n                );\n\n                const img = c2d.getImageData(0, 0, w, h);\n\n                // if we are about to exceed the X axis of the texture, go to another line\n                if (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n                    atlas.cursor.x = 0;\n                    atlas.cursor.y += h;\n                    if (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n                        // TODO: create another atlas\n                        throw new Error(\n                            \"Font atlas exceeds character limit\",\n                        );\n                    }\n                }\n\n                font.tex.update(img, atlas.cursor.x, atlas.cursor.y);\n                font.map[ch] = new Quad(\n                    atlas.cursor.x,\n                    atlas.cursor.y,\n                    w,\n                    h,\n                );\n                atlas.cursor.x += w;\n            }\n        }\n    }\n\n    const size = opt.size || font.size;\n    const scale = vec2(opt.scale ?? 1).scale(size / font.size);\n    const lineSpacing = opt.lineSpacing ?? 0;\n    const letterSpacing = opt.letterSpacing ?? 0;\n    let curX: number = 0;\n    let tw = 0;\n    let th = 0;\n    const lines: Array<{\n        width: number;\n        chars: FormattedChar[];\n    }> = [];\n    let curLine: FormattedChar[] = [];\n    let cursor = 0;\n    let lastSpace: number | null = null;\n    let lastSpaceWidth: number = 0;\n\n    // TODO: word break\n    while (cursor < chars.length) {\n        let ch = chars[cursor];\n\n        // always new line on '\\n'\n        if (ch === \"\\n\") {\n            th += size + lineSpacing;\n\n            lines.push({\n                width: curX - letterSpacing,\n                chars: curLine,\n            });\n\n            lastSpace = null;\n            lastSpaceWidth = 0;\n            curX = 0;\n            curLine = [];\n        }\n        else {\n            let q = font.map[ch];\n\n            // TODO: leave space if character not found?\n            if (q) {\n                let gw = q.w * scale.x;\n\n                if (opt.width && curX + gw > opt.width) {\n                    // new line on last word if width exceeds\n                    th += size + lineSpacing;\n                    if (lastSpace != null) {\n                        cursor -= curLine.length - lastSpace;\n                        ch = chars[cursor];\n                        q = font.map[ch];\n                        gw = q.w * scale.x;\n                        // omit trailing space\n                        curLine = curLine.slice(0, lastSpace - 1);\n                        curX = lastSpaceWidth;\n                    }\n                    lastSpace = null;\n                    lastSpaceWidth = 0;\n\n                    lines.push({\n                        width: curX - letterSpacing,\n                        chars: curLine,\n                    });\n\n                    curX = 0;\n                    curLine = [];\n                }\n\n                // push char\n                curLine.push({\n                    tex: font.tex,\n                    width: q.w,\n                    height: q.h,\n                    // without some padding there'll be visual artifacts on edges\n                    quad: new Quad(\n                        q.x / font.tex.width,\n                        q.y / font.tex.height,\n                        q.w / font.tex.width,\n                        q.h / font.tex.height,\n                    ),\n                    ch: ch,\n                    pos: new Vec2(curX, th),\n                    opacity: opt.opacity ?? 1,\n                    color: opt.color ?? Color.WHITE,\n                    scale: vec2(scale),\n                    angle: 0,\n                });\n\n                if (ch === \" \") {\n                    lastSpace = curLine.length;\n                    lastSpaceWidth = curX;\n                }\n\n                curX += gw;\n                tw = Math.max(tw, curX);\n                curX += letterSpacing;\n            }\n        }\n\n        cursor++;\n    }\n\n    lines.push({\n        width: curX - letterSpacing,\n        chars: curLine,\n    });\n\n    th += size;\n\n    if (opt.width) {\n        tw = opt.width;\n    }\n\n    const fchars: FormattedChar[] = [];\n\n    for (let i = 0; i < lines.length; i++) {\n        const ox = (tw - lines[i].width) * alignPt(opt.align ?? \"left\");\n\n        for (const fchar of lines[i].chars) {\n            const q = font.map[fchar.ch];\n            const idx = fchars.length + i;\n\n            fchar.pos = fchar.pos.add(ox, 0).add(\n                q.w * scale.x * 0.5,\n                q.h * scale.y * 0.5,\n            );\n\n            if (opt.transform) {\n                const tr = typeof opt.transform === \"function\"\n                    ? opt.transform(idx, fchar.ch)\n                    : opt.transform;\n                if (tr) {\n                    applyCharTransform(fchar, tr);\n                }\n            }\n\n            if (charStyleMap[idx]) {\n                const styles = charStyleMap[idx];\n                for (const name of styles) {\n                    const style = opt.styles?.[name];\n                    const tr = typeof style === \"function\"\n                        ? style(idx, fchar.ch)\n                        : style;\n                    if (tr) {\n                        applyCharTransform(fchar, tr);\n                    }\n                }\n            }\n\n            fchars.push(fchar);\n        }\n    }\n\n    return {\n        width: tw,\n        height: th,\n        chars: fchars,\n        opt: opt,\n    };\n}\n", "import { DEF_ANCHOR, UV_PAD } from \"../../constants\";\nimport { rgb } from \"../../math/color\";\nimport { Quad, Vec2 } from \"../../math/math\";\nimport type { DrawUVQuadOpt } from \"../../types\";\nimport { anchorPt } from \"../anchor\";\nimport {\n    popTransform,\n    pushRotate,\n    pushScale,\n    pushTransform,\n    pushTranslate,\n} from \"../stack\";\nimport { drawRaw } from \"./drawRaw\";\n\nexport function drawUVQuad(opt: DrawUVQuadOpt) {\n    if (opt.width === undefined || opt.height === undefined) {\n        throw new Error(\n            \"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\",\n        );\n    }\n\n    if (opt.width <= 0 || opt.height <= 0) {\n        return;\n    }\n\n    const w = opt.width;\n    const h = opt.height;\n    const anchor = anchorPt(opt.anchor || DEF_ANCHOR);\n    const offset = anchor.scale(new Vec2(w, h).scale(-0.5));\n    const q = opt.quad || new Quad(0, 0, 1, 1);\n    const color = opt.color || rgb(255, 255, 255);\n    const opacity = opt.opacity ?? 1;\n\n    // apply uv padding to avoid artifacts\n    const uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0;\n    const uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0;\n    const qx = q.x + uvPadX;\n    const qy = q.y + uvPadY;\n    const qw = q.w - uvPadX * 2;\n    const qh = q.h - uvPadY * 2;\n\n    pushTransform();\n    pushTranslate(opt.pos);\n    pushRotate(opt.angle);\n    pushScale(opt.scale);\n    pushTranslate(offset);\n\n    drawRaw(\n        [\n            {\n                pos: new Vec2(-w / 2, h / 2),\n                uv: new Vec2(\n                    opt.flipX ? qx + qw : qx,\n                    opt.flipY ? qy : qy + qh,\n                ),\n                color: color,\n                opacity: opacity,\n            },\n            {\n                pos: new Vec2(-w / 2, -h / 2),\n                uv: new Vec2(\n                    opt.flipX ? qx + qw : qx,\n                    opt.flipY ? qy + qh : qy,\n                ),\n                color: color,\n                opacity: opacity,\n            },\n            {\n                pos: new Vec2(w / 2, -h / 2),\n                uv: new Vec2(\n                    opt.flipX ? qx : qx + qw,\n                    opt.flipY ? qy + qh : qy,\n                ),\n                color: color,\n                opacity: opacity,\n            },\n            {\n                pos: new Vec2(w / 2, h / 2),\n                uv: new Vec2(\n                    opt.flipX ? qx : qx + qw,\n                    opt.flipY ? qy : qy + qh,\n                ),\n                color: color,\n                opacity: opacity,\n            },\n        ],\n        [0, 1, 3, 1, 2, 3],\n        opt.fixed,\n        opt.tex,\n        opt.shader,\n        opt.uniform ?? undefined,\n    );\n\n    popTransform();\n}\n", "import type { Color } from \"../../math/color\";\nimport type { Quad, Vec2 } from \"../../math/math\";\nimport { anchorPt } from \"../anchor\";\nimport type { Texture } from \"../gfx\";\nimport {\n    popTransform,\n    pushRotate,\n    pushTransform,\n    pushTranslate,\n} from \"../stack\";\nimport type { DrawTextOpt } from \"./drawText\";\nimport { drawUVQuad } from \"./drawUVQuad\";\n\n/**\n * Formatted text with info on how and where to render each character.\n */\nexport type FormattedText = {\n    width: number;\n    height: number;\n    chars: FormattedChar[];\n    opt: DrawTextOpt;\n};\n\n/**\n * One formated character.\n */\nexport interface FormattedChar {\n    ch: string;\n    tex: Texture;\n    width: number;\n    height: number;\n    quad: Quad;\n    pos: Vec2;\n    scale: Vec2;\n    angle: number;\n    color: Color;\n    opacity: number;\n}\n\nexport function drawFormattedText(ftext: FormattedText) {\n    pushTransform();\n    pushTranslate(ftext.opt.pos!);\n    pushRotate(ftext.opt.angle!);\n    pushTranslate(\n        anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(\n            ftext.width,\n            ftext.height,\n        ).scale(-0.5),\n    );\n\n    ftext.chars.forEach((ch) => {\n        drawUVQuad({\n            tex: ch.tex,\n            width: ch.width,\n            height: ch.height,\n            pos: ch.pos,\n            scale: ch.scale,\n            angle: ch.angle,\n            color: ch.color,\n            opacity: ch.opacity,\n            quad: ch.quad,\n            anchor: \"center\",\n            uniform: ftext.opt.uniform,\n            shader: ftext.opt.shader,\n            fixed: ftext.opt.fixed,\n        });\n    });\n    popTransform();\n}\n", "import { DEF_ANCHOR } from \"../../constants\";\nimport type { Color } from \"../../math/color\";\nimport { Vec2, vec2 } from \"../../math/math\";\nimport { getArcPts } from \"../../math/various\";\nimport type { Anchor, RenderProps } from \"../../types\";\nimport { anchorPt } from \"../anchor\";\nimport { drawPolygon } from \"./drawPolygon\";\n\n/**\n * How the rectangle should look like.\n */\nexport type DrawRectOpt = RenderProps & {\n    /**\n     * Width of the rectangle.\n     */\n    width: number;\n    /**\n     * Height of the rectangle.\n     */\n    height: number;\n    /**\n     * Use gradient instead of solid color.\n     *\n     * @since v3000.0\n     */\n    gradient?: [Color, Color];\n    /**\n     * If the gradient should be horizontal.\n     *\n     * @since v3000.0\n     */\n    horizontal?: boolean;\n    /**\n     * If fill the shape with color (set this to false if you only want an outline).\n     */\n    fill?: boolean;\n    /**\n     * The radius of each corner.\n     */\n    radius?: number | number[];\n    /**\n     * The anchor point, or the pivot point. Default to \"topleft\".\n     */\n    anchor?: Anchor | Vec2;\n};\n\nexport function drawRect(opt: DrawRectOpt) {\n    if (opt.width === undefined || opt.height === undefined) {\n        throw new Error(\n            \"drawRect() requires property \\\"width\\\" and \\\"height\\\".\",\n        );\n    }\n\n    if (opt.width <= 0 || opt.height <= 0) {\n        return;\n    }\n\n    const w = opt.width;\n    const h = opt.height;\n    const anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1);\n    const offset = anchor.scale(new Vec2(w, h).scale(-0.5));\n\n    let pts = [\n        new Vec2(0, 0),\n        new Vec2(w, 0),\n        new Vec2(w, h),\n        new Vec2(0, h),\n    ];\n\n    // TODO: gradient for rounded rect\n    // TODO: drawPolygon should handle generic rounded corners\n    if (opt.radius) {\n        // maximum radius is half the shortest side\n        const maxRadius = Math.min(w, h) / 2;\n        const r = Array.isArray(opt.radius)\n            ? opt.radius.map(r => Math.min(maxRadius, r))\n            : new Array(4).fill(Math.min(maxRadius, opt.radius));\n\n        pts = [\n            new Vec2(r[0], 0),\n            ...(r[1]\n                ? getArcPts(new Vec2(w - r[1], r[1]), r[1], r[1], 270, 360)\n                : [vec2(w, 0)]),\n            ...(r[2]\n                ? getArcPts(new Vec2(w - r[2], h - r[2]), r[2], r[2], 0, 90)\n                : [vec2(w, h)]),\n            ...(r[3]\n                ? getArcPts(new Vec2(r[3], h - r[3]), r[3], r[3], 90, 180)\n                : [vec2(0, h)]),\n            ...(r[0]\n                ? getArcPts(new Vec2(r[0], r[0]), r[0], r[0], 180, 270)\n                : []),\n        ];\n    }\n\n    drawPolygon(Object.assign({}, opt, {\n        offset,\n        pts,\n        ...(opt.gradient\n            ? {\n                colors: opt.horizontal\n                    ? [\n                        opt.gradient[0],\n                        opt.gradient[1],\n                        opt.gradient[1],\n                        opt.gradient[0],\n                    ]\n                    : [\n                        opt.gradient[0],\n                        opt.gradient[0],\n                        opt.gradient[1],\n                        opt.gradient[1],\n                    ],\n            }\n            : {}),\n    }));\n}\n", "import { gfx } from \"../../kaplay\";\nimport { flush } from \"../stack\";\n\nexport function drawUnscaled(content: () => void) {\n    flush();\n    const ow = gfx.width;\n    const oh = gfx.height;\n    gfx.width = gfx.viewport.width;\n    gfx.height = gfx.viewport.height;\n    content();\n    flush();\n    gfx.width = ow;\n    gfx.height = oh;\n}\n", "import { DBG_FONT } from \"../../constants\";\nimport { rgb } from \"../../math/color\";\nimport { type Vec2, vec2 } from \"../../math/math\";\nimport { formatText } from \"../formatText\";\nimport {\n    height,\n    popTransform,\n    pushTransform,\n    pushTranslate,\n    width,\n} from \"../stack\";\nimport { drawFormattedText } from \"./drawFormattedText\";\nimport { drawRect } from \"./drawRect\";\nimport { drawUnscaled } from \"./drawUnscaled\";\n\nexport function drawInspectText(pos: Vec2, txt: string) {\n    drawUnscaled(() => {\n        const pad = vec2(8);\n\n        pushTransform();\n        pushTranslate(pos);\n\n        const ftxt = formatText({\n            text: txt,\n            font: DBG_FONT,\n            size: 16,\n            pos: pad,\n            color: rgb(255, 255, 255),\n            fixed: true,\n        });\n\n        const bw = ftxt.width + pad.x * 2;\n        const bh = ftxt.height + pad.x * 2;\n\n        if (pos.x + bw >= width()) {\n            pushTranslate(vec2(-bw, 0));\n        }\n\n        if (pos.y + bh >= height()) {\n            pushTranslate(vec2(0, -bh));\n        }\n\n        drawRect({\n            width: bw,\n            height: bh,\n            color: rgb(0, 0, 0),\n            radius: 4,\n            opacity: 0.8,\n            fixed: true,\n        });\n\n        drawFormattedText(ftxt);\n        popTransform();\n    });\n}\n", "import type { Vec2 } from \"../../math/math\";\nimport type { RenderProps } from \"../../types\";\nimport { drawPolygon } from \"./drawPolygon\";\n\n/**\n * How the triangle should look like.\n */\nexport type DrawTriangleOpt = RenderProps & {\n    /**\n     * First point of triangle.\n     */\n    p1: Vec2;\n    /**\n     * Second point of triangle.\n     */\n    p2: Vec2;\n    /**\n     * Third point of triangle.\n     */\n    p3: Vec2;\n    /**\n     * If fill the shape with color (set this to false if you only want an outline).\n     */\n    fill?: boolean;\n    /**\n     * The radius of each corner.\n     */\n    radius?: number;\n};\n\nexport function drawTriangle(opt: DrawTriangleOpt) {\n    if (!opt.p1 || !opt.p2 || !opt.p3) {\n        throw new Error(\n            \"drawTriangle() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\",\n        );\n    }\n\n    return drawPolygon(Object.assign({}, opt, {\n        pts: [opt.p1, opt.p2, opt.p3],\n    }));\n}\n", "import { DBG_FONT, LOG_TIME } from \"../../constants\";\nimport { app, debug, game, globalOpt } from \"../../kaplay\";\nimport { rgb } from \"../../math/color\";\nimport { vec2, wave } from \"../../math/math\";\nimport { formatText } from \"../formatText\";\nimport {\n    contentToView,\n    height,\n    mousePos,\n    popTransform,\n    pushTransform,\n    pushTranslate,\n    width,\n} from \"../stack\";\nimport { drawCircle } from \"./drawCircle\";\nimport { drawFormattedText } from \"./drawFormattedText\";\nimport { drawInspectText } from \"./drawInspectText\";\nimport { drawRect } from \"./drawRect\";\nimport { drawTriangle } from \"./drawTriangle\";\nimport { drawUnscaled } from \"./drawUnscaled\";\n\nexport function drawDebug() {\n    if (debug.inspect) {\n        let inspecting = null;\n\n        for (const obj of game.root.get(\"*\", { recursive: true })) {\n            if (obj.c(\"area\") && obj.isHovering()) {\n                inspecting = obj;\n                break;\n            }\n        }\n\n        game.root.drawInspect();\n\n        if (inspecting) {\n            const lines = [];\n            const data = inspecting.inspect();\n\n            for (const tag in data) {\n                if (data[tag]) {\n                    // pushes the inspect function (eg: `sprite: \"bean\"`)\n                    lines.push(`${data[tag]}`);\n                }\n                else {\n                    // pushes only the tag (name of the component)\n                    lines.push(`${tag}`);\n                }\n            }\n\n            drawInspectText(contentToView(mousePos()), lines.join(\"\\n\"));\n        }\n\n        drawInspectText(vec2(8), `FPS: ${debug.fps()}`);\n    }\n\n    if (debug.paused) {\n        drawUnscaled(() => {\n            // top right corner\n            pushTransform();\n            pushTranslate(width(), 0);\n            pushTranslate(-8, 8);\n\n            const size = 32;\n\n            // bg\n            drawRect({\n                width: size,\n                height: size,\n                anchor: \"topright\",\n                color: rgb(0, 0, 0),\n                opacity: 0.8,\n                radius: 4,\n                fixed: true,\n            });\n\n            // pause icon\n            for (let i = 1; i <= 2; i++) {\n                drawRect({\n                    width: 4,\n                    height: size * 0.6,\n                    anchor: \"center\",\n                    pos: vec2(-size / 3 * i, size * 0.5),\n                    color: rgb(255, 255, 255),\n                    radius: 2,\n                    fixed: true,\n                });\n            }\n\n            popTransform();\n        });\n    }\n\n    if (debug.timeScale !== 1) {\n        drawUnscaled(() => {\n            // bottom right corner\n            pushTransform();\n            pushTranslate(width(), height());\n            pushTranslate(-8, -8);\n\n            const pad = 8;\n\n            // format text first to get text size\n            const ftxt = formatText({\n                text: debug.timeScale.toFixed(1),\n                font: DBG_FONT,\n                size: 16,\n                color: rgb(255, 255, 255),\n                pos: vec2(-pad),\n                anchor: \"botright\",\n                fixed: true,\n            });\n\n            // bg\n            drawRect({\n                width: ftxt.width + pad * 2 + pad * 4,\n                height: ftxt.height + pad * 2,\n                anchor: \"botright\",\n                color: rgb(0, 0, 0),\n                opacity: 0.8,\n                radius: 4,\n                fixed: true,\n            });\n\n            // fast forward / slow down icon\n            for (let i = 0; i < 2; i++) {\n                const flipped = debug.timeScale < 1;\n                drawTriangle({\n                    p1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n                    p2: vec2(\n                        -ftxt.width - pad * (flipped ? 2 : 3.5),\n                        -pad - ftxt.height,\n                    ),\n                    p3: vec2(\n                        -ftxt.width - pad * (flipped ? 3.5 : 2),\n                        -pad - ftxt.height / 2,\n                    ),\n                    pos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n                    color: rgb(255, 255, 255),\n                    fixed: true,\n                });\n            }\n\n            // text\n            drawFormattedText(ftxt);\n\n            popTransform();\n        });\n    }\n\n    if (debug.curRecording) {\n        drawUnscaled(() => {\n            pushTransform();\n            pushTranslate(0, height());\n            pushTranslate(24, -24);\n\n            drawCircle({\n                radius: 12,\n                color: rgb(255, 0, 0),\n                opacity: wave(0, 1, app.time() * 4),\n                fixed: true,\n            });\n\n            popTransform();\n        });\n    }\n\n    if (debug.showLog && game.logs.length > 0) {\n        drawUnscaled(() => {\n            pushTransform();\n            pushTranslate(0, height());\n            pushTranslate(8, -8);\n\n            const pad = 8;\n            const logs = [];\n\n            for (const log of game.logs) {\n                let str = \"\";\n                const style = log.msg instanceof Error ? \"error\" : \"info\";\n                str += `[time]${log.time.toFixed(2)}[/time]`;\n                str += \" \";\n                str += `[${style}]${\n                    log.msg?.toString ? log.msg.toString() : log.msg\n                }[/${style}]`;\n                logs.push(str);\n            }\n\n            game.logs = game.logs\n                .filter((log) =>\n                    app.time() - log.time < (globalOpt.logTime || LOG_TIME)\n                );\n\n            const ftext = formatText({\n                text: logs.join(\"\\n\"),\n                font: DBG_FONT,\n                pos: vec2(pad, -pad),\n                anchor: \"botleft\",\n                size: 16,\n                width: width() * 0.6,\n                lineSpacing: pad / 2,\n                fixed: true,\n                styles: {\n                    \"time\": { color: rgb(127, 127, 127) },\n                    \"info\": { color: rgb(255, 255, 255) },\n                    \"error\": { color: rgb(255, 0, 127) },\n                },\n            });\n\n            drawRect({\n                width: ftext.width + pad * 2,\n                height: ftext.height + pad * 2,\n                anchor: \"botleft\",\n                color: rgb(0, 0, 0),\n                radius: 4,\n                opacity: 0.8,\n                fixed: true,\n            });\n\n            drawFormattedText(ftext);\n            popTransform();\n        });\n    }\n}\n", "import { dt } from \"../../app/frame\";\nimport { game } from \"../../kaplay\";\nimport { lerp, Mat4, rand, Vec2 } from \"../../math/math\";\nimport { center, flush } from \"../stack\";\n\nexport function drawFrame() {\n    // calculate camera matrix\n    const cam = game.cam;\n    const shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n    cam.shake = lerp(cam.shake, 0, 5 * dt());\n    cam.transform = new Mat4()\n        .translate(center())\n        .scale(cam.scale)\n        .rotate(cam.angle)\n        .translate((cam.pos ?? center()).scale(-1).add(shake));\n\n    game.root.draw();\n    flush();\n}\n", "import { loadProgress } from \"../../assets\";\nimport { game } from \"../../kaplay\";\nimport { rgb } from \"../../math/color\";\nimport { vec2 } from \"../../math/math\";\nimport { height, width } from \"../stack\";\nimport { drawRect } from \"./drawRect\";\nimport { drawUnscaled } from \"./drawUnscaled\";\n\nexport function drawLoadScreen() {\n    const progress = loadProgress();\n\n    if (game.events.numListeners(\"loading\") > 0) {\n        game.events.trigger(\"loading\", progress);\n    }\n    else {\n        drawUnscaled(() => {\n            const w = width() / 2;\n            const h = 24;\n            const pos = vec2(width() / 2, height() / 2).sub(\n                vec2(w / 2, h / 2),\n            );\n            drawRect({\n                pos: vec2(0),\n                width: width(),\n                height: height(),\n                color: rgb(0, 0, 0),\n            });\n            drawRect({\n                pos: pos,\n                width: w,\n                height: h,\n                fill: false,\n                outline: {\n                    width: 4,\n                },\n            });\n            drawRect({\n                pos: pos,\n                width: w * progress,\n                height: h,\n            });\n        });\n    }\n}\n", "import { gfx } from \"../../kaplay\";\nimport { flush } from \"../stack\";\n\nexport function drawStenciled(\n    content: () => void,\n    mask: () => void,\n    test: number,\n) {\n    const gl = gfx.ggl.gl;\n\n    flush();\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.enable(gl.STENCIL_TEST);\n\n    // don't perform test, pure write\n    gl.stencilFunc(\n        gl.NEVER,\n        1,\n        0xFF,\n    );\n\n    // always replace since we're writing to the buffer\n    gl.stencilOp(\n        gl.REPLACE,\n        gl.REPLACE,\n        gl.REPLACE,\n    );\n\n    mask();\n    flush();\n\n    // perform test\n    gl.stencilFunc(\n        test,\n        1,\n        0xFF,\n    );\n\n    // don't write since we're only testing\n    gl.stencilOp(\n        gl.KEEP,\n        gl.KEEP,\n        gl.KEEP,\n    );\n\n    content();\n    flush();\n    gl.disable(gl.STENCIL_TEST);\n}\n", "import { gfx } from \"../../kaplay\";\nimport { drawStenciled } from \"./drawStenciled\";\n\nexport function drawMasked(content: () => void, mask: () => void) {\n    const gl = gfx.ggl.gl;\n\n    drawStenciled(content, mask, gl.EQUAL);\n}\n", "import { DEF_ANCHOR } from \"../../constants\";\nimport { Color } from \"../../math/color\";\nimport { Quad, Vec2 } from \"../../math/math\";\nimport type { DrawTextureOpt, Vertex } from \"../../types\";\nimport { anchorPt } from \"../anchor\";\nimport { drawRaw } from \"./drawRaw\";\nimport { drawUVQuad } from \"./drawUVQuad\";\n\nexport function drawTexture(opt: DrawTextureOpt) {\n    if (!opt.tex) {\n        throw new Error(\"drawTexture() requires property \\\"tex\\\".\");\n    }\n\n    const q = opt.quad ?? new Quad(0, 0, 1, 1);\n    const w = opt.tex.width * q.w;\n    const h = opt.tex.height * q.h;\n    const scale = new Vec2(1);\n\n    if (opt.tiled) {\n        const anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(\n            new Vec2(1, 1),\n        ).scale(0.5);\n        const offset = anchor.scale(opt.width || w, opt.height || h);\n\n        const fcols = (opt.width || w) / w;\n        const frows = (opt.height || h) / h;\n        const cols = Math.floor(fcols);\n        const rows = Math.floor(frows);\n        const fracX = fcols - cols;\n        const fracY = frows - rows;\n        const n = (cols + fracX ? 1 : 0) * (rows + fracY ? 1 : 0);\n        const indices = new Array<number>(n * 6);\n        const vertices = new Array<Vertex>(n * 4);\n        let index = 0;\n\n        /*drawUVQuad(Object.assign({}, opt, {\n            scale: scale.scale(opt.scale || new Vec2(1)),\n        }));*/\n\n        const addQuad = (\n            x: number,\n            y: number,\n            w: number,\n            h: number,\n            q: Quad,\n        ) => {\n            indices[index * 6 + 0] = index * 4 + 0;\n            indices[index * 6 + 1] = index * 4 + 1;\n            indices[index * 6 + 2] = index * 4 + 3;\n            indices[index * 6 + 3] = index * 4 + 1;\n            indices[index * 6 + 4] = index * 4 + 2;\n            indices[index * 6 + 5] = index * 4 + 3;\n\n            vertices[index * 4 + 0] = {\n                pos: new Vec2(x - offset.x, y - offset.y),\n                uv: new Vec2(q.x, q.y),\n                color: opt.color || Color.WHITE,\n                opacity: opt.opacity || 1,\n            };\n            vertices[index * 4 + 1] = {\n                pos: new Vec2(x + w - offset.x, y - offset.y),\n                uv: new Vec2(q.x + q.w, q.y),\n                color: opt.color || Color.WHITE,\n                opacity: opt.opacity || 1,\n            };\n            vertices[index * 4 + 2] = {\n                pos: new Vec2(x + w - offset.x, y + h - offset.y),\n                uv: new Vec2(q.x + q.w, q.y + q.h),\n                color: opt.color || Color.WHITE,\n                opacity: opt.opacity || 1,\n            };\n            vertices[index * 4 + 3] = {\n                pos: new Vec2(x - offset.x, y + h - offset.y),\n                uv: new Vec2(q.x, q.y + q.h),\n                color: opt.color || Color.WHITE,\n                opacity: opt.opacity || 1,\n            };\n            index++;\n        };\n\n        for (let j = 0; j < rows; j++) {\n            for (let i = 0; i < cols; i++) {\n                addQuad(i * w, j * h, w, h, q);\n            }\n\n            if (fracX) {\n                addQuad(\n                    cols * w,\n                    j * h,\n                    w * fracX,\n                    h,\n                    new Quad(q.x, q.y, q.w * fracX, q.h),\n                );\n            }\n        }\n\n        if (fracY) {\n            for (let i = 0; i < cols; i++) {\n                addQuad(\n                    i * w,\n                    rows * h,\n                    w,\n                    h * fracY,\n                    new Quad(q.x, q.y, q.w, q.h * fracY),\n                );\n            }\n\n            if (fracX) {\n                addQuad(\n                    cols * w,\n                    rows * h,\n                    w * fracX,\n                    h * fracY,\n                    new Quad(q.x, q.y, q.w * fracX, q.h * fracY),\n                );\n            }\n        }\n\n        drawRaw(\n            vertices,\n            indices,\n            opt.fixed,\n            opt.tex,\n            opt.shader,\n            opt.uniform ?? undefined,\n        );\n    }\n    else {\n        // TODO: should this ignore scale?\n        if (opt.width && opt.height) {\n            scale.x = opt.width / w;\n            scale.y = opt.height / h;\n        }\n        else if (opt.width) {\n            scale.x = opt.width / w;\n            scale.y = scale.x;\n        }\n        else if (opt.height) {\n            scale.y = opt.height / h;\n            scale.x = scale.y;\n        }\n\n        drawUVQuad(Object.assign({}, opt, {\n            scale: scale.scale(opt.scale || new Vec2(1)),\n            tex: opt.tex,\n            quad: q,\n            width: w,\n            height: h,\n        }));\n    }\n}\n", "import { type Asset, resolveSprite, type SpriteData } from \"../../assets\";\nimport { Quad, type Vec2 } from \"../../math\";\nimport type { Anchor, RenderProps } from \"../../types\";\nimport { drawTexture } from \"./drawTexture\";\n\n/**\n * How the sprite should look like.\n */\nexport type DrawSpriteOpt = RenderProps & {\n    /**\n     * The sprite name in the asset manager, or the raw sprite data.\n     */\n    sprite: string | SpriteData | Asset<SpriteData>;\n    /**\n     * If the sprite is loaded with multiple frames, or sliced, use the frame option to specify which frame to draw.\n     */\n    frame?: number;\n    /**\n     * Width of sprite. If `height` is not specified it'll stretch with aspect ratio. If `tiled` is set to true it'll tiled to the specified width horizontally.\n     */\n    width?: number;\n    /**\n     * Height of sprite. If `width` is not specified it'll stretch with aspect ratio. If `tiled` is set to true it'll tiled to the specified width vertically.\n     */\n    height?: number;\n    /**\n     * When set to true, `width` and `height` will not scale the sprite but instead render multiple tiled copies of them until the specified width and height. Useful for background texture pattern etc.\n     */\n    tiled?: boolean;\n    /**\n     * If flip the texture horizontally.\n     */\n    flipX?: boolean;\n    /**\n     * If flip the texture vertically.\n     */\n    flipY?: boolean;\n    /**\n     * The sub-area to render from the texture, by default it'll render the whole `quad(0, 0, 1, 1)`\n     */\n    quad?: Quad;\n    /**\n     * The anchor point, or the pivot point. Default to \"topleft\".\n     */\n    anchor?: Anchor | Vec2;\n};\n\nexport function drawSprite(opt: DrawSpriteOpt) {\n    if (!opt.sprite) {\n        throw new Error(\"drawSprite() requires property \\\"sprite\\\"\");\n    }\n\n    // TODO: slow\n    const spr = resolveSprite(opt.sprite);\n\n    if (!spr || !spr.data) {\n        return;\n    }\n\n    const q = spr.data.frames[opt.frame ?? 0];\n\n    if (!q) {\n        throw new Error(`Frame not found: ${opt.frame ?? 0}`);\n    }\n\n    drawTexture(Object.assign({}, opt, {\n        tex: spr.data.tex,\n        quad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n    }));\n}\n", "import { gfx } from \"../../kaplay\";\nimport { drawStenciled } from \"./drawStenciled\";\n\nexport function drawSubtracted(content: () => void, mask: () => void) {\n    const gl = gfx.ggl.gl;\n\n    drawStenciled(content, mask, gl.NOTEQUAL);\n}\n", "import type { Asset, BitmapFontData } from \"../../assets\";\nimport type { FontData } from \"../../assets/font\";\nimport type { Color } from \"../../math/color\";\nimport type { Vec2 } from \"../../math/math\";\nimport type { Anchor, RenderProps } from \"../../types\";\nimport { formatText } from \"../formatText\";\nimport { drawFormattedText } from \"./drawFormattedText\";\n\n/**\n * How the text should look like.\n *\n * @group Draw\n */\nexport type DrawTextOpt = RenderProps & {\n    /**\n     * The text to render.\n     */\n    text: string;\n    /**\n     * The name of font to use.\n     */\n    font?:\n        | string\n        | FontData\n        | Asset<FontData>\n        | BitmapFontData\n        | Asset<BitmapFontData>;\n    /**\n     * The size of text (the height of each character).\n     */\n    size?: number;\n    /**\n     * Text alignment (default \"left\")\n     *\n     * @since v3000.0\n     */\n    align?: TextAlign;\n    /**\n     * The maximum width. Will wrap word around if exceed.\n     */\n    width?: number;\n    /**\n     * The gap between each line (only available for bitmap fonts).\n     *\n     * @since v2000.2\n     */\n    lineSpacing?: number;\n    /**\n     * The gap between each character (only available for bitmap fonts).\n     *\n     * @since v2000.2\n     */\n    letterSpacing?: number;\n    /**\n     * The anchor point, or the pivot point. Default to \"topleft\".\n     */\n    anchor?: Anchor | Vec2;\n    /**\n     * Transform the pos, scale, rotation or color for each character based on the index or char (only available for bitmap fonts).\n     *\n     * @since v2000.1\n     */\n    transform?: CharTransform | CharTransformFunc;\n    /**\n     * Stylesheet for styled chunks, in the syntax of \"this is a [stylename]styled[/stylename] word\" (only available for bitmap fonts).\n     *\n     * @since v2000.2\n     */\n    styles?: Record<string, CharTransform | CharTransformFunc>;\n};\n\n/**\n * A function that returns a character transform config. Useful if you're generating dynamic styles.\n */\nexport type CharTransformFunc = (idx: number, ch: string) => CharTransform;\n\n/**\n * Describes how to transform each character.\n *\n * @group Options\n */\nexport interface CharTransform {\n    pos?: Vec2;\n    scale?: Vec2 | number;\n    angle?: number;\n    color?: Color;\n    opacity?: number;\n}\n\n/**\n * How the text should be aligned.\n *\n * @group Draw\n */\nexport type TextAlign =\n    | \"center\"\n    | \"left\"\n    | \"right\";\n\nexport function drawText(opt: DrawTextOpt) {\n    drawFormattedText(formatText(opt));\n}\n", "import { makeShader, type Uniform } from \"../assets/shader\";\nimport {\n    DEF_FRAG,\n    DEF_VERT,\n    MAX_BATCHED_INDICES,\n    MAX_BATCHED_VERTS,\n    VERTEX_FORMAT,\n} from \"../constants\";\nimport { BatchRenderer, FrameBuffer, type GfxCtx, Texture } from \"../gfx\";\nimport { type Color, rgb } from \"../math/color\";\nimport { Mat4 } from \"../math/math\";\nimport type { KAPLAYOpt } from \"../types\";\n\nexport type AppGfxCtx = ReturnType<typeof initAppGfx>;\n\nexport const initAppGfx = (gopt: KAPLAYOpt, ggl: GfxCtx) => {\n    const defShader = makeShader(ggl, DEF_VERT, DEF_FRAG);\n    const pixelDensity = window.devicePixelRatio || window.devicePixelRatio;\n    const gscale = gopt.scale ?? 1;\n    const { gl } = ggl;\n\n    // a 1x1 white texture to draw raw shapes like rectangles and polygons\n    // we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n    const emptyTex = Texture.fromImage(\n        ggl,\n        new ImageData(new Uint8ClampedArray([255, 255, 255, 255]), 1, 1),\n    );\n\n    const frameBuffer = (gopt.width && gopt.height)\n        ? new FrameBuffer(\n            ggl,\n            gopt.width * pixelDensity * gscale,\n            gopt.height * pixelDensity * gscale,\n        )\n        : new FrameBuffer(\n            ggl,\n            gl.drawingBufferWidth,\n            gl.drawingBufferHeight,\n        );\n\n    let bgColor: null | Color = null;\n    let bgAlpha = 1;\n\n    if (gopt.background) {\n        if (typeof gopt.background === \"string\") {\n            bgColor = rgb(gopt.background);\n        }\n        else {\n            bgColor = rgb(...gopt.background);\n            bgAlpha = gopt.background[3] ?? 1;\n        }\n\n        gl.clearColor(\n            bgColor.r / 255,\n            bgColor.g / 255,\n            bgColor.b / 255,\n            bgAlpha ?? 1,\n        );\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFuncSeparate(\n        gl.SRC_ALPHA,\n        gl.ONE_MINUS_SRC_ALPHA,\n        gl.ONE,\n        gl.ONE_MINUS_SRC_ALPHA,\n    );\n\n    const renderer = new BatchRenderer(\n        ggl,\n        VERTEX_FORMAT,\n        MAX_BATCHED_VERTS,\n        MAX_BATCHED_INDICES,\n    );\n\n    // a checkerboard texture used for the default background\n    const bgTex = Texture.fromImage(\n        ggl,\n        new ImageData(\n            new Uint8ClampedArray([\n                128,\n                128,\n                128,\n                255,\n                190,\n                190,\n                190,\n                255,\n                190,\n                190,\n                190,\n                255,\n                128,\n                128,\n                128,\n                255,\n            ]),\n            2,\n            2,\n        ),\n        {\n            wrap: \"repeat\",\n            filter: \"nearest\",\n        },\n    );\n\n    return {\n        // how many draw calls we're doing last frame, this is the number we give to users\n        lastDrawCalls: 0,\n        ggl,\n\n        // gfx states\n        defShader: defShader,\n        defTex: emptyTex,\n        frameBuffer: frameBuffer,\n        postShader: null as string | null,\n        postShaderUniform: null as Uniform | (() => Uniform) | null,\n        renderer: renderer,\n\n        transform: new Mat4(),\n        transformStack: [] as Mat4[],\n\n        bgTex: bgTex,\n        bgColor: bgColor,\n        bgAlpha: bgAlpha,\n\n        width: gopt.width\n            ?? gl.drawingBufferWidth / pixelDensity / gscale,\n        height: gopt.height\n            ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n        viewport: {\n            x: 0,\n            y: 0,\n            width: gl.drawingBufferWidth,\n            height: gl.drawingBufferHeight,\n        },\n\n        fixed: false,\n    };\n};\n", "import { gfx, globalOpt, pixelDensity } from \"../kaplay\";\n\n// update viewport based on user setting and fullscreen state\nexport function updateViewport() {\n    // content size (scaled content size, with scale, stretch and letterbox)\n    // view size (unscaled viewport size)\n    // window size (will be the same as view size except letterbox mode)\n\n    // canvas size\n    const pd = pixelDensity;\n    const canvasWidth = gfx.ggl.gl.drawingBufferWidth / pd;\n    const canvasHeight = gfx.ggl.gl.drawingBufferHeight / pd;\n\n    if (globalOpt.letterbox) {\n        if (!globalOpt.width || !globalOpt.height) {\n            throw new Error(\n                \"Letterboxing requires width and height defined.\",\n            );\n        }\n\n        const rc = canvasWidth / canvasHeight;\n        const rg = globalOpt.width / globalOpt.height;\n\n        if (rc > rg) {\n            const sw = canvasHeight * rg;\n            const x = (canvasWidth - sw) / 2;\n            gfx.viewport = {\n                x: x,\n                y: 0,\n                width: sw,\n                height: canvasHeight,\n            };\n        }\n        else {\n            const sh = canvasWidth / rg;\n            const y = (canvasHeight - sh) / 2;\n            gfx.viewport = {\n                x: 0,\n                y: y,\n                width: canvasWidth,\n                height: sh,\n            };\n        }\n\n        return;\n    }\n\n    if (globalOpt.stretch) {\n        if (!globalOpt.width || !globalOpt.height) {\n            throw new Error(\n                \"Stretching requires width and height defined.\",\n            );\n        }\n    }\n\n    gfx.viewport = {\n        x: 0,\n        y: 0,\n        width: canvasWidth,\n        height: canvasHeight,\n    };\n}\n", "import type { GameObj } from \"../types\";\n\nexport function isFixed(obj: GameObj): boolean {\n    if (obj.fixed) return true;\n    return obj.parent ? isFixed(obj.parent) : false;\n}\n\nexport function getRenderProps(obj: GameObj<any>) {\n    return {\n        color: obj.color,\n        opacity: obj.opacity,\n        anchor: obj.anchor,\n        outline: obj.outline,\n        shader: obj.shader,\n        uniform: obj.uniform,\n    };\n}\n", "import { getRenderProps } from \"../../game/utils\";\nimport { drawCircle } from \"../../gfx\";\nimport { Rect, Vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { AnchorComp } from \"../transform/anchor\";\nimport type { outline } from \"./outline\";\n\n/**\n * The {@link circle `circle()`} component.\n *\n * @group Component Types\n */\nexport interface CircleComp extends Comp {\n    draw: Comp[\"draw\"];\n    /** Radius of circle. */\n    radius: number;\n    /**\n     * Render area of the circle.\n     *\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link circle `circle()``} component.\n *\n * @group Component Types\n */\nexport interface CircleCompOpt {\n    /**\n     * If fill the circle (useful if you only want to render outline with\n     * {@link outline `outline()`} component).\n     */\n    fill?: boolean;\n}\n\nexport function circle(radius: number, opt: CircleCompOpt = {}): CircleComp {\n    return {\n        id: \"circle\",\n        radius: radius,\n        draw(this: GameObj<CircleComp>) {\n            drawCircle(Object.assign(getRenderProps(this), {\n                radius: this.radius,\n                fill: opt.fill,\n            }));\n        },\n        renderArea(this: GameObj<AnchorComp | CircleComp>) {\n            return new Rect(\n                new Vec2(this.anchor ? 0 : -this.radius),\n                this.radius * 2,\n                this.radius * 2,\n            );\n        },\n        inspect() {\n            return `radius: ${Math.ceil(this.radius)}`;\n        },\n    };\n}\n", "import { type Color, type ColorArgs, rgb } from \"../../math/color\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link color `color()`} component.\n *\n * @group Component Types\n */\nexport interface ColorComp extends Comp {\n    color: Color;\n}\n\nexport function color(...args: ColorArgs): ColorComp {\n    return {\n        id: \"color\",\n        color: rgb(...args),\n        inspect() {\n            return `color: ${this.color.toString()}`;\n        },\n    };\n}\n", "import type { FrameBuffer } from \"../../gfx\";\nimport type { GameObj } from \"../../types\";\n\nexport function drawon(c: FrameBuffer) {\n    return {\n        add(this: GameObj) {\n            this.canvas = c;\n        },\n    };\n}\n", "import { dt } from \"../../app\";\nimport { map } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { OpacityComp } from \"./opacity\";\n\nexport function fadeIn(time: number = 1): Comp {\n    let finalOpacity: number;\n    let t = 0;\n    let done = false;\n\n    return {\n        require: [\"opacity\"],\n        add(this: GameObj<OpacityComp>) {\n            finalOpacity = this.opacity;\n            this.opacity = 0;\n        },\n        update(this: GameObj<OpacityComp>) {\n            if (done) return;\n            t += dt();\n            this.opacity = map(t, 0, time, 0, finalOpacity);\n\n            if (t >= time) {\n                this.opacity = finalOpacity;\n                done = true;\n            }\n        },\n    };\n}\n", "import type { Comp, Mask } from \"../../types\";\n\n/**\n * The {@link mask `mask()`} component.\n *\n * @group Component Types\n */\nexport interface MaskComp extends Comp {\n    mask: Mask;\n}\n\nexport function mask(m: Mask = \"intersect\"): MaskComp {\n    return {\n        id: \"mask\",\n        mask: m,\n    };\n}\n", "import { game, k } from \"../../kaplay\";\nimport type { Comp, EaseFunc, TweenController } from \"../../types\";\nimport { toFixed } from \"../../utils\";\n\n/**\n * The {@link opacity `opacity()`} component.\n *\n * @group Component Types\n */\nexport interface OpacityComp extends Comp {\n    /** Opacity of the current object. */\n    opacity: number;\n    /** Fade in at the start. */\n    fadeIn(time?: number, easeFunc?: EaseFunc): TweenController;\n    /** Fade out at the start. */\n    fadeOut(time?: number, easeFunc?: EaseFunc): TweenController;\n}\n\nexport function opacity(a: number): OpacityComp {\n    return {\n        id: \"opacity\",\n        opacity: a ?? 1,\n        fadeIn(time = 1, easeFunc = k.easings.linear): TweenController {\n            return game.root.tween(\n                0,\n                this.opacity,\n                time,\n                (a) => this.opacity = a,\n                easeFunc,\n            );\n        },\n        fadeOut(time = 1, easeFunc = k.easings.linear): TweenController {\n            return game.root.tween(\n                this.opacity,\n                0,\n                time,\n                (a) => this.opacity = a,\n                easeFunc,\n            );\n        },\n        inspect() {\n            return `opacity: ${toFixed(this.opacity, 1)}`;\n        },\n    };\n}\n", "import type { LineCap, LineJoin } from \"../../gfx\";\nimport { Color, rgb } from \"../../math/color\";\nimport type { Comp, Outline } from \"../../types\";\n\n/**\n * The {@link outline `outline()`} component.\n *\n * @group Component Types\n */\nexport interface OutlineComp extends Comp {\n    outline: Outline;\n}\n\nexport function outline(\n    width: number = 1,\n    color: Color = rgb(0, 0, 0),\n    opacity: number = 1,\n    join: LineJoin = \"miter\",\n    miterLimit: number = 10,\n    cap: LineCap = \"butt\",\n): OutlineComp {\n    return {\n        id: \"outline\",\n        outline: {\n            width,\n            color,\n            opacity,\n            join,\n            miterLimit,\n            cap,\n        },\n        inspect() {\n            return `outline: ${this.outline.width}px, ${this.outline.color}`;\n        },\n    };\n}\n", "import { dt } from \"../../app\";\nimport { drawRaw, type Texture } from \"../../gfx\";\nimport {\n    Color,\n    lerp,\n    map,\n    Quad,\n    rand,\n    rgb,\n    type ShapeType,\n    Vec2,\n    vec2,\n} from \"../../math\";\nimport type { Comp, Vertex } from \"../../types\";\nimport { KEvent } from \"../../utils/\";\n\nclass Particle {\n    pos: Vec2 = vec2(0);\n    vel: Vec2 = vec2(0);\n    acc: Vec2 = vec2(0);\n    angle: number = 0;\n    angularVelocity: number = 0;\n    damping: number = 0;\n    t: number;\n    lt: number | null = null;\n    gc: boolean;\n\n    constructor() {\n        this.t = 0;\n        this.gc = true;\n    }\n\n    get progress() {\n        return this.lt ? this.t / this.lt : this.t;\n    }\n}\n\nexport type EmitterOpt = {\n    /*\n     * Shape of the emitter. If given, particles spwan within this shape.\n     */\n    shape?: ShapeType;\n    /*\n     * Lifetime of the emitter.\n     */\n    lifetime?: number;\n    /*\n     * Rate of emission in particles per second if the emitter should emit out of itself.\n     */\n    rate?: number;\n    /*\n     * Direction of emission.\n     */\n    direction: number;\n    /*\n     * Spread (cone) of emission around the direction.\n     */\n    spread: number;\n};\n\nexport type ParticlesOpt = {\n    /*\n     * Maximum number of simultaneously rendered particles.\n     */\n    max: number;\n    /*\n     * Minimum and maximum lifetime of a particle in seconds.\n     */\n    lifeTime?: [number, number];\n    /*\n     * Minimum and maximum speed of a particle in pixels per second.\n     */\n    speed?: [number, number];\n    /*\n     * Minimum and maximum acceleration of a particle in pixels per second^2.\n     */\n    acceleration?: [Vec2, Vec2];\n    /*\n     * Minimum and maximum damping of a particle.\n     */\n    damping?: [number, number];\n    /*\n     * Minimum and maximum start angle of a particle.\n     */\n    angle?: [number, number];\n    /*\n     * Minimum and maximum angular velocity of a particle.\n     */\n    angularVelocity?: [number, number];\n    /*\n     * Scale from start to end for a particle.\n     */\n    scales?: number[];\n    /*\n     * Colors from start to end for a particle.\n     */\n    colors?: Color[];\n    /*\n     * Opacity from start to end for a particle.\n     */\n    opacities?: number[];\n    /*\n     * Quads from start to end for a particle.\n     */\n    quads?: Quad[];\n    /*\n     * Texture used for the particle.\n     */\n    texture: Texture;\n};\n\nexport interface ParticlesComp extends Comp {\n    /*\n     * Emit a number of particles\n     */\n    emit(n: number): void;\n    /*\n     * Called when the emitter expires\n     */\n    onEnd(cb: () => void): void;\n}\n\nexport function particles(popt: ParticlesOpt, eopt: EmitterOpt): ParticlesComp {\n    let emitterLifetime = eopt.lifetime;\n\n    const particles: Particle[] = [];\n    const colors = popt.colors || [Color.WHITE];\n    const opacities = popt.opacities || [1];\n    const quads = popt.quads || [new Quad(0, 0, 1, 1)];\n    const scales = popt.scales || [1];\n    const lifetime = popt.lifeTime;\n    const direction = eopt.direction;\n    const spread = eopt.spread;\n    const speed = popt.speed || [0, 0];\n    const angleRange = popt.angle || [0, 0];\n    const angularVelocityRange = popt.angularVelocity || [0, 0];\n    const accelerationRange = popt.acceleration || [vec2(0), vec2(0)];\n    const dampingRange = popt.damping || [0, 0];\n\n    const indices: number[] = [];\n    const vertices: Vertex[] = new Array<Vertex>(popt.max);\n    let count = 0;\n    let time = 0;\n\n    for (let i = 0; i < popt.max; i++) {\n        indices[i * 6 + 0] = i * 4 + 0;\n        indices[i * 6 + 1] = i * 4 + 1;\n        indices[i * 6 + 2] = i * 4 + 3;\n        indices[i * 6 + 3] = i * 4 + 1;\n        indices[i * 6 + 4] = i * 4 + 2;\n        indices[i * 6 + 5] = i * 4 + 3;\n\n        for (let j = 0; j < 4; j++) {\n            vertices[i * 4 + j] = {\n                pos: new Vec2(0, 0),\n                uv: new Vec2(0, 0),\n                color: rgb(255, 255, 255),\n                opacity: 1,\n            };\n        }\n        particles[i] = new Particle();\n    }\n\n    const onEndEvents = new KEvent();\n\n    function nextFree(index: number = 0): number | null {\n        while (index < popt.max) {\n            if (particles[index].gc) {\n                return index;\n            }\n            index++;\n        }\n        return null;\n    }\n\n    return {\n        id: \"particles\",\n        emit(n: number) {\n            let index: number | null = 0;\n            for (let i = 0; i < n; i++) {\n                index = nextFree(index);\n                if (index == null) return;\n\n                const velocityAngle = rand(\n                    direction - spread,\n                    direction + spread,\n                );\n                const vel = Vec2.fromAngle(velocityAngle).scale(\n                    rand(speed[0], speed[1]),\n                );\n                const angle = rand(angleRange[0], angleRange[1]);\n                const angularVelocity = rand(\n                    angularVelocityRange[0],\n                    angularVelocityRange[1],\n                );\n                const acceleration = vec2(\n                    rand(accelerationRange[0].x, accelerationRange[1].x),\n                    rand(accelerationRange[0].y, accelerationRange[1].y),\n                );\n                const damping = rand(\n                    dampingRange[0],\n                    dampingRange[1],\n                );\n                const lt = lifetime ? rand(lifetime[0], lifetime[1]) : null;\n                const pos = eopt.shape\n                    ? eopt.shape.random()\n                    : vec2();\n\n                const p = particles[index];\n                p.lt = lt;\n                p.pos = pos;\n                p.vel = vel;\n                p.acc = acceleration;\n                p.angle = angle;\n                p.angularVelocity = angularVelocity;\n                p.damping = damping;\n                p.angularVelocity = angularVelocity;\n                p.gc = false;\n            }\n            count += n;\n        },\n        update() {\n            if (emitterLifetime !== undefined && emitterLifetime <= 0) {\n                return;\n            }\n            const DT = dt();\n            // Update all particles\n            for (const p of particles) {\n                if (p.gc) {\n                    continue;\n                }\n                p.t += DT;\n                if (p.lt && p.t >= p.lt) {\n                    p.gc = true;\n                    count--;\n                    continue;\n                }\n                p.vel = p.vel.add(p.acc.scale(DT)).scale(1 - p.damping * DT);\n                p.pos = p.pos.add(p.vel.scale(DT));\n                p.angle += p.angularVelocity * DT;\n            }\n            // Check if the emitter has a limited lifetime\n            if (emitterLifetime !== undefined) {\n                emitterLifetime -= DT;\n                if (emitterLifetime <= 0) {\n                    onEndEvents.trigger();\n                }\n            }\n            // Create new particles according to accumulated time\n            time += DT;\n            while (\n                count < popt.max && eopt.rate\n                && time > eopt.rate\n            ) {\n                this.emit(1);\n                count++;\n                time -= eopt.rate;\n            }\n        },\n        draw() {\n            if (emitterLifetime !== undefined && emitterLifetime <= 0) {\n                return;\n            }\n\n            // Draw active particles\n            for (let i = 0; i < particles.length; i++) {\n                const p = particles[i];\n                if (p.gc) {\n                    continue;\n                }\n                const progress = p.progress;\n                const colorIndex = Math.floor(p.progress * colors.length);\n                const color = colorIndex < colors.length - 1\n                    ? lerp(\n                        colors[colorIndex],\n                        colors[colorIndex + 1],\n                        map(\n                            progress,\n                            colorIndex / colors.length,\n                            (colorIndex + 1) / colors.length,\n                            0,\n                            1,\n                        ),\n                    )\n                    : colors[colorIndex];\n                const opacityIndex = Math.floor(p.progress * opacities.length);\n                const opacity = opacityIndex < opacities.length - 1\n                    ? lerp(\n                        opacities[opacityIndex],\n                        opacities[opacityIndex + 1],\n                        map(\n                            progress,\n                            opacityIndex / opacities.length,\n                            (opacityIndex + 1) / opacities.length,\n                            0,\n                            1,\n                        ),\n                    )\n                    : opacities[opacityIndex];\n\n                const quadIndex = Math.floor(p.progress * quads.length);\n                const quad = quads[quadIndex];\n                const scaleIndex = Math.floor(p.progress * scales.length);\n                const scale = scales[scaleIndex];\n                const c = Math.cos(p.angle * Math.PI / 180);\n                const s = Math.sin(p.angle * Math.PI / 180);\n\n                const hw = (popt.texture ? popt.texture.width : 10) * quad.w\n                    / 2;\n                const hh = (popt.texture ? popt.texture.height : 10) * quad.h\n                    / 2;\n\n                let j = i * 4;\n                // Left top\n                let v = vertices[j];\n                v.pos.x = p.pos.x + (-hw) * scale * c - (-hh) * scale * s;\n                v.pos.y = p.pos.y + (-hw) * scale * s + (-hh) * scale * c;\n                v.uv.x = quad.x;\n                v.uv.y = quad.y;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Right top\n                v = vertices[j + 1];\n                v.pos.x = p.pos.x + hw * scale * c - (-hh) * scale * s;\n                v.pos.y = p.pos.y + hw * scale * s + (-hh) * scale * c;\n                v.uv.x = quad.x + quad.w;\n                v.uv.y = quad.y;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Right bottom\n                v = vertices[j + 2];\n                v.pos.x = p.pos.x + hw * scale * c - hh * scale * s;\n                v.pos.y = p.pos.y + hw * scale * s + hh * scale * c;\n                v.uv.x = quad.x + quad.w;\n                v.uv.y = quad.y + quad.h;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n                // Left bottom\n                v = vertices[j + 3];\n                v.pos.x = p.pos.x + (-hw) * scale * c - hh * scale * s;\n                v.pos.y = p.pos.y + (-hw) * scale * s + hh * scale * c;\n                v.uv.x = quad.x;\n                v.uv.y = quad.y + quad.h;\n                v.color.r = color.r;\n                v.color.g = color.g;\n                v.color.b = color.b;\n                v.opacity = opacity;\n            }\n\n            drawRaw(\n                vertices,\n                indices,\n                (this as any).fixed,\n                popt.texture,\n                (this as any).shader,\n                (this as any).uniform,\n            );\n        },\n        onEnd(action: () => void) {\n            return onEndEvents.add(action);\n        },\n        inspect() {\n            return `count: ${count}/${popt.max}`;\n        },\n    };\n}\n", "import { getRenderProps } from \"../../game/utils\";\nimport { drawPolygon, type Texture } from \"../../gfx\";\nimport { type Color } from \"../../math/color\";\nimport { Polygon, type Vec2 } from \"../../math/math\";\nimport type { Comp, DrawPolygonOpt, GameObj } from \"../../types\";\n\n/**\n * The {@link polygon `polygon()`} component.\n *\n * @since v3001.0\n * @group Component Types\n */\nexport interface PolygonComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Points in the polygon.\n     */\n    pts: Vec2[];\n    /**\n     * The radius of each corner.\n     */\n    radius?: number | number[];\n    /**\n     * The color of each vertex.\n     */\n    colors?: Color[];\n    /**\n     * The uv of each vertex.\n     *\n     * @since v3001.0\n     */\n    uv?: Vec2[];\n    /**\n     * The texture used when uv coordinates are present.\n     *\n     * @since v3001.0\n     */\n    tex?: Texture;\n    renderArea(): Polygon;\n}\n\n/**\n * Options for the {@link polygon `polygon()`} component.\n *\n * @group Component Types\n */\nexport type PolygonCompOpt = Omit<DrawPolygonOpt, \"pts\">;\n\nexport function polygon(pts: Vec2[], opt: PolygonCompOpt = {}): PolygonComp {\n    if (pts.length < 3) {\n        throw new Error(\n            `Polygon's need more than two points, ${pts.length} points provided`,\n        );\n    }\n    return {\n        id: \"polygon\",\n        pts,\n        colors: opt.colors,\n        uv: opt.uv,\n        tex: opt.tex,\n        radius: opt.radius,\n        draw(this: GameObj<PolygonComp>) {\n            drawPolygon(Object.assign(getRenderProps(this), {\n                pts: this.pts,\n                colors: this.colors,\n                uv: this.uv,\n                tex: this.tex,\n                radius: this.radius,\n                fill: opt.fill,\n                triangulate: opt.triangulate,\n            }));\n        },\n        renderArea(this: GameObj<PolygonComp>) {\n            return new Polygon(this.pts);\n        },\n        inspect() {\n            return `polygon: ${this.pts.map(p => `[${p.x},${p.y}]`).join(\",\")}`;\n        },\n    };\n}\n", "import { game, k } from \"../../kaplay\";\nimport type { RaycastResult, Vec2 } from \"../../math/math\";\n\n// this is not a component lol\nexport function raycast(\n    origin: Vec2,\n    direction: Vec2,\n    exclude?: string[],\n) {\n    let minHit: RaycastResult;\n\n    const shapes = game.root.get(\"area\");\n\n    shapes.forEach(s => {\n        if (exclude && exclude.some(tag => s.is(tag))) return;\n        const shape = s.worldArea();\n        const hit = shape.raycast(origin, direction);\n        if (hit) {\n            if (minHit) {\n                if (hit.fraction < minHit.fraction) {\n                    minHit = hit;\n                    minHit!.object = s;\n                }\n            }\n            else {\n                minHit = hit;\n                minHit!.object = s;\n            }\n        }\n    });\n\n    return minHit!;\n}\n", "import { getRenderProps } from \"../../game/utils\";\nimport { drawRect } from \"../../gfx\";\nimport { Rect, vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\n\n/**\n * The {@link rect `rect()`} component.\n *\n * @group Component Types\n */\nexport interface RectComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Width of rectangle.\n     */\n    width: number;\n    /**\n     * Height of rectangle.\n     */\n    height: number;\n    /**\n     * The radius of each corner.\n     */\n    radius?: number;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link rect `rect()`} component.\n *\n * @group Component Types\n */\nexport interface RectCompOpt {\n    /**\n     * Radius of the rectangle corners.\n     */\n    radius?: number;\n    /**\n     * If fill the rectangle (useful if you only want to render outline with outline() component).\n     */\n    fill?: boolean;\n}\n\nexport function rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n    return {\n        id: \"rect\",\n        width: w,\n        height: h,\n        radius: opt.radius || 0,\n        draw(this: GameObj<RectComp>) {\n            drawRect(Object.assign(getRenderProps(this), {\n                width: this.width,\n                height: this.height,\n                radius: this.radius,\n                fill: opt.fill,\n            }));\n        },\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n        inspect() {\n            return `rect: (${Math.ceil(this.width)}w, ${\n                Math.ceil(this.height)\n            }h)`;\n        },\n    };\n}\n", "import type { Uniform } from \"../../assets\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link shader `shader()`} component.\n *\n * @group Component Types\n */\nexport interface ShaderComp extends Comp {\n    uniform?: Uniform;\n    shader: string;\n}\n\nexport function shader(\n    id: string,\n    uniform?: Uniform | (() => Uniform),\n): ShaderComp {\n    return {\n        id: \"shader\",\n        shader: id,\n        ...(typeof uniform === \"function\"\n            ? {\n                uniform: uniform(),\n                update() {\n                    this.uniform = uniform();\n                },\n            }\n            : {\n                uniform: uniform,\n            }),\n        inspect() {\n            return `shader: ${id}`;\n        },\n    };\n}\n", "import { color, fixed, opacity, rect } from \"../components\";\nimport { center, height, width } from \"../gfx\";\nimport { game } from \"../kaplay\";\nimport { type Color, rgb } from \"../math/color\";\nimport { type Mat4, type Vec2, vec2, type Vec2Args } from \"../math/math\";\nimport { destroy } from \".\";\n\nexport function camPos(...pos: Vec2Args): Vec2 {\n    if (pos.length > 0) {\n        game.cam.pos = vec2(...pos);\n    }\n    return game.cam.pos ? game.cam.pos.clone() : center();\n}\n\nexport function camScale(...scale: Vec2Args): Vec2 {\n    if (scale.length > 0) {\n        game.cam.scale = vec2(...scale);\n    }\n    return game.cam.scale.clone();\n}\n\nexport function camRot(angle: number): number {\n    if (angle !== undefined) {\n        game.cam.angle = angle;\n    }\n    return game.cam.angle;\n}\n\nexport function camFlash(\n    flashColor: Color = rgb(255, 255, 255),\n    fadeOutTime: number = 1,\n) {\n    let flash = game.root.add([\n        rect(width(), height()),\n        color(flashColor),\n        opacity(1),\n        fixed(),\n    ]);\n    let fade = flash.fadeOut(fadeOutTime);\n    fade.onEnd(() => destroy(flash));\n    return fade;\n}\n\nexport function camTransform(): Mat4 {\n    return game.cam.transform.clone();\n}\n\nexport function shake(intensity: number = 12) {\n    game.cam.shake += intensity;\n}\n\nexport function toScreen(p: Vec2): Vec2 {\n    return game.cam.transform.multVec2(p);\n}\n\nexport function toWorld(p: Vec2): Vec2 {\n    return game.cam.transform.invert().multVec2(p);\n}\n", "import { pos, type PosComp, tile } from \"../components\";\nimport { game } from \"../kaplay\";\nimport {\n    raycastGrid,\n    type RaycastResult,\n    type Vec2,\n    vec2,\n    type Vec2Args,\n} from \"../math/math\";\nimport type { CompList, GameObj, LevelComp, PathFindOpt } from \"../types\";\nimport { BinaryHeap } from \"../utils\";\n\nenum EdgeMask {\n    None = 0,\n    Left = 1,\n    Top = 2,\n    LeftTop = 3,\n    Right = 4,\n    Horizontal = 5,\n    RightTop = 6,\n    HorizontalTop = 7,\n    Bottom = 8,\n    LeftBottom = 9,\n    Vertical = 10,\n    LeftVertical = 11,\n    RightBottom = 12,\n    HorizontalBottom = 13,\n    RightVertical = 14,\n    All = 15,\n}\n\n/**\n * @group Options\n */\nexport interface LevelOpt {\n    /**\n     * Width of each block.\n     */\n    tileWidth: number;\n    /**\n     * Height of each block.\n     */\n    tileHeight: number;\n    /**\n     * Position of the first block.\n     */\n    pos?: Vec2;\n    /**\n     * Definition of each tile.\n     */\n    tiles: {\n        [sym: string]: (pos: Vec2) => CompList<any>;\n    };\n    /**\n     * Called when encountered a symbol not defined in \"tiles\".\n     */\n    wildcardTile?: (sym: string, pos: Vec2) => CompList<any> | null | undefined;\n}\n\nexport function addLevel(\n    map: string[],\n    opt: LevelOpt,\n): GameObj<PosComp | LevelComp> {\n    if (!opt.tileWidth || !opt.tileHeight) {\n        throw new Error(\"Must provide tileWidth and tileHeight.\");\n    }\n\n    // TODO: custom parent\n    const level = game.root.add([\n        pos(opt.pos ?? vec2(0)),\n    ]) as GameObj<PosComp | LevelComp>;\n\n    const numRows = map.length;\n    let numColumns = 0;\n\n    // The spatial map keeps track of the objects at each location\n    let spatialMap: GameObj[][] | null = null;\n    let costMap: number[] | null = null;\n    let edgeMap: number[] | null = null;\n    let connectivityMap: number[] | null = null;\n\n    const tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns;\n    const hash2Tile = (hash: number) =>\n        vec2(\n            Math.floor(hash % numColumns),\n            Math.floor(hash / numColumns),\n        );\n\n    const createSpatialMap = () => {\n        spatialMap = [];\n        for (const child of level.children) {\n            insertIntoSpatialMap(child);\n        }\n    };\n\n    const insertIntoSpatialMap = (obj: GameObj) => {\n        const i = tile2Hash(obj.tilePos);\n        if (spatialMap![i]) {\n            spatialMap![i].push(obj);\n        }\n        else {\n            spatialMap![i] = [obj];\n        }\n    };\n\n    const removeFromSpatialMap = (obj: GameObj) => {\n        const i = tile2Hash(obj.tilePos);\n        if (spatialMap![i]) {\n            const index = spatialMap![i].indexOf(obj);\n            if (index >= 0) {\n                spatialMap![i].splice(index, 1);\n            }\n        }\n    };\n\n    const updateSpatialMap = () => {\n        let spatialMapChanged = false;\n        for (const child of level.children) {\n            const tilePos = level.pos2Tile(child.pos);\n            if (\n                child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y\n            ) {\n                spatialMapChanged = true;\n                removeFromSpatialMap(child);\n                child.tilePos.x = tilePos.x;\n                child.tilePos.y = tilePos.y;\n                insertIntoSpatialMap(child);\n            }\n        }\n        if (spatialMapChanged) {\n            level.trigger(\"spatialMapChanged\");\n        }\n    };\n\n    // The obstacle map tells which tiles are accessible\n    // Cost: accessible with cost\n    // Infinite: inaccessible\n    const createCostMap = () => {\n        const spatialMap = level.getSpatialMap();\n        const size = level.numRows() * level.numColumns();\n        if (!costMap) {\n            costMap = new Array<number>(size);\n        }\n        else {\n            costMap.length = size;\n        }\n        costMap.fill(1, 0, size);\n        for (let i = 0; i < spatialMap.length; i++) {\n            const objects = spatialMap[i];\n            if (objects) {\n                let cost = 0;\n                for (const obj of objects) {\n                    if (obj.isObstacle) {\n                        cost = Infinity;\n                        break;\n                    }\n                    else {\n                        cost += obj.cost;\n                    }\n                }\n                costMap[i] = cost || 1;\n            }\n        }\n    };\n\n    // The edge map tells which edges between nodes are walkable\n    const createEdgeMap = () => {\n        const spatialMap = level.getSpatialMap();\n        const size = level.numRows() * level.numColumns();\n        if (!edgeMap) {\n            edgeMap = new Array<number>(size);\n        }\n        else {\n            edgeMap.length = size;\n        }\n        edgeMap.fill(EdgeMask.All, 0, size);\n        for (let i = 0; i < spatialMap.length; i++) {\n            const objects = spatialMap[i];\n            if (objects) {\n                const len = objects.length;\n                let mask = EdgeMask.All;\n                for (let j = 0; j < len; j++) {\n                    mask |= objects[j].edgeMask;\n                }\n                edgeMap[i] = mask;\n            }\n        }\n    };\n\n    // The connectivity map is used to see whether two locations are connected\n    // -1: inaccesible n: connectivity group\n    const createConnectivityMap = () => {\n        const size = level.numRows() * level.numColumns();\n        const traverse = (i: number, index: number) => {\n            const frontier: number[] = [];\n            frontier.push(i);\n            while (frontier.length > 0) {\n                // TODO: Remove non-null assertion\n                const i = frontier.pop()!;\n\n                getNeighbours(i).forEach((i) => {\n                    if (connectivityMap![i] < 0) {\n                        connectivityMap![i] = index;\n                        frontier.push(i);\n                    }\n                });\n            }\n        };\n        if (!connectivityMap) {\n            connectivityMap = new Array<number>(size);\n        }\n        else {\n            connectivityMap.length = size;\n        }\n        connectivityMap.fill(-1, 0, size);\n        let index = 0;\n        for (let i = 0; i < costMap!.length; i++) {\n            if (connectivityMap[i] >= 0) {\n                index++;\n                continue;\n            }\n            traverse(i, index);\n            index++;\n        }\n    };\n\n    const getCost = (node: number, neighbour: number) => {\n        // Cost of destination tile\n        return costMap![neighbour];\n    };\n\n    const getHeuristic = (node: number, goal: number) => {\n        // Euclidian distance to target\n        const p1 = hash2Tile(node);\n        const p2 = hash2Tile(goal);\n        return p1.dist(p2);\n    };\n\n    const getNeighbours = (node: number, diagonals?: boolean) => {\n        const n = [];\n        const x = Math.floor(node % numColumns);\n        const left = x > 0\n            && (edgeMap![node] & EdgeMask.Left)\n            && costMap![node - 1] !== Infinity;\n        const top = node >= numColumns\n            && (edgeMap![node] & EdgeMask.Top)\n            && costMap![node - numColumns] !== Infinity;\n        const right = x < numColumns - 1\n            && (edgeMap![node] & EdgeMask.Right)\n            && costMap![node + 1] !== Infinity;\n        const bottom = node < numColumns * numRows - numColumns - 1\n            && (edgeMap![node] & EdgeMask.Bottom)\n            && costMap![node + numColumns] !== Infinity;\n        if (diagonals) {\n            if (left) {\n                if (top) n.push(node - numColumns - 1);\n                n.push(node - 1);\n                if (bottom) n.push(node + numColumns - 1);\n            }\n            if (top) {\n                n.push(node - numColumns);\n            }\n            if (right) {\n                if (top) n.push(node - numColumns + 1);\n                n.push(node + 1);\n                if (bottom) n.push(node + numColumns + 1);\n            }\n            if (bottom) {\n                n.push(node + numColumns);\n            }\n        }\n        else {\n            if (left) {\n                n.push(node - 1);\n            }\n            if (top) {\n                n.push(node - numColumns);\n            }\n            if (right) {\n                n.push(node + 1);\n            }\n            if (bottom) {\n                n.push(node + numColumns);\n            }\n        }\n        return n;\n    };\n\n    const levelComp: LevelComp = {\n        id: \"level\",\n\n        tileWidth() {\n            return opt.tileWidth;\n        },\n\n        tileHeight() {\n            return opt.tileHeight;\n        },\n\n        spawn(\n            this: GameObj<LevelComp>,\n            key: string | CompList<any>,\n            ...args: Vec2Args\n        ) {\n            const p = vec2(...args);\n\n            const comps = (() => {\n                if (typeof key === \"string\") {\n                    if (opt.tiles[key]) {\n                        if (typeof opt.tiles[key] !== \"function\") {\n                            throw new Error(\n                                \"Level symbol def must be a function returning a component list\",\n                            );\n                        }\n                        return opt.tiles[key](p);\n                    }\n                    else if (opt.wildcardTile) {\n                        return opt.wildcardTile(key, p);\n                    }\n                }\n                else if (Array.isArray(key)) {\n                    return key;\n                }\n                else {\n                    throw new Error(\n                        \"Expected a symbol or a component list\",\n                    );\n                }\n            })();\n\n            // empty tile\n            if (!comps) {\n                return null;\n            }\n\n            let hasPos = false;\n            let hasTile = false;\n\n            for (const comp of comps) {\n                if (comp.id === \"tile\") hasTile = true;\n                if (comp.id === \"pos\") hasPos = true;\n            }\n\n            if (!hasPos) comps.push(pos());\n            if (!hasTile) comps.push(tile());\n\n            const obj = level.add(comps);\n\n            if (hasPos) {\n                obj.tilePosOffset = obj.pos.clone();\n            }\n\n            obj.tilePos = p;\n\n            if (spatialMap) {\n                insertIntoSpatialMap(obj);\n                this.trigger(\"spatialMapChanged\");\n                this.trigger(\"navigationMapInvalid\");\n            }\n\n            return obj;\n        },\n\n        numColumns() {\n            return numColumns;\n        },\n\n        numRows() {\n            return numRows;\n        },\n\n        levelWidth() {\n            return numColumns * this.tileWidth();\n        },\n\n        levelHeight() {\n            return numRows * this.tileHeight();\n        },\n\n        tile2Pos(...args: Vec2Args) {\n            return vec2(...args).scale(this.tileWidth(), this.tileHeight());\n        },\n\n        pos2Tile(...args: Vec2Args) {\n            const p = vec2(...args);\n            return vec2(\n                Math.floor(p.x / this.tileWidth()),\n                Math.floor(p.y / this.tileHeight()),\n            );\n        },\n\n        getSpatialMap() {\n            if (!spatialMap) {\n                createSpatialMap();\n            }\n            return spatialMap!;\n        },\n\n        onSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n            return this.on(\"spatialMapChanged\", cb);\n        },\n\n        onNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n            return this.on(\"navigationMapInvalid\", cb);\n        },\n\n        getAt(tilePos: Vec2) {\n            if (!spatialMap) {\n                createSpatialMap();\n            }\n            const hash = tile2Hash(tilePos);\n            return spatialMap![hash] || [];\n        },\n\n        raycast(origin: Vec2, direction: Vec2) {\n            const levelOrigin = origin.scale(\n                1 / this.tileWidth(),\n                1 / this.tileHeight(),\n            );\n            const hit = raycastGrid(levelOrigin, direction, (tilePos: Vec2) => {\n                const tiles = this.getAt(tilePos);\n                if (tiles.some(t => t.isObstacle)) {\n                    return true;\n                }\n                let minHit: RaycastResult = null;\n                for (const tile of tiles) {\n                    if (tile.is(\"area\")) {\n                        const shape = tile.worldArea();\n                        const hit = shape.raycast(\n                            origin,\n                            direction,\n                        ) as RaycastResult;\n                        if (hit) {\n                            if (minHit) {\n                                if (hit.fraction < minHit.fraction) {\n                                    minHit = hit;\n                                    minHit.object = tile;\n                                }\n                            }\n                            else {\n                                minHit = hit;\n                                minHit.object = tile;\n                            }\n                        }\n                    }\n                }\n                return minHit! || false;\n            }, 64);\n            if (hit) {\n                hit.point = hit.point.scale(\n                    this.tileWidth(),\n                    this.tileHeight(),\n                );\n            }\n            return hit;\n        },\n\n        update() {\n            if (spatialMap) {\n                updateSpatialMap();\n            }\n        },\n\n        invalidateNavigationMap() {\n            costMap = null;\n            edgeMap = null;\n            connectivityMap = null;\n        },\n\n        onNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n            return this.on(\"navigationMapChanged\", cb);\n        },\n\n        getTilePath(\n            this: GameObj<LevelComp>,\n            from: Vec2,\n            to: Vec2,\n            opts: PathFindOpt = {},\n        ) {\n            if (!costMap) {\n                createCostMap();\n            }\n            if (!edgeMap) {\n                createEdgeMap();\n            }\n            if (!connectivityMap) {\n                createConnectivityMap();\n            }\n\n            // Tiles are outside the grid\n            if (\n                from.x < 0 || from.x >= numColumns\n                || from.y < 0 || from.y >= numRows\n            ) {\n                return null;\n            }\n            if (\n                to.x < 0 || to.x >= numColumns\n                || to.y < 0 || to.y >= numRows\n            ) {\n                return null;\n            }\n\n            const start = tile2Hash(from);\n            const goal = tile2Hash(to);\n\n            // Tiles are not accessible\n            // If we test the start tile, we may get stuck\n            /*if (costMap[start] === Infinity) {\n                return null\n            }*/\n            if (costMap![goal] === Infinity) {\n                return null;\n            }\n\n            // Same Tile, no waypoints needed\n            if (start === goal) {\n                return [];\n            }\n\n            // Tiles are not within the same section\n            // If we test the start tile when invalid, we may get stuck\n            // TODO: Remove non-null assertion\n            if (\n                connectivityMap![start] != -1\n                && connectivityMap![start] !== connectivityMap![goal]\n            ) {\n                return null;\n            }\n\n            // Find a path\n            interface CostNode {\n                cost: number;\n                node: number;\n            }\n            const frontier = new BinaryHeap<CostNode>((a, b) =>\n                a.cost < b.cost\n            );\n            frontier.insert({ cost: 0, node: start });\n\n            const cameFrom = new Map<number, number>();\n            cameFrom.set(start, start);\n            const costSoFar = new Map<number, number>();\n            costSoFar.set(start, 0);\n\n            while (frontier.length !== 0) {\n                // TODO: Remove non-null assertion\n                const current = frontier.remove()?.node!;\n\n                if (current === goal) {\n                    break;\n                }\n\n                const neighbours = getNeighbours(\n                    current,\n                    opts.allowDiagonals,\n                );\n                for (const next of neighbours) {\n                    const newCost = (costSoFar.get(current) || 0)\n                        + getCost(current, next)\n                        + getHeuristic(next, goal);\n                    if (\n                        !costSoFar.has(next)\n                        // TODO: Remove non-null assertion\n                        || newCost < costSoFar.get(next)!\n                    ) {\n                        costSoFar.set(next, newCost);\n                        frontier.insert({ cost: newCost, node: next });\n                        cameFrom.set(next, current);\n                    }\n                }\n            }\n\n            const path = [];\n            let node = goal;\n            const p = hash2Tile(node);\n            path.push(p);\n\n            while (node !== start) {\n                let cameNode = cameFrom.get(node);\n\n                if (!cameNode) {\n                    throw new Error(\"Bug in pathfinding algorithm\");\n                }\n\n                node = cameNode;\n\n                const p = hash2Tile(node);\n                path.push(p);\n            }\n\n            return path.reverse();\n        },\n\n        getPath(\n            this: GameObj<LevelComp>,\n            from: Vec2,\n            to: Vec2,\n            opts: PathFindOpt = {},\n        ) {\n            const tw = this.tileWidth();\n            const th = this.tileHeight();\n            const path = this.getTilePath(\n                this.pos2Tile(from),\n                this.pos2Tile(to),\n                opts,\n            );\n            if (path) {\n                return [\n                    from,\n                    ...path\n                        .slice(1, -1)\n                        .map((tilePos) =>\n                            tilePos.scale(tw, th).add(tw / 2, th / 2)\n                        ),\n                    to,\n                ];\n            }\n            else {\n                return null;\n            }\n        },\n    };\n\n    level.use(levelComp);\n\n    level.onNavigationMapInvalid(() => {\n        level.invalidateNavigationMap();\n        level.trigger(\"navigationMapChanged\");\n    });\n\n    map.forEach((row, i) => {\n        const keys = row.split(\"\");\n        numColumns = Math.max(keys.length, numColumns);\n        keys.forEach((key, j) => {\n            level.spawn(key, vec2(j, i));\n        });\n    });\n\n    return level;\n}\n", "// add an event to a tag\n\nimport { app, assets, game } from \"../../kaplay\";\nimport type { Collision, GameObj, Tag } from \"../../types\";\nimport { KEventController, overload2, Registry } from \"../../utils\";\nimport type { GameObjEventMap, GameObjEventNames } from \"./eventMap\";\n\nexport type TupleWithoutFirst<T extends any[]> = T extends [infer R, ...infer E]\n    ? E\n    : never;\n\nexport function on<Ev extends GameObjEventNames | string & {}>(\n    event: Ev,\n    tag: Tag,\n    cb: (obj: GameObj, ...args: TupleWithoutFirst<GameObjEventMap[Ev]>) => void,\n): KEventController {\n    if (!game.objEvents.registers[<keyof GameObjEventMap> event]) {\n        game.objEvents.registers[<keyof GameObjEventMap> event] =\n            new Registry() as any;\n    }\n\n    return game.objEvents.on(<keyof GameObjEventMap> event, (obj, ...args) => {\n        if (obj.is(tag)) {\n            cb(obj, ...args as TupleWithoutFirst<GameObjEventMap[Ev]>);\n        }\n    });\n}\n\nexport const onFixedUpdate = overload2(\n    (action: () => void): KEventController => {\n        const obj = game.root.add([{ update: action }]);\n        return {\n            get paused() {\n                return obj.paused;\n            },\n            set paused(p) {\n                obj.paused = p;\n            },\n            cancel: () => obj.destroy(),\n        };\n    },\n    (tag: Tag, action: (obj: GameObj) => void) => {\n        return on(\"fixedUpdate\", tag, action);\n    },\n);\n\nexport const onUpdate = overload2((action: () => void): KEventController => {\n    const obj = game.root.add([{ update: action }]);\n    return {\n        get paused() {\n            return obj.paused;\n        },\n        set paused(p) {\n            obj.paused = p;\n        },\n        cancel: () => obj.destroy(),\n    };\n}, (tag: Tag, action: (obj: GameObj) => void) => {\n    return on(\"update\", tag, action);\n});\n\nexport const onDraw = overload2((action: () => void): KEventController => {\n    const obj = game.root.add([{ draw: action }]);\n    return {\n        get paused() {\n            return obj.hidden;\n        },\n        set paused(p) {\n            obj.hidden = p;\n        },\n        cancel: () => obj.destroy(),\n    };\n}, (tag: Tag, action: (obj: GameObj) => void) => {\n    return on(\"draw\", tag, action);\n});\n\nexport const onAdd = overload2((action: (obj: GameObj) => void) => {\n    return game.events.on(\"add\", action);\n}, (tag: Tag, action: (obj: GameObj) => void) => {\n    return on(\"add\", tag, action);\n});\n\nexport const onDestroy = overload2((action: (obj: GameObj) => void) => {\n    return game.events.on(\"destroy\", action);\n}, (tag: Tag, action: (obj: GameObj) => void) => {\n    return on(\"destroy\", tag, action);\n});\n\n// add an event that runs with objs with t1 collides with objs with t2\nexport function onCollide(\n    t1: Tag,\n    t2: Tag,\n    f: (a: GameObj, b: GameObj, col?: Collision) => void,\n): KEventController {\n    return on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n}\n\nexport function onCollideUpdate(\n    t1: Tag,\n    t2: Tag,\n    f: (a: GameObj, b: GameObj, col?: Collision) => void,\n): KEventController {\n    return on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n}\n\nexport function onCollideEnd(\n    t1: Tag,\n    t2: Tag,\n    f: (a: GameObj, b: GameObj, col?: Collision) => void,\n): KEventController {\n    return on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n}\n\nexport function forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n    game.root.get(t, { recursive: true }).forEach(action);\n    onAdd(t, action);\n}\n\nexport const onClick = overload2((action: () => void) => {\n    return app.onMousePress(action);\n}, (tag: Tag, action: (obj: GameObj) => void) => {\n    const events: KEventController[] = [];\n\n    forAllCurrentAndFuture(tag, (obj) => {\n        if (!obj.area) {\n            throw new Error(\n                \"onClick() requires the object to have area() component\",\n            );\n        }\n        events.push(obj.onClick(() => action(obj)));\n    });\n    return KEventController.join(events);\n});\n\n// add an event that runs once when objs with tag t is hovered\nexport function onHover(\n    t: Tag,\n    action: (obj: GameObj) => void,\n): KEventController {\n    const events: KEventController[] = [];\n\n    forAllCurrentAndFuture(t, (obj) => {\n        if (!obj.area) {\n            throw new Error(\n                \"onHover() requires the object to have area() component\",\n            );\n        }\n        events.push(obj.onHover(() => action(obj)));\n    });\n    return KEventController.join(events);\n}\n\n// add an event that runs once when objs with tag t is hovered\nexport function onHoverUpdate(\n    t: Tag,\n    action: (obj: GameObj) => void,\n): KEventController {\n    const events: KEventController[] = [];\n\n    forAllCurrentAndFuture(t, (obj) => {\n        if (!obj.area) {\n            throw new Error(\n                \"onHoverUpdate() requires the object to have area() component\",\n            );\n        }\n        events.push(obj.onHoverUpdate(() => action(obj)));\n    });\n    return KEventController.join(events);\n}\n\n// add an event that runs once when objs with tag t is unhovered\nexport function onHoverEnd(\n    t: Tag,\n    action: (obj: GameObj) => void,\n): KEventController {\n    const events: KEventController[] = [];\n\n    forAllCurrentAndFuture(t, (obj) => {\n        if (!obj.area) {\n            throw new Error(\n                \"onHoverEnd() requires the object to have area() component\",\n            );\n        }\n        events.push(obj.onHoverEnd(() => action(obj)));\n    });\n    return KEventController.join(events);\n}\n\nexport function onLoading(action: (progress: number) => void) {\n    game.events.on(\"loading\", action);\n}\n\nexport function onResize(action: () => void) {\n    app.onResize(action);\n}\n\nexport function onError(action: (err: Error) => void) {\n    game.events.on(\"error\", action);\n}\n\nexport function onLoad(cb: () => void): void {\n    if (assets.loaded) {\n        cb();\n    }\n    else {\n        game.events.on(\"load\", cb);\n    }\n}\n", "import type { App } from \"../app\";\nimport type {\n    FixedComp,\n    MaskComp,\n    PosComp,\n    RotateComp,\n    ScaleComp,\n} from \"../components\";\nimport { COMP_DESC, COMP_EVENTS } from \"../constants\";\nimport {\n    flush,\n    popTransform,\n    pushRotate,\n    pushScale,\n    pushTransform,\n    pushTranslate,\n} from \"../gfx\";\nimport { app, game, gfx, k } from \"../kaplay\";\nimport { Mat4 } from \"../math/math\";\nimport { calcTransform } from \"../math/various\";\nimport {\n    type Comp,\n    type CompList,\n    type EventController,\n    type GameObj,\n    type GameObjInspect,\n    type GetOpt,\n    type QueryOpt,\n    type Tag,\n} from \"../types\";\nimport { isClass, type KEventController, KEventHandler, uid } from \"../utils\";\n\ntype MakeTypeIsFN<T, Chain = T> = T extends (go: GameObj) => infer R ? R\n    : Chain;\ntype MakeTypeIsCLASS<T, Chain = T> = T extends new(go: GameObj) => infer R ? R\n    : Chain;\ntype MakeType<T> = MakeTypeIsCLASS<T, MakeTypeIsFN<T>>;\n\nexport function make<T>(comps: CompList<T> = []): GameObj<MakeType<T>> {\n    const compStates = new Map<string, Comp>();\n    const anonymousCompStates: Comp[] = [];\n    const cleanups = {} as Record<string, (() => unknown)[]>;\n    const events = new KEventHandler();\n    const inputEvents: KEventController[] = [];\n    let onCurCompCleanup: Function | null = null;\n    let paused = false;\n\n    // the game object without the event methods, added later\n    const obj: Omit<GameObj, keyof typeof evs> = {\n        id: uid(),\n        // TODO: a nice way to hide / pause when add()-ing\n        hidden: false,\n        transform: new Mat4(),\n        children: [],\n        parent: null,\n\n        set paused(p) {\n            if (p === paused) return;\n            paused = p;\n            for (const e of inputEvents) {\n                e.paused = p;\n            }\n        },\n\n        get paused() {\n            return paused;\n        },\n\n        get tags() {\n            const tags = [];\n            for (const [key, value] of compStates.entries()) {\n                if (Object.keys(value).length == 1) {\n                    tags.push(key);\n                }\n            }\n            return tags;\n        },\n\n        add<T2>(this: GameObj, a: CompList<T2> | GameObj<T2>): GameObj {\n            const obj = Array.isArray(a) ? make(a) : a;\n            if (obj.parent) {\n                throw new Error(\n                    \"Cannot add a game obj that already has a parent.\",\n                );\n            }\n            obj.parent = this;\n            obj.transform = calcTransform(obj);\n            this.children.push(obj);\n            // TODO: trigger add for children\n            obj.trigger(\"add\", obj);\n            game.events.trigger(\"add\", obj);\n            return obj;\n        },\n\n        readd(obj: GameObj): GameObj {\n            const idx = this.children.indexOf(obj);\n            if (idx !== -1) {\n                this.children.splice(idx, 1);\n                this.children.push(obj);\n            }\n            return obj;\n        },\n\n        remove(obj: GameObj): void {\n            const idx = this.children.indexOf(obj);\n            if (idx !== -1) {\n                obj.parent = null;\n                this.children.splice(idx, 1);\n\n                const trigger = (o: GameObj) => {\n                    o.trigger(\"destroy\");\n                    game.events.trigger(\"destroy\", o);\n                    o.children.forEach((child) => trigger(child));\n                };\n\n                trigger(obj);\n            }\n        },\n\n        // TODO: recursive\n        removeAll(this: GameObj, tag?: Tag) {\n            if (tag) {\n                this.get(tag).forEach((obj) => this.remove(obj));\n            }\n            else {\n                for (const child of [...this.children]) this.remove(child);\n            }\n        },\n\n        fixedUpdate(this: GameObj) {\n            if (this.paused) return;\n            this.children\n                /*.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))*/\n                .forEach((child) => child.fixedUpdate());\n            this.trigger(\"fixedUpdate\");\n        },\n\n        update(this: GameObj) {\n            if (this.paused) return;\n            this.children\n                /*.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))*/\n                .forEach((child) => child.update());\n            this.trigger(\"update\");\n        },\n\n        draw(\n            this: GameObj<\n                PosComp | ScaleComp | RotateComp | FixedComp | MaskComp\n            >,\n        ) {\n            if (this.hidden) return;\n            if (this.canvas) {\n                flush();\n                this.canvas.bind();\n            }\n            const f = gfx.fixed;\n            if (this.fixed) gfx.fixed = true;\n            pushTransform();\n            pushTranslate(this.pos);\n            pushScale(this.scale);\n            pushRotate(this.angle);\n            const children = this.children.sort((o1, o2) => {\n                const l1 = o1.layerIndex ?? game.defaultLayerIndex;\n                const l2 = o2.layerIndex ?? game.defaultLayerIndex;\n                return (l1 - l2) || (o1.z ?? 0) - (o2.z ?? 0);\n            });\n            // TODO: automatically don't draw if offscreen\n            if (this.mask) {\n                const maskFunc = {\n                    intersect: k.drawMasked,\n                    subtract: k.drawSubtracted,\n                }[this.mask];\n                if (!maskFunc) {\n                    throw new Error(`Invalid mask func: \"${this.mask}\"`);\n                }\n                maskFunc(() => {\n                    children.forEach((child) => child.draw());\n                }, () => {\n                    this.trigger(\"draw\");\n                });\n            }\n            else {\n                this.trigger(\"draw\");\n                children.forEach((child) => child.draw());\n            }\n            popTransform();\n            gfx.fixed = f;\n            if (this.canvas) {\n                flush();\n                this.canvas.unbind();\n            }\n        },\n\n        drawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n            if (this.hidden) return;\n            pushTransform();\n            pushTranslate(this.pos);\n            pushScale(this.scale);\n            pushRotate(this.angle);\n            this.children\n                /*.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))*/\n                .forEach((child) => child.drawInspect());\n            this.trigger(\"drawInspect\");\n            popTransform();\n        },\n\n        // use a comp or a tag\n        use(comp: Comp | Tag) {\n            if (!comp) {\n                return;\n            }\n\n            // class object\n            if (isClass(comp)) comp = new (comp as any)(this);\n\n            // function object\n            if (typeof comp === \"function\") {\n                return this.use(\n                    (comp as (v: any) => any)(this),\n                );\n            }\n\n            // tag\n            if (typeof comp === \"string\") {\n                return this.use({\n                    id: comp,\n                });\n            }\n\n            let gc = [];\n\n            // clear if overwrite\n            if (comp.id) {\n                this.unuse(comp.id);\n                cleanups[comp.id] = [];\n                gc = cleanups[comp.id];\n                compStates.set(comp.id, comp);\n            }\n            else {\n                anonymousCompStates.push(comp);\n            }\n\n            for (const k in comp) {\n                if (COMP_DESC.has(k)) {\n                    continue;\n                }\n\n                const prop = Object.getOwnPropertyDescriptor(comp, k);\n                if (!prop) continue;\n\n                if (typeof prop.value === \"function\") {\n                    // @ts-ignore\n                    comp[k] = comp[k].bind(this);\n                }\n\n                if (prop.set) {\n                    Object.defineProperty(comp, k, {\n                        set: prop.set.bind(this),\n                    });\n                }\n\n                if (prop.get) {\n                    Object.defineProperty(comp, k, {\n                        get: prop.get.bind(this),\n                    });\n                }\n\n                if (COMP_EVENTS.has(k)) {\n                    // automatically clean up events created by components in add() stage\n                    const func = k === \"add\"\n                        ? () => {\n                            onCurCompCleanup = (c: any) => gc.push(c);\n                            comp[k]?.();\n                            onCurCompCleanup = null;\n                        }\n                        : comp[<keyof typeof comp> k];\n                    gc.push(this.on(k, <any> func).cancel);\n                }\n                else {\n                    if (this[k] === undefined) {\n                        // assign comp fields to game obj\n                        Object.defineProperty(this, k, {\n                            get: () => comp[<keyof typeof comp> k],\n                            set: (val) => comp[<keyof typeof comp> k] = val,\n                            configurable: true,\n                            enumerable: true,\n                        });\n                        gc.push(() => delete this[k]);\n                    }\n                    else {\n                        throw new Error(\n                            `Duplicate component property: \"${k}\"`,\n                        );\n                    }\n                }\n            }\n\n            // check for component dependencies\n            const checkDeps = () => {\n                if (!comp.require) return;\n                for (const dep of comp.require) {\n                    if (!this.c(dep)) {\n                        throw new Error(\n                            `Component \"${comp.id}\" requires component \"${dep}\"`,\n                        );\n                    }\n                }\n            };\n\n            if (comp.destroy) {\n                gc.push(comp.destroy.bind(this));\n            }\n\n            // manually trigger add event if object already exist\n            if (this.exists()) {\n                checkDeps();\n                if (comp.add) {\n                    onCurCompCleanup = (c: any) => gc.push(c);\n                    comp.add.call(this);\n                    onCurCompCleanup = null;\n                }\n            }\n            else {\n                if (comp.require) {\n                    gc.push(this.on(\"add\", checkDeps).cancel);\n                }\n            }\n        },\n\n        unuse(id: Tag) {\n            if (compStates.has(id)) {\n                // check all components for a dependent, if there's one, throw an error\n                for (const comp of compStates.values()) {\n                    if (comp.require && comp.require.includes(id)) {\n                        throw new Error(\n                            `Can't unuse. Component \"${comp.id}\" requires component \"${id}\"`,\n                        );\n                    }\n                }\n\n                compStates.delete(id);\n            }\n\n            if (cleanups[id]) {\n                cleanups[id].forEach((e) => e());\n\n                delete cleanups[id];\n            }\n        },\n\n        c(id: Tag): Comp | null {\n            return compStates.get(id) ?? null;\n        },\n\n        // TODO: Separate\n        get(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n            let list: GameObj[] = opts.recursive\n                ? this.children.flatMap(\n                    function recurse(child: GameObj): GameObj[] {\n                        return [child, ...child.children.flatMap(recurse)];\n                    },\n                )\n                : this.children;\n\n            list = list.filter((child) => t ? child.is(t) : true);\n\n            if (opts.liveUpdate) {\n                const isChild = (obj: GameObj) => {\n                    return opts.recursive\n                        ? this.isAncestorOf(obj)\n                        : obj.parent === this;\n                };\n\n                const events: EventController[] = [];\n\n                // TODO: handle when object add / remove tags\n                // TODO: clean up when obj destroyed\n                events.push(k.onAdd((obj) => {\n                    if (isChild(obj) && obj.is(t)) {\n                        list.push(obj);\n                    }\n                }));\n                events.push(k.onDestroy((obj) => {\n                    if (isChild(obj) && obj.is(t)) {\n                        const idx = list.findIndex((o) => o.id === obj.id);\n                        if (idx !== -1) {\n                            list.splice(idx, 1);\n                        }\n                    }\n                }));\n                this.onDestroy(() => {\n                    for (const ev of events) {\n                        ev.cancel();\n                    }\n                });\n            }\n            return list;\n        },\n\n        query(opt: QueryOpt) {\n            const hierarchy = opt.hierarchy || \"children\";\n            const include = opt.include;\n            const exclude = opt.exclude;\n            let list: GameObj[] = [];\n\n            switch (hierarchy) {\n                case \"children\":\n                    list = this.children;\n                    break;\n                case \"siblings\":\n                    list = this.parent\n                        ? this.parent.children.filter((o: GameObj) =>\n                            o !== this\n                        )\n                        : [];\n                    break;\n                case \"ancestors\":\n                    let parent = this.parent;\n                    while (parent) {\n                        list.push(parent);\n                        parent = parent.parent;\n                    }\n                    break;\n                case \"descendants\":\n                    list = this.children.flatMap(\n                        function recurse(child: GameObj): GameObj[] {\n                            return [\n                                child,\n                                ...child.children.flatMap(recurse),\n                            ];\n                        },\n                    );\n                    break;\n            }\n            if (include) {\n                const includeOp = opt.includeOp || \"and\";\n\n                if (includeOp === \"and\" || !Array.isArray(opt.include)) {\n                    // Accept if all match\n                    list = list.filter(o => o.is(include));\n                }\n                else { // includeOp == \"or\"\n                    // Accept if some match\n                    list = list.filter(o =>\n                        (opt.include as string[]).some(t => o.is(t))\n                    );\n                }\n            }\n            if (exclude) {\n                const excludeOp = opt.includeOp || \"and\";\n                if (excludeOp === \"and\" || !Array.isArray(opt.include)) {\n                    // Reject if all match\n                    list = list.filter(o => !o.is(exclude));\n                }\n                else { // includeOp == \"or\"\n                    // Reject if some match\n                    list = list.filter(o =>\n                        !(opt.exclude as string[]).some(t => o.is(t))\n                    );\n                }\n            }\n            if (opt.visible === true) {\n                list = list.filter(o => o.visible);\n            }\n            if (opt.distance) {\n                if (!this.pos) {\n                    throw Error(\n                        \"Can't do a distance query from an object without pos\",\n                    );\n                }\n                const distanceOp = opt.distanceOp || \"near\";\n                const sdist = opt.distance * opt.distance;\n                if (distanceOp === \"near\") {\n                    list = list.filter(o =>\n                        o.pos && this.pos.sdist(o.pos) <= sdist\n                    );\n                }\n                else { // distanceOp === \"far\"\n                    list = list.filter(o =>\n                        o.pos && this.pos.sdist(o.pos) > sdist\n                    );\n                }\n            }\n            if (opt.name) {\n                list = list.filter(o => o.name === opt.name);\n            }\n            return list;\n        },\n\n        isAncestorOf(obj: GameObj) {\n            if (!obj.parent) {\n                return false;\n            }\n            return obj.parent === this || this.isAncestorOf(obj.parent);\n        },\n\n        exists(this: GameObj): boolean {\n            return game.root.isAncestorOf(this);\n        },\n\n        is(tag: Tag | Tag[]): boolean {\n            if (tag === \"*\") {\n                return true;\n            }\n            if (Array.isArray(tag)) {\n                for (const t of tag) {\n                    if (!this.c(t)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return this.c(tag) != null;\n            }\n        },\n\n        on(\n            name: string,\n            action: (...args: unknown[]) => void,\n        ): KEventController {\n            const ctrl = events.on(name, action.bind(this));\n            if (onCurCompCleanup) {\n                onCurCompCleanup(() => ctrl.cancel());\n            }\n            return ctrl;\n        },\n\n        trigger(name: string, ...args: unknown[]): void {\n            events.trigger(name, ...args);\n            game.objEvents.trigger(name, this, ...args);\n        },\n\n        destroy() {\n            if (this.parent) {\n                this.parent.remove(this);\n            }\n        },\n\n        inspect() {\n            const info = {} as GameObjInspect;\n\n            for (const [tag, comp] of compStates) {\n                info[tag] = comp.inspect?.() ?? null;\n            }\n\n            for (const [i, comp] of anonymousCompStates.entries()) {\n                if (comp.inspect) {\n                    info[i] = comp.inspect();\n                    continue;\n                }\n\n                for (const [key, value] of Object.entries(comp)) {\n                    if (typeof value === \"function\") {\n                        continue;\n                    }\n                    else {\n                        info[key] = `${key}: ${value}`;\n                    }\n                }\n            }\n\n            return info;\n        },\n\n        onAdd(cb: () => void): KEventController {\n            return this.on(\"add\", cb);\n        },\n\n        onFixedUpdate(cb: () => void): KEventController {\n            return this.on(\"fixedUpdate\", cb);\n        },\n\n        onUpdate(cb: () => void): KEventController {\n            return this.on(\"update\", cb);\n        },\n\n        onDraw(cb: () => void): KEventController {\n            return this.on(\"draw\", cb);\n        },\n\n        onDestroy(action: () => void): KEventController {\n            return this.on(\"destroy\", action);\n        },\n\n        clearEvents() {\n            events.clear();\n        },\n    };\n\n    const evs = [\n        \"onKeyPress\",\n        \"onKeyPressRepeat\",\n        \"onKeyDown\",\n        \"onKeyRelease\",\n        \"onMousePress\",\n        \"onMouseDown\",\n        \"onMouseRelease\",\n        \"onMouseMove\",\n        \"onCharInput\",\n        \"onMouseMove\",\n        \"onTouchStart\",\n        \"onTouchMove\",\n        \"onTouchEnd\",\n        \"onScroll\",\n        \"onGamepadButtonPress\",\n        \"onGamepadButtonDown\",\n        \"onGamepadButtonRelease\",\n        \"onGamepadStick\",\n        \"onButtonPress\",\n        \"onButtonDown\",\n        \"onButtonRelease\",\n    ] as unknown as [keyof Pick<App, \"onKeyPress\">];\n\n    for (const e of evs) {\n        obj[e] = (...args: [any]) => {\n            const ev = app[e]?.(...args);\n            inputEvents.push(ev);\n\n            // TODO: what if the game object is destroy and re-added\n            obj.onDestroy(() => ev.cancel());\n            return ev;\n        };\n    }\n\n    for (const comp of comps) {\n        obj.use(comp as string | Comp);\n    }\n\n    return obj as GameObj<MakeType<T>>;\n}\n", "import type { TimerComp } from \"../components\";\nimport { Mat4, Vec2 } from \"../math/math\";\nimport { type GameObj, type Key, type MouseButton } from \"../types\";\nimport { KEventHandler } from \"../utils\";\nimport type { GameObjEventMap } from \"./events\";\nimport { make } from \"./make\";\nimport type { SceneDef, SceneName } from \"./scenes\";\n\nexport type Game = ReturnType<typeof initGame>;\n\nexport const initGame = () => {\n    const game = {\n        // general events\n        events: new KEventHandler<{\n            mouseMove: [];\n            mouseDown: [MouseButton];\n            mousePress: [MouseButton];\n            mouseRelease: [MouseButton];\n            charInput: [string];\n            keyPress: [Key];\n            keyDown: [Key];\n            keyPressRepeat: [Key];\n            keyRelease: [Key];\n            touchStart: [Vec2, Touch];\n            touchMove: [Vec2, Touch];\n            touchEnd: [Vec2, Touch];\n            gamepadButtonDown: [string];\n            gamepadButtonPress: [string];\n            gamepadButtonRelease: [string];\n            gamepadStick: [string, Vec2];\n            gamepadConnect: [Gamepad];\n            gamepadDisconnect: [Gamepad];\n            scroll: [Vec2];\n            add: [GameObj];\n            destroy: [GameObj];\n            load: [];\n            loading: [number];\n            error: [Error];\n            input: [];\n            frameEnd: [];\n            resize: [];\n            sceneLeave: [string];\n        }>(),\n\n        // object events\n        objEvents: new KEventHandler<GameObjEventMap>(),\n\n        // root game object\n        root: make([]) as GameObj<TimerComp>,\n\n        // misc\n        gravity: null as Vec2 | null,\n        scenes: {} as Record<SceneName, SceneDef>,\n        currentScene: null as SceneName | null,\n        layers: null as string[] | null,\n        defaultLayerIndex: 0,\n\n        // on screen log\n        logs: [] as { msg: string | { toString(): string }; time: number }[],\n\n        // camera\n        cam: {\n            pos: null as Vec2 | null,\n            scale: new Vec2(1),\n            angle: 0,\n            shake: 0,\n            transform: new Mat4(),\n        },\n    };\n\n    return game;\n};\n", "import { game } from \"../kaplay\";\nimport { type Vec2, vec2 } from \"../math\";\n\nexport function setGravity(g: number) {\n    // If g > 0 use either the current direction or use (0, 1)\n    // Else null\n    game.gravity = g ? (game.gravity || vec2(0, 1)).unit().scale(g) : null;\n}\n\nexport function getGravity() {\n    // If gravity > 0 return magnitude\n    // Else 0\n    return game.gravity ? game.gravity.len() : 0;\n}\n\nexport function setGravityDirection(d: Vec2) {\n    // If gravity > 0 keep magnitude, otherwise use 1\n    game.gravity = d.unit().scale(game.gravity ? game.gravity.len() : 1);\n}\n\nexport function getGravityDirection() {\n    // If gravity != null return unit vector, otherwise return (0, 1)\n    return game.gravity ? game.gravity.unit() : vec2(0, 1);\n}\n", "import { SoundData } from \"../assets\";\nimport { createEmptyAudioBuffer } from \"../gfx\";\nimport burpSoundSrc from \"../kassets/burp.mp3\";\n\nexport type AudioCtx = ReturnType<typeof initAudio>;\n\nexport const initAudio = () => {\n    const audio = (() => {\n        const ctx = new (\n            window.AudioContext || (window as any).webkitAudioContext\n        )() as AudioContext;\n\n        const masterNode = ctx.createGain();\n        masterNode.connect(ctx.destination);\n\n        // by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n        const burpSnd = new SoundData(createEmptyAudioBuffer(ctx));\n\n        // load that burp sound\n        ctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n            burpSnd.buf = buf;\n        }).catch((err) => {\n            console.error(\"Failed to load burp: \", err);\n        });\n\n        return {\n            ctx,\n            masterNode,\n            burpSnd,\n        };\n    })();\n\n    return audio;\n};\n", "import { app, audio, debug, globalOpt } from \"../kaplay\";\nimport { clamp } from \"../math/math\";\nimport { KEvent } from \"../utils\";\nimport type { AudioPlay, AudioPlayOpt } from \"./play\";\n\nexport function playMusic(url: string, opt: AudioPlayOpt = {}): AudioPlay {\n    const onEndEvents = new KEvent();\n    const el = new Audio(url);\n    const src = audio.ctx.createMediaElementSource(el);\n\n    src.connect(audio.masterNode);\n\n    function resumeAudioCtx() {\n        if (debug.paused) return;\n        if (app.isHidden() && !globalOpt.backgroundAudio) return;\n        audio.ctx.resume();\n    }\n\n    function play() {\n        resumeAudioCtx();\n        el.play();\n    }\n\n    if (!opt.paused) {\n        play();\n    }\n\n    el.onended = () => onEndEvents.trigger();\n\n    return {\n        play() {\n            play();\n        },\n\n        seek(time: number) {\n            el.currentTime = time;\n        },\n\n        stop() {\n            el.pause();\n            this.seek(0);\n        },\n\n        set loop(l: boolean) {\n            el.loop = l;\n        },\n\n        get loop() {\n            return el.loop;\n        },\n\n        set paused(p: boolean) {\n            if (p) {\n                el.pause();\n            }\n            else {\n                play();\n            }\n        },\n\n        get paused() {\n            return el.paused;\n        },\n\n        time() {\n            return el.currentTime;\n        },\n\n        duration() {\n            return el.duration;\n        },\n\n        set volume(val: number) {\n            el.volume = clamp(val, 0, 1);\n        },\n\n        get volume() {\n            return el.volume;\n        },\n\n        set speed(s) {\n            el.playbackRate = Math.max(s, 0);\n        },\n\n        get speed() {\n            return el.playbackRate;\n        },\n\n        set detune(d) {\n            // TODO\n        },\n\n        get detune() {\n            // TODO\n            return 0;\n        },\n\n        onEnd(action: () => void) {\n            return onEndEvents.add(action);\n        },\n\n        then(action: () => void) {\n            return this.onEnd(action);\n        },\n    };\n}\n", "import { Asset, resolveSound, type SoundData } from \"../assets\";\nimport { assets, audio } from \"../kaplay\";\nimport type { MusicData } from \"../types\";\nimport { KEvent, type KEventController } from \"../utils\";\nimport { playMusic } from \"./playMusic\";\n\n// TODO: enable setting on load, make part of SoundData\n/**\n * Audio play configurations.\n */\nexport interface AudioPlayOpt {\n    /**\n     * If audio should start out paused.\n     *\n     * @since v3000.0\n     */\n    paused?: boolean;\n    /**\n     * If audio should be played again from start when its ended.\n     */\n    loop?: boolean;\n    /**\n     * Volume of audio. 1.0 means full volume, 0.5 means half volume.\n     */\n    volume?: number;\n    /**\n     * Playback speed. 1.0 means normal playback speed, 2.0 means twice as fast.\n     */\n    speed?: number;\n    /**\n     * Detune the sound. Every 100 means a semitone.\n     *\n     * @example\n     * ```js\n     * // play a random note in the octave\n     * play(\"noteC\", {\n     *     detune: randi(0, 12) * 100,\n     * })\n     * ```\n     */\n    detune?: number;\n    /**\n     * The start time, in seconds.\n     */\n    seek?: number;\n}\n\nexport interface AudioPlay {\n    /**\n     * Start playing audio.\n     *\n     * @since v3000.0\n     */\n    play(time?: number): void;\n    /**\n     * Seek time.\n     *\n     * @since v3000.0\n     */\n    seek(time: number): void;\n    /**\n     * Stop the sound.\n     *\n     * @since v3001.0\n     */\n    stop(): void;\n    /**\n     * If the sound is paused.\n     *\n     * @since v2000.1\n     */\n    paused: boolean;\n    /**\n     * Playback speed of the sound. 1.0 means normal playback speed, 2.0 means twice as fast.\n     */\n    speed: number;\n    /**\n     * Detune the sound. Every 100 means a semitone.\n     *\n     * @example\n     * ```js\n     * // tune down a semitone\n     * music.detune = -100\n     *\n     * // tune up an octave\n     * music.detune = 1200\n     * ```\n     */\n    detune: number;\n    /**\n     * Volume of the sound. 1.0 means full volume, 0.5 means half volume.\n     */\n    volume: number;\n    /**\n     * If the audio should start again when it ends.\n     */\n    loop: boolean;\n    /**\n     * The current playing time (not accurate if speed is changed).\n     */\n    time(): number;\n    /**\n     * The total duration.\n     */\n    duration(): number;\n    /**\n     * Register an event that runs when audio ends.\n     *\n     * @since v3000.0\n     */\n    onEnd(action: () => void): KEventController;\n    then(action: () => void): KEventController;\n}\n\nexport function play(\n    src:\n        | string\n        | SoundData\n        | Asset<SoundData>\n        | MusicData\n        | Asset<MusicData>,\n    opt: AudioPlayOpt = {},\n): AudioPlay {\n    if (typeof src === \"string\" && assets.music[src]) {\n        return playMusic(assets.music[src], opt);\n    }\n\n    const ctx = audio.ctx;\n    let paused = opt.paused ?? false;\n    let srcNode = ctx.createBufferSource();\n    const onEndEvents = new KEvent();\n    const gainNode = ctx.createGain();\n    const pos = opt.seek ?? 0;\n    let startTime = 0;\n    let stopTime = 0;\n    let started = false;\n\n    srcNode.loop = Boolean(opt.loop);\n    srcNode.detune.value = opt.detune ?? 0;\n    srcNode.playbackRate.value = opt.speed ?? 1;\n    srcNode.connect(gainNode);\n    srcNode.onended = () => {\n        if (\n            getTime()\n                >= (srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY)\n        ) {\n            onEndEvents.trigger();\n        }\n    };\n    gainNode.connect(audio.masterNode);\n    gainNode.gain.value = opt.volume ?? 1;\n\n    const start = (data: SoundData) => {\n        srcNode.buffer = data.buf;\n        if (!paused) {\n            startTime = ctx.currentTime;\n            srcNode.start(0, pos);\n            started = true;\n        }\n    };\n\n    // @ts-ignore\n    const snd = resolveSound(src);\n\n    if (snd instanceof Asset) {\n        snd.onLoad(start);\n    }\n\n    const getTime = () => {\n        if (!srcNode.buffer) return 0;\n        const t = paused\n            ? stopTime - startTime\n            : ctx.currentTime - startTime;\n        const d = srcNode.buffer.duration;\n        return srcNode.loop ? t % d : Math.min(t, d);\n    };\n\n    const cloneNode = (oldNode: AudioBufferSourceNode) => {\n        const newNode = ctx.createBufferSource();\n        newNode.buffer = oldNode.buffer;\n        newNode.loop = oldNode.loop;\n        newNode.playbackRate.value = oldNode.playbackRate.value;\n        newNode.detune.value = oldNode.detune.value;\n        newNode.onended = oldNode.onended;\n        newNode.connect(gainNode);\n        return newNode;\n    };\n\n    return {\n        stop() {\n            this.paused = true;\n            this.seek(0);\n        },\n\n        set paused(p: boolean) {\n            if (paused === p) return;\n            paused = p;\n            if (p) {\n                if (started) {\n                    srcNode.stop();\n                    started = false;\n                }\n                stopTime = ctx.currentTime;\n            }\n            else {\n                srcNode = cloneNode(srcNode);\n                const pos = stopTime - startTime;\n                srcNode.start(0, pos);\n                started = true;\n                startTime = ctx.currentTime - pos;\n                stopTime = 0;\n            }\n        },\n\n        get paused() {\n            return paused;\n        },\n\n        play(time: number = 0) {\n            this.seek(time);\n            this.paused = false;\n        },\n\n        seek(time: number) {\n            if (!srcNode.buffer?.duration) return;\n            if (time > srcNode.buffer.duration) return;\n            if (paused) {\n                srcNode = cloneNode(srcNode);\n                startTime = stopTime - time;\n            }\n            else {\n                srcNode.stop();\n                srcNode = cloneNode(srcNode);\n                startTime = ctx.currentTime - time;\n                srcNode.start(0, time);\n                started = true;\n                stopTime = 0;\n            }\n        },\n\n        // TODO: affect time()\n        set speed(val: number) {\n            srcNode.playbackRate.value = val;\n        },\n\n        get speed() {\n            return srcNode.playbackRate.value;\n        },\n\n        set detune(val: number) {\n            srcNode.detune.value = val;\n        },\n\n        get detune() {\n            return srcNode.detune.value;\n        },\n\n        set volume(val: number) {\n            gainNode.gain.value = Math.max(val, 0);\n        },\n\n        get volume() {\n            return gainNode.gain.value;\n        },\n\n        set loop(l: boolean) {\n            srcNode.loop = l;\n        },\n\n        get loop() {\n            return srcNode.loop;\n        },\n\n        duration(): number {\n            return srcNode.buffer?.duration ?? 0;\n        },\n\n        time(): number {\n            return getTime() % this.duration();\n        },\n\n        onEnd(action: () => void) {\n            return onEndEvents.add(action);\n        },\n\n        then(action: () => void) {\n            return this.onEnd(action);\n        },\n    };\n}\n", "import { audio } from \"../kaplay\";\nimport { type AudioPlay, type AudioPlayOpt, play } from \"./play\";\n\n// core KAPLAY logic\nexport function burp(opt?: AudioPlayOpt): AudioPlay {\n    return play(audio.burpSnd, opt);\n}\n", "import { audio } from \"../kaplay\";\n\n// get / set master volume\nexport function volume(v?: number): number {\n    if (v !== undefined) {\n        audio.masterNode.gain.value = v;\n    }\n    return audio.masterNode.gain.value;\n}\n", "import { burp } from \"../audio\";\nimport { FrameBuffer, updateViewport } from \"../gfx\";\nimport {\n    app,\n    audio,\n    canvas,\n    debug,\n    gfx,\n    globalOpt,\n    gscale,\n    pixelDensity,\n} from \"../kaplay\";\nimport { clamp } from \"../math/math\";\nimport { toFixed } from \"../utils\";\n\nexport function initEvents() {\n    app.onHide(() => {\n        if (!globalOpt.backgroundAudio) {\n            audio.ctx.suspend();\n        }\n    });\n\n    app.onShow(() => {\n        if (!globalOpt.backgroundAudio && !debug.paused) {\n            audio.ctx.resume();\n        }\n    });\n\n    app.onResize(() => {\n        if (app.isFullscreen()) return;\n        const fixedSize = globalOpt.width && globalOpt.height;\n        if (fixedSize && !globalOpt.stretch && !globalOpt.letterbox) return;\n\n        canvas.width = canvas.offsetWidth * pixelDensity;\n        canvas.height = canvas.offsetHeight * pixelDensity;\n\n        updateViewport();\n\n        if (!fixedSize) {\n            gfx.frameBuffer.free();\n            gfx.frameBuffer = new FrameBuffer(\n                gfx.ggl,\n                gfx.ggl.gl.drawingBufferWidth,\n                gfx.ggl.gl.drawingBufferHeight,\n            );\n            gfx.width = gfx.ggl.gl.drawingBufferWidth / pixelDensity / gscale;\n            gfx.height = gfx.ggl.gl.drawingBufferHeight / pixelDensity / gscale;\n        }\n    });\n\n    if (globalOpt.debug !== false) {\n        app.onKeyPress(\n            globalOpt.debugKey ?? \"f1\",\n            () => debug.inspect = !debug.inspect,\n        );\n        app.onKeyPress(\"f2\", () => debug.clearLog());\n        app.onKeyPress(\"f8\", () => debug.paused = !debug.paused);\n        app.onKeyPress(\"f7\", () => {\n            debug.timeScale = toFixed(\n                clamp(debug.timeScale - 0.2, 0, 2),\n                1,\n            );\n        });\n        app.onKeyPress(\"f9\", () => {\n            debug.timeScale = toFixed(\n                clamp(debug.timeScale + 0.2, 0, 2),\n                1,\n            );\n        });\n        app.onKeyPress(\"f10\", () => debug.stepFrame());\n    }\n\n    // burp mode initialization\n    if (globalOpt.burp) {\n        app.onKeyPress(\"b\", () => burp());\n    }\n}\n", "import { anchor, boom, pos, scale, sprite, stay, timer } from \"../components\";\nimport { boomSprite, game, kaSprite } from \"../kaplay\";\nimport type { Vec2 } from \"../math\";\nimport type { CompList, GameObj } from \"../types\";\n\n/**\n * @group Options\n */\nexport interface BoomOpt {\n    /**\n     * Animation speed.\n     */\n    speed?: number;\n    /**\n     * Scale.\n     */\n    scale?: number;\n    /**\n     * Additional components.\n     *\n     * @since v3000.0\n     */\n    comps?: CompList<any>;\n}\n\nexport function addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n    const kaboom = game.root.add([\n        pos(p),\n        stay(),\n    ]);\n\n    const speed = (opt.speed || 1) * 5;\n    const s = opt.scale || 1;\n\n    kaboom.add([\n        sprite(boomSprite),\n        scale(0),\n        anchor(\"center\"),\n        boom(speed, s),\n        ...opt.comps ?? [],\n    ]);\n\n    const ka = kaboom.add([\n        sprite(kaSprite),\n        scale(0),\n        anchor(\"center\"),\n        timer(),\n        ...opt.comps ?? [],\n    ]);\n\n    ka.wait(0.4 / speed, () => ka.use(boom(speed, s)));\n    ka.onDestroy(() => kaboom.destroy());\n\n    return kaboom;\n}\n", "import { game } from \"../kaplay\";\n\nexport const layers = function(layerNames: string[], defaultLayer: string) {\n    if (game.layers) {\n        throw Error(\"Layers can only be assigned once.\");\n    }\n    const defaultLayerIndex = layerNames.indexOf(defaultLayer);\n    if (defaultLayerIndex == -1) {\n        throw Error(\n            \"The default layer name should be present in the layers list.\",\n        );\n    }\n    game.layers = layerNames;\n    game.defaultLayerIndex = defaultLayerIndex;\n};\n", "import { game } from \"../kaplay\";\nimport type { GameObj } from \"../types\";\n\nexport function destroy(obj: GameObj) {\n    obj.destroy();\n}\n\nexport function getTreeRoot(): GameObj {\n    return game.root;\n}\n", "import { app, game } from \"../kaplay\";\nimport { Mat4, vec2 } from \"../math/math\";\nimport type { KEventController } from \"../utils\";\nimport { initEvents } from \"./initEvents\";\n\n/**\n * The name of a scene.\n */\nexport type SceneName = string;\nexport type SceneDef = (...args: any) => void;\n\nexport function scene(id: SceneName, def: SceneDef) {\n    game.scenes[id] = def;\n}\n\nexport function go(name: SceneName, ...args: unknown[]) {\n    if (!game.scenes[name]) {\n        throw new Error(`Scene not found: ${name}`);\n    }\n\n    game.events.onOnce(\"frameEnd\", () => {\n        game.events.trigger(\"sceneLeave\", name);\n        app.events.clear();\n        game.events.clear();\n        game.objEvents.clear();\n        [...game.root.children].forEach((obj) => {\n            if (\n                !obj.stay\n                || (obj.scenesToStay && !obj.scenesToStay.includes(name))\n            ) {\n                game.root.remove(obj);\n            }\n        });\n\n        game.root.clearEvents();\n        initEvents();\n\n        // cam\n        game.cam = {\n            pos: null,\n            scale: vec2(1),\n            angle: 0,\n            shake: 0,\n            transform: new Mat4(),\n        };\n\n        game.scenes[name](...args);\n    });\n\n    game.currentScene = name;\n}\n\nexport function onSceneLeave(\n    action: (newScene?: string) => void,\n): KEventController {\n    return game.events.on(\"sceneLeave\", action);\n}\n\nexport function getSceneName() {\n    return game.currentScene;\n}\n", "// TODO: accept canvas\n\nimport { dt } from \"../../app\";\nimport type { Asset, SpriteAnim, SpriteData } from \"../../assets\";\nimport { resolveSprite } from \"../../assets/sprite\";\nimport { onLoad } from \"../../game\";\nimport { getRenderProps } from \"../../game/utils\";\nimport { drawTexture, type Texture } from \"../../gfx\";\nimport { Quad, quad, Rect, Vec2, vec2 } from \"../../math\";\nimport type {\n    Comp,\n    GameObj,\n    SpriteAnimPlayOpt,\n    SpriteCurAnim,\n} from \"../../types\";\nimport { KEvent, KEventController } from \"../../utils/\";\n\n/**\n * The {@link sprite `sprite()`} component.\n *\n * @group Component Types\n */\nexport interface SpriteComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Name of the sprite.\n     */\n    sprite: string;\n    /**\n     * Width for sprite.\n     */\n    width: number;\n    /**\n     * Height for sprite.\n     */\n    height: number;\n    /**\n     * Current frame.\n     */\n    frame: number;\n    /**\n     * The rectangular area of the texture to render.\n     */\n    quad: Quad;\n    /**\n     * Play a piece of anim.\n     */\n    play(anim: string, options?: SpriteAnimPlayOpt): void;\n    /**\n     * Stop current anim.\n     */\n    stop(): void;\n    /**\n     * Get total number of frames.\n     */\n    numFrames(): number;\n    /**\n     * Get the current animation data.\n     *\n     * @since v3001.0\n     */\n    getCurAnim(): SpriteCurAnim | null;\n    /**\n     * Get current anim name.\n     *\n     * @deprecated Use `getCurAnim().name` instead.\n     */\n    curAnim(): string | undefined;\n    /**\n     * Check if object's sprite has an animation.\n     */\n    hasAnim(name: string): boolean;\n    /**\n     * Get an animation.\n     */\n    getAnim(name: string): SpriteAnim | null;\n    /**\n     * Speed multiplier for all animations (for the actual fps for an anim use .play(\"anim\", { speed: 10 })).\n     */\n    animSpeed: number;\n    /**\n     * Flip texture horizontally.\n     */\n    flipX: boolean;\n    /**\n     * Flip texture vertically.\n     */\n    flipY: boolean;\n    /**\n     * Register an event that runs when an animation is played.\n     */\n    onAnimStart(action: (anim: string) => void): KEventController;\n    /**\n     * Register an event that runs when an animation is ended.\n     */\n    onAnimEnd(action: (anim: string) => void): KEventController;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link sprite `sprite()`} component.\n *\n * @group Component Types\n */\nexport interface SpriteCompOpt {\n    /**\n     * If the sprite is loaded with multiple frames, or sliced, use the frame option to specify which frame to draw.\n     */\n    frame?: number;\n    /**\n     * If provided width and height, don't stretch but instead render tiled.\n     */\n    tiled?: boolean;\n    /**\n     * Stretch sprite to a certain width.\n     */\n    width?: number;\n    /**\n     * Stretch sprite to a certain height.\n     */\n    height?: number;\n    /**\n     * Play an animation on start.\n     */\n    anim?: string;\n    /**\n     * Speed multiplier for all animations (for the actual fps for an anim use .play(\"anim\", { speed: 10 })).\n     */\n    animSpeed?: number;\n    /**\n     * Flip texture horizontally.\n     */\n    flipX?: boolean;\n    /**\n     * Flip texture vertically.\n     */\n    flipY?: boolean;\n    /**\n     * The rectangular sub-area of the texture to render, default to full texture `quad(0, 0, 1, 1)`.\n     */\n    quad?: Quad;\n    /**\n     * If fill the sprite (useful if you only want to render outline with outline() component).\n     */\n    fill?: boolean;\n}\n\n// TODO: clean\nexport function sprite(\n    src: string | SpriteData | Asset<SpriteData>,\n    opt: SpriteCompOpt = {},\n): SpriteComp {\n    let spriteData: SpriteData | null = null;\n    let curAnim: SpriteCurAnim | null = null;\n    // 1  - from small index to large index\n    // -1 - reverse\n    let curAnimDir: -1 | 1 | null = null;\n    const spriteLoadedEvent = new KEvent<[SpriteData]>();\n\n    if (!src) {\n        throw new Error(\n            \"Please pass the resource name or data to sprite()\",\n        );\n    }\n\n    const calcTexScale = (\n        tex: Texture,\n        q: Quad,\n        w?: number,\n        h?: number,\n    ): Vec2 => {\n        const scale = vec2(1, 1);\n        if (w && h) {\n            scale.x = w / (tex.width * q.w);\n            scale.y = h / (tex.height * q.h);\n        }\n        else if (w) {\n            scale.x = w / (tex.width * q.w);\n            scale.y = scale.x;\n        }\n        else if (h) {\n            scale.y = h / (tex.height * q.h);\n            scale.x = scale.y;\n        }\n        return scale;\n    };\n\n    const setSpriteData = (\n        obj: GameObj<SpriteComp>,\n        spr: SpriteData | null,\n    ) => {\n        if (!spr) return;\n\n        let q = spr.frames[0].clone();\n\n        if (opt.quad) {\n            q = q.scale(opt.quad);\n        }\n\n        const scale = calcTexScale(\n            spr.tex,\n            q,\n            opt.width,\n            opt.height,\n        );\n\n        obj.width = spr.tex.width * q.w * scale.x;\n        obj.height = spr.tex.height * q.h * scale.y;\n\n        if (opt.anim) {\n            obj.play(opt.anim);\n        }\n\n        spriteData = spr;\n        spriteLoadedEvent.trigger(spriteData);\n    };\n\n    return {\n        id: \"sprite\",\n        // TODO: allow update\n        width: 0,\n        height: 0,\n        frame: opt.frame || 0,\n        quad: opt.quad || new Quad(0, 0, 1, 1),\n        animSpeed: opt.animSpeed ?? 1,\n        flipX: opt.flipX ?? false,\n        flipY: opt.flipY ?? false,\n\n        get sprite() {\n            return src.toString();\n        },\n\n        set sprite(src) {\n            const spr = resolveSprite(src);\n\n            if (spr) {\n                spr.onLoad(spr =>\n                    setSpriteData(this as unknown as GameObj<SpriteComp>, spr)\n                );\n            }\n        },\n\n        draw(this: GameObj<SpriteComp>) {\n            if (!spriteData) return;\n\n            const q = spriteData.frames[this.frame ?? 0];\n\n            if (!q) {\n                throw new Error(`Frame not found: ${this.frame ?? 0}`);\n            }\n\n            if (spriteData.slice9) {\n                // TODO: tile\n                // TODO: use scale or width / height, or both?\n                const { left, right, top, bottom } = spriteData.slice9;\n                const tw = spriteData.tex.width * q.w;\n                const th = spriteData.tex.height * q.h;\n                const iw = this.width - left - right;\n                const ih = this.height - top - bottom;\n                const w1 = left / tw;\n                const w3 = right / tw;\n                const w2 = 1 - w1 - w3;\n                const h1 = top / th;\n                const h3 = bottom / th;\n                const h2 = 1 - h1 - h3;\n                const quads = [\n                    // uv\n                    quad(0, 0, w1, h1),\n                    quad(w1, 0, w2, h1),\n                    quad(w1 + w2, 0, w3, h1),\n                    quad(0, h1, w1, h2),\n                    quad(w1, h1, w2, h2),\n                    quad(w1 + w2, h1, w3, h2),\n                    quad(0, h1 + h2, w1, h3),\n                    quad(w1, h1 + h2, w2, h3),\n                    quad(w1 + w2, h1 + h2, w3, h3),\n                    // transform\n                    quad(0, 0, left, top),\n                    quad(left, 0, iw, top),\n                    quad(left + iw, 0, right, top),\n                    quad(0, top, left, ih),\n                    quad(left, top, iw, ih),\n                    quad(left + iw, top, right, ih),\n                    quad(0, top + ih, left, bottom),\n                    quad(left, top + ih, iw, bottom),\n                    quad(left + iw, top + ih, right, bottom),\n                ];\n                for (let i = 0; i < 9; i++) {\n                    const uv = quads[i];\n                    const transform = quads[i + 9];\n                    drawTexture(\n                        Object.assign(getRenderProps(this), {\n                            pos: transform.pos(),\n                            tex: spriteData.tex,\n                            quad: q.scale(uv),\n                            flipX: this.flipX,\n                            flipY: this.flipY,\n                            tiled: opt.tiled,\n                            width: transform.w,\n                            height: transform.h,\n                        }),\n                    );\n                }\n            }\n            else {\n                drawTexture(\n                    Object.assign(getRenderProps(this), {\n                        tex: spriteData.tex,\n                        quad: q.scale(this.quad ?? new Quad(0, 0, 1, 1)),\n                        flipX: this.flipX,\n                        flipY: this.flipY,\n                        tiled: opt.tiled,\n                        width: this.width,\n                        height: this.height,\n                    }),\n                );\n            }\n        },\n\n        add(this: GameObj<SpriteComp>) {\n            const spr = resolveSprite(src);\n\n            if (spr) {\n                // The sprite exists\n                spr.onLoad(spr => setSpriteData(this, spr));\n            }\n            else {\n                // The sprite may be loaded later in the script, check again when all resources have been loaded\n                onLoad(() => setSpriteData(this, resolveSprite(src)!.data));\n            }\n        },\n\n        update(this: GameObj<SpriteComp>) {\n            if (!spriteData || !curAnim || curAnimDir === null) {\n                return;\n            }\n\n            const anim = spriteData!.anims[curAnim.name];\n\n            if (typeof anim === \"number\") {\n                this.frame = anim;\n                return;\n            }\n\n            if (anim.speed === 0) {\n                throw new Error(\"Sprite anim speed cannot be 0\");\n            }\n\n            curAnim.timer += dt() * this.animSpeed;\n\n            if (curAnim.timer >= (1 / curAnim.speed)) {\n                curAnim.timer = 0;\n                this.frame += curAnimDir;\n\n                if (\n                    this.frame < Math.min(anim.from, anim.to)\n                    || this.frame > Math.max(anim.from, anim.to)\n                ) {\n                    if (curAnim.loop) {\n                        if (curAnim.pingpong) {\n                            this.frame -= curAnimDir;\n                            curAnimDir *= -1;\n                            this.frame += curAnimDir;\n                        }\n                        else {\n                            this.frame = anim.from;\n                        }\n                    }\n                    else {\n                        if (curAnim.pingpong) {\n                            const isForward = curAnimDir\n                                === Math.sign(anim.to - anim.from);\n                            if (isForward) {\n                                this.frame = anim.to;\n                                curAnimDir *= -1;\n                                this.frame += curAnimDir;\n                            }\n                            else {\n                                this.frame = anim.from;\n                                curAnim.onEnd();\n                                this.stop();\n                            }\n                        }\n                        else {\n                            this.frame = anim.to;\n                            curAnim.onEnd();\n                            this.stop();\n                        }\n                    }\n                }\n            }\n        },\n\n        play(\n            this: GameObj<SpriteComp>,\n            name: string,\n            opt: SpriteAnimPlayOpt = {},\n        ) {\n            if (!spriteData) {\n                spriteLoadedEvent.add(() => this.play(name, opt));\n                return;\n            }\n\n            const anim = spriteData.anims[name];\n\n            if (anim === undefined) {\n                throw new Error(`Anim not found: ${name}`);\n            }\n\n            if (curAnim) {\n                this.stop();\n            }\n\n            curAnim = typeof anim === \"number\"\n                ? {\n                    name: name,\n                    timer: 0,\n                    loop: false,\n                    pingpong: false,\n                    speed: 0,\n                    onEnd: () => {},\n                }\n                : {\n                    name: name,\n                    timer: 0,\n                    loop: opt.loop ?? anim.loop ?? false,\n                    pingpong: opt.pingpong ?? anim.pingpong ?? false,\n                    speed: opt.speed ?? anim.speed ?? 10,\n                    onEnd: opt.onEnd ?? (() => {}),\n                };\n\n            curAnimDir = typeof anim === \"number\"\n                ? null\n                : anim.from < anim.to\n                ? 1\n                : -1;\n\n            this.frame = typeof anim === \"number\"\n                ? anim\n                : anim.from;\n\n            this.trigger(\"animStart\", name);\n        },\n\n        stop(this: GameObj<SpriteComp>) {\n            if (!curAnim) {\n                return;\n            }\n            const prevAnim = curAnim.name;\n            curAnim = null;\n            this.trigger(\"animEnd\", prevAnim);\n        },\n\n        numFrames() {\n            return spriteData?.frames.length ?? 0;\n        },\n\n        getCurAnim() {\n            return curAnim;\n        },\n\n        curAnim() {\n            return curAnim?.name;\n        },\n\n        getAnim(name) {\n            return spriteData?.anims[name] ?? null;\n        },\n\n        hasAnim(name) {\n            return Boolean(this.getAnim(name));\n        },\n\n        onAnimEnd(\n            this: GameObj<SpriteComp>,\n            action: (name: string) => void,\n        ): KEventController {\n            return this.on(\"animEnd\", action);\n        },\n\n        onAnimStart(\n            this: GameObj<SpriteComp>,\n            action: (name: string) => void,\n        ): KEventController {\n            return this.on(\"animStart\", action);\n        },\n\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n\n        inspect() {\n            if (typeof src === \"string\") {\n                return `sprite: \"${src}\"`;\n            }\n            return null;\n        },\n    };\n}\n", "import type { BitmapFontData } from \"../../assets\";\nimport { DEF_TEXT_SIZE } from \"../../constants\";\nimport { onLoad } from \"../../game\";\nimport { getRenderProps } from \"../../game/utils\";\nimport {\n    type CharTransform,\n    type CharTransformFunc,\n    drawFormattedText,\n    formatText,\n    type TextAlign,\n} from \"../../gfx\";\nimport { k } from \"../../kaplay\";\nimport { Rect, vec2 } from \"../../math/math\";\nimport type { Comp, GameObj, KAPLAYCtx } from \"../../types\";\n\n/**\n * The {@link text `text()`} component.\n *\n * @group Component Types\n */\nexport interface TextComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * The text to render.\n     */\n    text: string;\n    /**\n     * The text size.\n     */\n    textSize: number;\n    /**\n     * The font to use.\n     */\n    font: string | BitmapFontData;\n    /**\n     * Width of text.\n     */\n    width: number;\n    /**\n     * Height of text.\n     */\n    height: number;\n    /**\n     * Text alignment (\"left\", \"center\" or \"right\", default \"left\").\n     *\n     * @since v3000.0\n     */\n    align: TextAlign;\n    /**\n     * The gap between each line.\n     *\n     * @since v2000.2\n     */\n    lineSpacing: number;\n    /**\n     * The gap between each character.\n     *\n     * @since v2000.2\n     */\n    letterSpacing: number;\n    /**\n     * Transform the pos, scale, rotation or color for each character based on the index or char.\n     *\n     * @since v2000.1\n     */\n    textTransform: CharTransform | CharTransformFunc;\n    /**\n     * Stylesheet for styled chunks, in the syntax of \"this is a [style]text[/style] word\".\n     *\n     * @since v2000.2\n     */\n    textStyles: Record<string, CharTransform | CharTransformFunc>;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\n\n/**\n * Options for the {@link text `text()`} component.\n *\n * @group Component Types\n */\nexport interface TextCompOpt {\n    /**\n     * Height of text.\n     */\n    size?: number;\n    /**\n     * The font to use.\n     */\n    font?: string | BitmapFontData;\n    /**\n     * Wrap text to a certain width.\n     */\n    width?: number;\n    /**\n     * Text alignment (\"left\", \"center\" or \"right\", default \"left\").\n     *\n     * @since v3000.0\n     */\n    align?: TextAlign;\n    /**\n     * The gap between each line.\n     *\n     * @since v2000.2\n     */\n    lineSpacing?: number;\n    /**\n     * The gap between each character.\n     *\n     * @since v2000.2\n     */\n    letterSpacing?: number;\n    /**\n     * Transform the pos, scale, rotation or color for each character based on the index or char.\n     *\n     * @since v2000.1\n     */\n    transform?: CharTransform | CharTransformFunc;\n    /**\n     * Stylesheet for styled chunks, in the syntax of \"this is a [style]text[/style] word\".\n     *\n     * @since v2000.2\n     */\n    styles?: Record<string, CharTransform | CharTransformFunc>;\n}\n\nexport function text(t: string, opt: TextCompOpt = {}): TextComp {\n    function update(obj: GameObj<TextComp | any>) {\n        const ftext = formatText(Object.assign(getRenderProps(obj), {\n            text: obj.text + \"\",\n            size: obj.textSize,\n            font: obj.font,\n            width: opt.width && obj.width,\n            align: obj.align,\n            letterSpacing: obj.letterSpacing,\n            lineSpacing: obj.lineSpacing,\n            // TODO: shouldn't run when object / ancestor is paused\n            transform: obj.textTransform,\n            styles: obj.textStyles,\n        }));\n\n        if (!opt.width) {\n            obj.width = ftext.width / (obj.scale?.x || 1);\n        }\n\n        obj.height = ftext.height / (obj.scale?.y || 1);\n\n        return ftext;\n    }\n\n    const obj = {\n        id: \"text\",\n        set text(nt) {\n            t = nt;\n            // @ts-ignore\n            update(this);\n        },\n        get text() {\n            return t;\n        },\n        textSize: opt.size ?? DEF_TEXT_SIZE,\n        font: opt.font,\n        width: opt.width ?? 0,\n        height: 0,\n        align: opt.align,\n        lineSpacing: opt.lineSpacing,\n        letterSpacing: opt.letterSpacing,\n        textTransform: opt.transform,\n        textStyles: opt.styles,\n\n        add(this: GameObj<TextComp>) {\n            onLoad(() => update(this));\n        },\n\n        draw(this: GameObj<TextComp>) {\n            drawFormattedText(update(this));\n        },\n\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n    };\n\n    // @ts-ignore\n    update(obj);\n\n    // @ts-ignore Deep check in text related methods\n    return obj;\n}\n", "import { getRenderProps } from \"../../game/utils\";\nimport { drawUVQuad } from \"../../gfx\";\nimport { Rect, vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\n\n/**\n * The {@link uvquad `uvquad()`} component.\n *\n * @group Component Types\n */\nexport interface UVQuadComp extends Comp {\n    draw: Comp[\"draw\"];\n    /**\n     * Width of rect.\n     */\n    width: number;\n    /**\n     * Height of height.\n     */\n    height: number;\n    /**\n     * @since v3000.0\n     */\n    renderArea(): Rect;\n}\nexport function uvquad(w: number, h: number): UVQuadComp {\n    return {\n        id: \"rect\",\n        width: w,\n        height: h,\n        draw(this: GameObj<UVQuadComp>) {\n            drawUVQuad(Object.assign(getRenderProps(this), {\n                width: this.width,\n                height: this.height,\n            }));\n        },\n        renderArea() {\n            return new Rect(vec2(0), this.width, this.height);\n        },\n        inspect() {\n            return `uvquad: (${Math.ceil(this.width)}w, ${\n                Math.ceil(this.height)\n            })h`;\n        },\n    };\n}\n", "import { Vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { PosComp } from \"../transform/pos\";\nimport type { TileComp } from \"./tile\";\n\n/**\n * The {@link agent `agent()`} component.\n *\n * @group Component Types\n */\nexport interface AgentComp extends Comp {\n    agentSpeed: number;\n    allowDiagonals: boolean;\n    getDistanceToTarget(): number;\n    getNextLocation(): Vec2 | null;\n    getPath(): Vec2[] | null;\n    getTarget(): Vec2 | null;\n    isNavigationFinished(): boolean;\n    isTargetReachable(): boolean;\n    isTargetReached(): boolean;\n    setTarget(target: Vec2): void;\n    onNavigationStarted(cb: () => void): KEventController;\n    onNavigationNext(cb: () => void): KEventController;\n    onNavigationEnded(cb: () => void): KEventController;\n    onTargetReached(cb: () => void): KEventController;\n}\n\n/**\n * Options for the {@link agent `agent()`} component.\n *\n * @group Component Types\n */\nexport type AgentCompOpt = {\n    speed?: number;\n    allowDiagonals?: boolean;\n};\n\nexport function agent(opts: AgentCompOpt = {}): AgentComp {\n    let target: Vec2 | null = null;\n    let path: Vec2[] | null = null;\n    let index: number | null = null;\n    let navMapChangedEvent: KEventController | null = null;\n    return {\n        id: \"agent\",\n        require: [\"pos\", \"tile\"],\n        agentSpeed: opts.speed ?? 100,\n        allowDiagonals: opts.allowDiagonals ?? true,\n        getDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n            return target ? this.pos.dist(target) : 0;\n        },\n        getNextLocation() {\n            return path && index ? path[index] : null;\n        },\n        getPath() {\n            return path ? path.slice() : null;\n        },\n        getTarget() {\n            return target;\n        },\n        isNavigationFinished() {\n            return path ? index === null : true;\n        },\n        isTargetReachable() {\n            return path !== null;\n        },\n        isTargetReached(this: GameObj<AgentComp | PosComp>) {\n            return target ? this.pos.eq(target) : true;\n        },\n        setTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n            target = p;\n            path = this.getLevel().getPath(this.pos, target, {\n                allowDiagonals: this.allowDiagonals,\n            });\n            index = path ? 0 : null;\n            if (path && index !== null) {\n                if (!navMapChangedEvent) {\n                    navMapChangedEvent = this.getLevel()\n                        .onNavigationMapChanged(() => {\n                            if (target && path && index !== null) {\n                                path = this.getLevel().getPath(\n                                    this.pos,\n                                    target,\n                                    {\n                                        allowDiagonals: this.allowDiagonals,\n                                    },\n                                );\n                                if (path) {\n                                    index = 0;\n                                    this.trigger(\n                                        \"navigationNext\",\n                                        this,\n                                        path[index],\n                                    );\n                                }\n                                else {\n                                    index = null;\n                                    this.trigger(\"navigationEnded\", this);\n                                }\n                            }\n                        });\n                    this.onDestroy(() => navMapChangedEvent?.cancel());\n                }\n                this.trigger(\"navigationStarted\", this);\n                this.trigger(\"navigationNext\", this, path[index]);\n            }\n            else {\n                this.trigger(\"navigationEnded\", this);\n            }\n        },\n        update(this: GameObj<AgentComp | PosComp>) {\n            if (target && path && index !== null) {\n                if (this.pos.sdist(path[index]) < 2) {\n                    if (index === path.length - 1) {\n                        this.pos = target.clone();\n                        index = null;\n                        this.trigger(\"navigationEnded\", this);\n                        this.trigger(\"targetReached\", this);\n                        return;\n                    }\n                    else {\n                        index++;\n                        this.trigger(\"navigationNext\", this, path[index]);\n                    }\n                }\n                this.moveTo(path[index], this.agentSpeed);\n            }\n        },\n        onNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigationStarted\", cb);\n        },\n        onNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigationNext\", cb);\n        },\n        onNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"navigationEnded\", cb);\n        },\n        onTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n            return this.on(\"targetReached\", cb);\n        },\n        inspect() {\n            return `agent: ` + JSON.stringify({\n                target: JSON.stringify(target),\n                path: JSON.stringify(path),\n            });\n        },\n    };\n}\n", "import { Vec2 } from \"../../math/math\";\nimport { type Graph } from \"../../math/navigation\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { PosComp } from \"../transform/pos\";\n\nexport interface NavigationMapComp extends Comp {\n    /*\n     * Get navigation waypoints to reach the given target from the given origin.\n     */\n    navigate(\n        origin: Vec2,\n        target: Vec2,\n        navigationOpt: any,\n    ): Vec2[] | undefined;\n    /*\n     * The graph to use for navigation.\n     */\n    graph: Graph | undefined;\n}\n\nexport interface NavigationMapCompOpt {\n    /*\n     * The graph to use for navigation. If null, the ancestors are queried for a navigatorMap component.\n     */\n    graph?: Graph;\n}\n\nexport function navigationMap(\n    opts: NavigationMapCompOpt,\n): NavigationMapComp {\n    let graph = opts.graph;\n    return {\n        id: \"navigatorMap\",\n        get graph(): Graph | undefined {\n            return graph;\n        },\n        set graph(value) {\n            graph = value;\n        },\n        navigate(\n            this: GameObj<NavigationMapComp>,\n            origin: Vec2,\n            target: Vec2,\n            navigationOpt: any = {},\n        ): Vec2[] | undefined {\n            return graph?.getWaypointPath(origin, target, navigationOpt);\n        },\n    };\n}\n\nexport interface NavigationComp extends Comp {\n    /*\n     * Get navigation waypoints to reach the given target from the current position.\n     */\n    navigateTo(target: Vec2): Vec2[] | undefined;\n    /*\n     * Get the graph used for navigastion if any.\n     */\n    graph: Graph | undefined;\n}\n\nexport interface NavigationCompOpt {\n    /*\n     * The graph to use for navigation. If null, the ancestors are queried for a navigatorMap component.\n     */\n    graph?: Graph;\n    /*\n     * The navigation options depending on the kind of graph used.\n     */\n    navigationOpt?: any;\n}\n\nexport function navigation(\n    opts: NavigationCompOpt,\n): NavigationComp {\n    let graph = opts.graph;\n    return {\n        id: \"navigator\",\n        require: [\"pos\"],\n        navigateTo(\n            this: GameObj<NavigationComp | PosComp>,\n            target: Vec2,\n        ): Vec2[] | undefined {\n            const graph: Graph | undefined = this.graph;\n            return graph?.getWaypointPath(this.pos, target, opts.navigationOpt);\n        },\n        get graph(): Graph | undefined {\n            if (graph) {\n                return graph;\n            }\n            let parent: GameObj<any> | null =\n                (this as unknown as GameObj<NavigationComp>).parent;\n            while (parent) {\n                if (parent.is(\"navigatormap\")) {\n                    return parent.graph;\n                }\n                parent = parent.parent;\n            }\n            return undefined;\n        },\n        set graph(value) {\n            graph = value;\n        },\n    };\n}\n", "import { Vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { PosComp } from \"../transform/pos\";\n\nexport interface PatrolComp extends Comp {\n    /*\n     * Path to follow. If null, doesn't move.\n     */\n    waypoints: Vec2[] | undefined;\n    /*\n     * Speed of the movement during patrol.\n     */\n    patrolSpeed: number;\n    /*\n     * Current subgoal, if any.\n     */\n    nextLocation: Vec2 | undefined;\n    /**\n     * Attaches an event handler which is called when using \"stop\" and the end of the path is reached.\n     * @param cb The event handler called when the patrol finishes.\n     */\n    onPatrolFinished(cb: (objects: GameObj[]) => void): KEventController;\n}\n\ntype PatrolEndBehavior =\n    /* Go directly back to the start */\n    | \"loop\"\n    /* Traveling the reverse path back to the start */\n    | \"ping-pong\"\n    /* Stop */\n    | \"stop\";\n\nexport interface PatrolCompOpt {\n    /*\n     * Path to follow. If null, starts suspended.\n     */\n    waypoints?: Vec2[];\n    /*\n     * Speed of the movement during patrol.\n     */\n    speed?: number;\n    /*\n     * What to do after the last waypoint has been reached.\n     */\n    endBehavior?: PatrolEndBehavior;\n}\n\nexport function patrol(\n    opts: PatrolCompOpt = {},\n): PatrolComp {\n    let waypoints = opts.waypoints;\n    let speed = opts.speed || 100; // Or throw error?\n    let endBehavior = opts.endBehavior || \"stop\"; // Default is stop.\n    let index = 0;\n    let finished = waypoints != null;\n    return {\n        id: \"patrol\",\n        require: [\"pos\"],\n        get patrolSpeed() {\n            return speed;\n        },\n        set patrolSpeed(value) {\n            speed = value;\n        },\n        get waypoints() {\n            return waypoints;\n        },\n        set waypoints(value) {\n            waypoints = value;\n            index = 0;\n            finished = false;\n        },\n        get nextLocation() {\n            return waypoints ? waypoints[index] : undefined;\n        },\n        update(this: GameObj<PatrolComp | PosComp>) {\n            const nextWaypoint = this.nextLocation;\n            if (!waypoints || !nextWaypoint || finished) return;\n            this.moveTo(nextWaypoint, speed);\n            if (this.pos.sdist(nextWaypoint) < 9) {\n                switch (endBehavior) {\n                    case \"loop\":\n                        index = (index + 1) % waypoints.length;\n                        break;\n                    case \"ping-pong\":\n                        index = index + 1;\n                        if (index == waypoints.length) {\n                            waypoints.reverse();\n                            index = 0;\n                        }\n                        break;\n                    case \"stop\":\n                        index = Math.min(index + 1, waypoints.length - 1);\n                        if (index == waypoints.length - 1) {\n                            finished = true;\n                            this.trigger(\"patrolFinished\");\n                        }\n                        break;\n                }\n            }\n        },\n        onPatrolFinished(cb: (objects: GameObj[]) => void) {\n            return (this as unknown as GameObj<PatrolComp>).on(\n                \"patrolFinished\",\n                cb,\n            );\n        },\n    };\n}\n", "import { dt } from \"../../app\";\nimport { game, k } from \"../../kaplay\";\nimport { Vec2 } from \"../../math/math\";\nimport type { Comp, GameObj, QueryOpt } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport { raycast } from \"../draw\";\nimport type { PosComp } from \"../transform/pos\";\n\n/**\n * The {@link sentry `sentry()`} component.\n *\n * @group Component Types\n */\nexport interface SentryComp extends Comp {\n    /*\n     * The direction the sentry is pointing to.\n     */\n    direction?: Vec2;\n    /*\n     * The direction of the sentry as an angle in degrees.\n     */\n    directionAngle?: number;\n    /*\n     * The field of view of the sentry in degrees.\n     */\n    fieldOfView?: number;\n    /*\n     * The objects spotted most recently.\n     */\n    spotted: GameObj<any>[];\n    /**\n     * Attaches an event handler which is called when objects of interest are spotted.\n     * @param cb The event handler called when objects are spotted.\n     */\n    onObjectsSpotted(cb: (objects: GameObj[]) => void): KEventController;\n    /**\n     * Returns true if the object is within the field of view.\n     * @param obj The object to test.\n     * @param direction The direction to look at.\n     * @param fieldOfView The field of view in degrees.\n     */\n    isWithinFieldOfView(\n        obj: GameObj<PosComp>,\n        direction?: Vec2,\n        fieldOfView?: number,\n    ): boolean;\n    /**\n     * Returns true if there is a line of sight to the object.\n     * @param obj The object to test.\n     */\n    hasLineOfSight(obj: GameObj<PosComp>): boolean;\n}\n\n/**\n * Options for the {@link sentry `sentry()`} component.\n *\n * @group Component Types\n */\nexport interface SentryCompOpt {\n    /*\n     * The direction the sentry is pointing to. If undefined, direction has no influence.\n     */\n    direction?: Vec2 | number;\n    /*\n     * The field of view of the sentry in degrees. If undefined, defaults to human fov of 200 degrees.\n     */\n    fieldOfView?: number;\n    /*\n     * If true, line of sight matters. This means that objects which are blocked from view by areas are invisible.\n     */\n    lineOfSight?: boolean;\n    /*\n     * When using line of sight, the objects which are transparent for the ray. Include at least a tag identifying the sentry.\n     */\n    raycastExclude?: string[];\n    /*\n     * The frequency of checking, defaults to every second.\n     */\n    checkFrequency?: number;\n}\n\nexport type SentryCandidatesCb = () => GameObj<any>[];\nexport type SentryCandidates = SentryCandidatesCb | QueryOpt;\n\nexport function sentry(\n    candidates: SentryCandidates,\n    opts: SentryCompOpt = {},\n): SentryComp {\n    const get: SentryCandidatesCb = typeof candidates === \"function\"\n        ? candidates\n        : () => {\n            return game.root.query(candidates);\n        };\n    const checkFrequency = opts.checkFrequency || 1;\n    const directionVector = typeof opts.direction === \"number\"\n        ? Vec2.fromAngle(opts.direction)\n        : opts.direction;\n    let t = 0;\n    return {\n        id: \"sentry\",\n        require: [\"pos\"],\n        direction: typeof opts.direction == \"number\"\n            ? Vec2.fromAngle(opts.direction)\n            : opts.direction,\n        spotted: [],\n        set directionAngle(value: number) {\n            this.direction = value !== undefined\n                ? Vec2.fromAngle(value)\n                : undefined;\n        },\n        get directionAngle(): number | undefined {\n            return this.direction ? this.direction.angle() : undefined;\n        },\n        fieldOfView: opts.fieldOfView || 200, // 200 degrees = Human field of view\n        isWithinFieldOfView(\n            this: GameObj<SentryComp | PosComp>,\n            obj: GameObj<PosComp>,\n            direction?: Vec2,\n            fieldOfView?: number,\n        ) {\n            const dir: Vec2 | undefined = (typeof direction === \"number\"\n                ? Vec2.fromAngle(direction)\n                : direction) || directionVector;\n            const fov: number | undefined = fieldOfView || opts.fieldOfView;\n            if (!dir || !fov || fov >= 360) return true;\n            const halfAngle = fov / 2;\n            return obj.pos\n                && dir.angleBetween(obj.pos.sub(this.pos)) <= halfAngle;\n        },\n        hasLineOfSight(\n            this: GameObj<SentryComp | PosComp>,\n            obj: GameObj<PosComp>,\n        ) {\n            const hit = raycast(\n                this.pos,\n                obj.pos.sub(this.pos),\n                opts.raycastExclude,\n            );\n            return hit != null && hit.object === obj;\n        },\n        update(this: GameObj<SentryComp | PosComp>) {\n            t += dt();\n            if (t > checkFrequency) {\n                t -= checkFrequency;\n                let objects = get();\n                // If fieldOfView is used, keep only object within view\n                if (\n                    objects.length && directionVector && this.fieldOfView\n                    && this.fieldOfView < 360\n                ) {\n                    const halfAngle = this.fieldOfView / 2;\n                    objects = objects.filter(o =>\n                        o.pos\n                        && directionVector.angleBetween(o.pos.sub(this.pos))\n                            <= halfAngle\n                    );\n                }\n                // If lineOfSight is used, raycast\n                if (objects.length && opts.lineOfSight) {\n                    objects = objects.filter(o => {\n                        return o.pos\n                            && this.hasLineOfSight(o as GameObj<PosComp>);\n                    });\n                }\n                if (objects.length > 0) {\n                    this.spotted = objects;\n                    this.trigger(\"objectSpotted\", objects);\n                }\n            }\n        },\n        onObjectsSpotted(cb: (objects: GameObj[]) => void) {\n            return (this as unknown as GameObj<SentryComp>).on(\n                \"objectSpotted\",\n                cb,\n            );\n        },\n    };\n}\n", "import { Vec2, vec2 } from \"../../math/math\";\nimport {\n    type Comp,\n    type Edge,\n    EdgeMask,\n    type GameObj,\n    type LevelComp,\n} from \"../../types\";\n\n/**\n * The {@link tile `tile()`} component.\n *\n * @group Component Types\n */\nexport interface TileComp extends Comp {\n    /**\n     * The tile position inside the level.\n     */\n    tilePos: Vec2;\n    /**\n     * If the tile is an obstacle in pathfinding.\n     */\n    isObstacle: boolean;\n    /**\n     * How much a tile is cost to traverse in pathfinding (default 0).\n     */\n    cost: number;\n    /**\n     * If the tile has hard edges that cannot pass in pathfinding.\n     */\n    edges: Edge[];\n    /**\n     * Position offset when setting `tilePos`.\n     */\n    tilePosOffset: Vec2;\n    readonly edgeMask: EdgeMask;\n    getLevel(): GameObj<LevelComp>;\n    moveLeft(): void;\n    moveRight(): void;\n    moveUp(): void;\n    moveDown(): void;\n}\n\n/**\n * Options for the {@link tile `tile()`} component.\n *\n * @group Component Types\n */\nexport type TileCompOpt = {\n    /**\n     * If the tile is an obstacle in pathfinding.\n     */\n    isObstacle?: boolean;\n    /**\n     * How much a tile is cost to traverse in pathfinding (default 0).\n     */\n    cost?: number;\n    /**\n     * If the tile has hard edges that cannot pass in pathfinding.\n     */\n    edges?: Edge[];\n    /**\n     * Position offset when setting `tilePos`.\n     */\n    offset?: Vec2;\n};\n\nexport function tile(opts: TileCompOpt = {}): TileComp {\n    let tilePos = vec2(0);\n    let isObstacle = opts.isObstacle ?? false;\n    let cost = opts.cost ?? 0;\n    let edges = opts.edges ?? [];\n\n    const getEdgeMask = () => {\n        const loopup = {\n            \"left\": EdgeMask.Left,\n            \"top\": EdgeMask.Top,\n            \"right\": EdgeMask.Right,\n            \"bottom\": EdgeMask.Bottom,\n        };\n        return edges.map(s => loopup[s] || 0).reduce(\n            (mask, dir) => mask | dir,\n            0,\n        );\n    };\n\n    let edgeMask = getEdgeMask();\n\n    return {\n        id: \"tile\",\n        tilePosOffset: opts.offset ?? vec2(0),\n\n        set tilePos(p: Vec2) {\n            const level = this.getLevel();\n            tilePos = p.clone();\n            // @ts-ignore\n            this.pos = vec2(\n                this.tilePos.x * level.tileWidth(),\n                this.tilePos.y * level.tileHeight(),\n            ).add(this.tilePosOffset);\n        },\n\n        get tilePos() {\n            return tilePos;\n        },\n\n        set isObstacle(is: boolean) {\n            if (isObstacle === is) return;\n            isObstacle = is;\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get isObstacle() {\n            return isObstacle;\n        },\n\n        set cost(n: number) {\n            if (cost === n) return;\n            cost = n;\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get cost() {\n            return cost;\n        },\n\n        set edges(e: Edge[]) {\n            edges = e;\n            edgeMask = getEdgeMask();\n            this.getLevel().invalidateNavigationMap();\n        },\n\n        get edges() {\n            return edges;\n        },\n\n        get edgeMask() {\n            return edgeMask;\n        },\n\n        getLevel(this: GameObj) {\n            return this.parent as GameObj<LevelComp>;\n        },\n\n        moveLeft() {\n            this.tilePos = this.tilePos.add(vec2(-1, 0));\n        },\n\n        moveRight() {\n            this.tilePos = this.tilePos.add(vec2(1, 0));\n        },\n\n        moveUp() {\n            this.tilePos = this.tilePos.add(vec2(0, -1));\n        },\n\n        moveDown() {\n            this.tilePos = this.tilePos.add(vec2(0, 1));\n        },\n    };\n}\n", "import { dt } from \"../../app\";\nimport { Color } from \"../../math/color\";\nimport easings from \"../../math/easings\";\nimport {\n    catmullRom,\n    easingLinear,\n    hermiteFirstDerivative,\n    lerp,\n    Vec2,\n    vec2,\n} from \"../../math/math\";\nimport type { Comp, EaseFunc, GameObj, LerpValue } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { NamedComp } from \"./named\";\n\ntype TimeDirection =\n    /* Animate forward */\n    | \"forward\"\n    /* Animate in reverse */\n    | \"reverse\"\n    /* Alternate animating forward and reverse */\n    | \"ping-pong\";\n\ntype Interpolation =\n    /* No interpolation */\n    | \"none\"\n    /* Linear interpolation */\n    | \"linear\"\n    /* Spherical linear interpolation */\n    | \"slerp\"\n    /* Spline interpolation */\n    | \"spline\";\n\nexport interface AnimateOpt {\n    /**\n     * Duration of the animation in seconds\n     */\n    duration: number;\n    /**\n     * Loops, Default is undefined aka infinite\n     */\n    loops?: number;\n    /**\n     * Behavior when reaching the end of the animation. Default is forward.\n     */\n    direction?: TimeDirection;\n    /**\n     * Easing function. Default is linear time.\n     */\n    easing?: EaseFunc;\n    /**\n     * Interpolation function. Default is linear interpolation.\n     */\n    interpolation?: Interpolation;\n    /**\n     * Timestamps in percent for the given keys, if omitted, keys are equally spaced.\n     */\n    timing?: number[];\n    /**\n     * Easings for the given keys, if omitted, easing is used.\n     */\n    easings?: EaseFunc[];\n}\n\nexport interface AnimateCompOpt {\n    /**\n     * Changes the angle so it follows the motion, requires the rotate component\n     */\n    followMotion?: boolean;\n    /**\n     * The animation is added to the base values of pos, angle, scale and opacity instead of replacing them\n     */\n    relative?: boolean;\n}\n\nexport interface BaseValues {\n    pos: Vec2;\n    angle: number;\n    scale: Vec2;\n    opacity: number;\n}\n\nexport interface AnimateComp extends Comp {\n    /**\n     * Animates a property on this object.\n     * @param name Name of the property to animate.\n     * @param keys Keys determining the value at a certain point in time.\n     * @param opts Options.\n     */\n    animate<T extends LerpValue>(\n        name: string,\n        keys: T[],\n        opts: AnimateOpt,\n    ): void;\n    /**\n     * Removes the animation from the given property.\n     * @param name Name of the property to remove the animation from.\n     */\n    unanimate(name: string): void;\n    /**\n     * Removes the animations from all properties\n     */\n    unanimateAll(): void;\n    /**\n     * Attaches an event handler which is called when all the animation channels have finished.\n     * @param cb The event handler called when the animation finishes.\n     */\n    onAnimateFinished(cb: () => void): KEventController;\n    /**\n     * Attaches an event handler which is called when an animation channels has finished.\n     * @param cb The event handler called when an animation channel finishes.\n     */\n    onAnimateChannelFinished(cb: (name: string) => void): KEventController;\n    /**\n     * Base values for relative animation\n     */\n    base: BaseValues;\n    /**\n     * Serializes the animation of this object to plain Javascript types\n     */\n    serializeAnimationChannels(): Record<string, AnimationChannel>;\n    /**\n     * Serializes the options of this object to plain Javascript types\n     */\n    serializeAnimationOptions(): { followMotion?: boolean; relative?: boolean };\n}\n\n/**\n * Baseclass for animation channels, only handles parameter normalization and keyframe searches\n */\nclass AnimateChannel {\n    name: string;\n    duration: number;\n    loops: number;\n    direction: TimeDirection;\n    easing: EaseFunc;\n    interpolation: Interpolation;\n    isFinished: boolean;\n    timing: number[] | undefined;\n    easings: EaseFunc[] | undefined;\n    relative: boolean;\n    constructor(name: string, opts: AnimateOpt, relative: boolean) {\n        this.name = name;\n        this.duration = opts.duration;\n        this.loops = opts.loops || 0;\n        this.direction = opts.direction || \"forward\";\n        this.easing = opts.easing || easings.linear;\n        this.interpolation = opts.interpolation || \"linear\";\n        this.isFinished = false;\n        this.timing = opts.timing;\n        this.easings = opts.easings;\n        this.relative = relative;\n    }\n\n    update(obj: GameObj<any>, t: number): boolean {\n        return true;\n    }\n\n    /**\n     * Returns the first key index for the given time, as well as the relative time towards the second key.\n     * @param t The time in seconds.\n     * @param timing The optional timestamps in percent.\n     * @returns The first key index for the given time, as well as the relative time towards the second key.\n     */\n    getLowerKeyIndexAndRelativeTime(\n        t: number,\n        count: number,\n        timing?: number[],\n    ): [number, number] {\n        const maxIndex = count - 1;\n        // Check how many loops we've made\n        let p = t / this.duration;\n        if (this.loops !== 0 && p >= this.loops) {\n            return [maxIndex, 0];\n        }\n        // Split looped and actual time\n        const m = Math.trunc(p);\n        p -= m;\n        // Reverse if needed\n        if (\n            this.direction == \"reverse\"\n            || (this.direction == \"ping-pong\" && (m & 1))\n        ) {\n            p = 1 - p;\n        }\n        // If we have individual keyframe positions, use them, otherwise use uniform spread\n        if (timing) {\n            let index = 0;\n            while (timing[index + 1] !== undefined && timing[index + 1] < p) {\n                index++;\n            }\n            if (index >= maxIndex) {\n                return [maxIndex, 0];\n            }\n            return [\n                index,\n                (p - timing[index]) / (timing[index + 1] - timing[index]),\n            ];\n        }\n        else {\n            const index = Math.floor((count - 1) * p);\n            return [index, (p - index / maxIndex) * maxIndex];\n        }\n    }\n\n    setValue<T>(obj: GameObj<any>, name: string, value: T) {\n        if (this.relative) {\n            switch (name) {\n                case \"pos\":\n                    obj[\"pos\"] = obj.base.pos.add(value as Vec2);\n                    break;\n                case \"angle\":\n                    obj[\"angle\"] = obj.base.angle + (value as number);\n                    break;\n                case \"scale\":\n                    obj[\"scale\"] = obj.base.scale.scale(value as Vec2);\n                    break;\n                case \"opacity\":\n                    obj[\"opacity\"] = obj.base.opacity * (value as number);\n                    break;\n                default:\n                    obj[name] = value;\n            }\n        }\n        else {\n            obj[name] = value;\n        }\n    }\n\n    serialize(): AnimationChannel {\n        const serialization: AnimationChannel = {\n            duration: this.duration,\n            keys: [],\n        };\n        if (this.loops) {\n            serialization.loops = this.loops;\n        }\n        if (this.direction !== \"forward\") {\n            serialization.direction = this.direction;\n        }\n        if (this.easing != easings.linear) {\n            serialization.easing = this.easing.name;\n        }\n        if (this.interpolation !== \"linear\") {\n            serialization.interpolation = this.interpolation;\n        }\n        if (this.timing) {\n            serialization.timing = this.timing;\n        }\n        if (this.easings) {\n            serialization.easings = this.easings.map(e => this.easing.name);\n        }\n        return serialization;\n    }\n}\n\n/**\n * Reflects a point around another point\n * @param a Point to reflect\n * @param b Point to reflect around\n * @returns Reflected point\n */\nfunction reflect(a: Vec2, b: Vec2) {\n    return b.add(b.sub(a));\n}\n\n/**\n * Subclass handling number keys\n */\nclass AnimateChannelNumber extends AnimateChannel {\n    keys: number[];\n    constructor(\n        name: string,\n        keys: number[],\n        opts: AnimateOpt,\n        relative: boolean,\n    ) {\n        super(name, opts, relative);\n        this.keys = keys;\n    }\n\n    update(obj: GameObj<any>, t: number): boolean {\n        const [index, alpha] = this.getLowerKeyIndexAndRelativeTime(\n            t,\n            this.keys.length,\n            this.timing,\n        );\n        // Return exact value in case of exact hit or no interpolation, otherwise interpolate\n        if (alpha == 0 || this.interpolation === \"none\") {\n            this.setValue(obj, this.name, this.keys[index]);\n        }\n        else {\n            const easing = this.easings ? this.easings[index] : this.easing;\n            this.setValue(\n                obj,\n                this.name,\n                lerp(\n                    this.keys[index],\n                    this.keys[index + 1],\n                    easing(alpha),\n                ),\n            );\n        }\n        return alpha == 1;\n    }\n\n    serialize() {\n        return Object.assign(super.serialize(), { keys: this.keys });\n    }\n}\n\n/**\n * Subclass handling vector keys\n */\nclass AnimateChannelVec2 extends AnimateChannel {\n    keys: Vec2[];\n    curves?: ((t: number) => Vec2)[];\n    dcurves?: ((t: number) => Vec2)[];\n    constructor(\n        name: string,\n        keys: Vec2[],\n        opts: AnimateOpt,\n        relative: boolean,\n        followMotion: boolean,\n    ) {\n        super(name, opts, relative);\n        this.keys = keys;\n        // If spline interpolation is used, bake splines\n        if (this.interpolation === \"spline\") {\n            this.curves = [];\n            // If following motion, bake derivatives as well\n            if (followMotion) {\n                this.dcurves = [];\n            }\n            for (let i = 0; i < this.keys.length - 1; i++) {\n                const prevKey = this.keys[i];\n                const nextIndex = i + 1;\n                const nextKey = this.keys[nextIndex];\n                const prevPrevKey = i > 0\n                    ? this.keys[i - 1]\n                    : reflect(nextKey, prevKey);\n                const nextNextKey = nextIndex < this.keys.length - 1\n                    ? this.keys[nextIndex + 1]\n                    : reflect(prevKey, nextKey);\n                this.curves.push(\n                    catmullRom(prevPrevKey, prevKey, nextKey, nextNextKey),\n                );\n                if (followMotion) {\n                    this.dcurves?.push(\n                        catmullRom(\n                            prevPrevKey,\n                            prevKey,\n                            nextKey,\n                            nextNextKey,\n                            hermiteFirstDerivative,\n                        ),\n                    );\n                }\n            }\n        }\n    }\n\n    update(obj: GameObj<any>, t: number): boolean {\n        const [index, alpha] = this.getLowerKeyIndexAndRelativeTime(\n            t,\n            this.keys.length,\n            this.timing,\n        );\n        // Return exact value in case of exact hit or no interpolation, otherwise interpolate\n        if (alpha == 0 || this.interpolation === \"none\") {\n            this.setValue(obj, this.name, this.keys[index]);\n        }\n        else {\n            const easing = this.easings ? this.easings[index] : this.easing;\n            // Use linear or spline interpolation\n            switch (this.interpolation) {\n                case \"linear\":\n                    this.setValue(\n                        obj,\n                        this.name,\n                        this.keys[index].lerp(\n                            this.keys[index + 1],\n                            easing(alpha),\n                        ),\n                    );\n                    break;\n                case \"slerp\":\n                    this.setValue(\n                        obj,\n                        this.name,\n                        this.keys[index].slerp(\n                            this.keys[index + 1],\n                            easing(alpha),\n                        ),\n                    );\n                    break;\n                case \"spline\":\n                    if (this.curves) {\n                        this.setValue(\n                            obj,\n                            this.name,\n                            this.curves[index](easing(alpha)),\n                        );\n                        if (this.dcurves) {\n                            this.setValue(\n                                obj,\n                                \"angle\",\n                                this.dcurves[index](easing(alpha)).angle(),\n                            );\n                        }\n                        break;\n                    }\n            }\n        }\n        return alpha == 1;\n    }\n\n    serialize() {\n        return Object.assign(super.serialize(), {\n            keys: this.keys.map(v => [v.x, v.y]),\n        });\n    }\n}\n\n/**\n * Subclass handling color keys\n */\nclass AnimateChannelColor extends AnimateChannel {\n    keys: Color[];\n    constructor(\n        name: string,\n        keys: Color[],\n        opts: AnimateOpt,\n        relative: boolean,\n    ) {\n        super(name, opts, relative);\n        this.keys = keys;\n    }\n\n    update(obj: GameObj<any>, t: number): boolean {\n        const [index, alpha] = this.getLowerKeyIndexAndRelativeTime(\n            t,\n            this.keys.length,\n            this.timing,\n        );\n        // Return exact value in case of exact hit or no interpolation, otherwise interpolate\n        if (alpha == 0 || this.interpolation == \"none\") {\n            this.setValue(obj, this.name, this.keys[index]);\n        }\n        else {\n            const easing = this.easings ? this.easings[index] : this.easing;\n            this.setValue(\n                obj,\n                this.name,\n                this.keys[index].lerp(\n                    this.keys[index + 1],\n                    easing(alpha),\n                ),\n            );\n        }\n        return alpha == 1;\n    }\n\n    serialize() {\n        return Object.assign(super.serialize(), { keys: this.keys });\n    }\n}\n\ntype AnimationChannelKeys = number[] | number[][];\n\ntype AnimationOptions = {\n    duration: number;\n    loops?: number;\n    direction?: TimeDirection;\n    easing?: string;\n    interpolation?: Interpolation;\n    timing?: number[];\n    easings?: string[];\n};\n\ntype AnimationChannel = {\n    keys: AnimationChannelKeys;\n} & AnimationOptions;\n\ntype Animation = {\n    name: string;\n    followMotion?: boolean;\n    relative?: boolean;\n    channels?: Record<string, AnimationChannel>;\n    children?: Animation[];\n};\n\nexport function animate(gopts: AnimateCompOpt = {}): AnimateComp {\n    const channels: AnimateChannel[] = [];\n    let t = 0;\n    let isFinished = false;\n    return {\n        id: \"animate\",\n        require: gopts.followMotion ? [\"rotate\"] : undefined,\n        base: {\n            pos: vec2(0, 0),\n            angle: 0,\n            scale: vec2(1, 1),\n            opacity: 1,\n        },\n        add(this: GameObj<AnimateComp>) {\n            if (gopts.relative) {\n                if (this.is(\"pos\")) {\n                    this.base.pos = (this as any).pos.clone();\n                }\n                if (this.is(\"rotate\")) {\n                    this.base.angle = (this as any).angle;\n                }\n                if (this.is(\"scale\")) {\n                    this.base.scale = (this as any).scale;\n                }\n                if (this.is(\"opacity\")) {\n                    this.base.opacity = (this as any).opacity;\n                }\n            }\n        },\n        update() {\n            let allFinished: boolean = true;\n            let localFinished: boolean;\n            t += dt();\n            for (const c of channels) {\n                localFinished = c.update(this as unknown as GameObj<any>, t);\n                if (localFinished && !c.isFinished) {\n                    c.isFinished = true;\n                    (this as unknown as GameObj<any>).trigger(\n                        \"animateChannelFinished\",\n                        c.name,\n                    );\n                }\n                allFinished &&= localFinished;\n            }\n            if (allFinished && !isFinished) {\n                isFinished = true;\n                (this as unknown as GameObj<any>).trigger(\"animateFinished\");\n            }\n        },\n        animate<T extends LerpValue>(\n            name: string,\n            keys: T[],\n            opts: AnimateOpt,\n        ) {\n            isFinished = false;\n            this.unanimate(name);\n            if (typeof keys[0] === \"number\") {\n                channels.push(\n                    new AnimateChannelNumber(\n                        name,\n                        keys as number[],\n                        opts,\n                        gopts.relative || false,\n                    ),\n                );\n            }\n            else if (keys[0] instanceof Vec2) {\n                channels.push(\n                    new AnimateChannelVec2(\n                        name,\n                        keys as Vec2[],\n                        opts,\n                        gopts.relative || false,\n                        name === \"pos\" && (gopts.followMotion || false),\n                    ),\n                );\n            }\n            else if (keys[0] instanceof Color) {\n                channels.push(\n                    new AnimateChannelColor(\n                        name,\n                        keys as Color[],\n                        opts,\n                        gopts.relative || false,\n                    ),\n                );\n            }\n        },\n        unanimate(name: string) {\n            const index = channels.findIndex(c => c.name === name);\n            if (index >= 0) {\n                channels.splice(index, 1);\n            }\n        },\n        unanimateAll() {\n            channels.splice(0, channels.length);\n        },\n        onAnimateFinished(cb: () => void) {\n            return (this as unknown as GameObj<any>).on(\"animateFinished\", cb);\n        },\n        onAnimateChannelFinished(cb: (name: string) => void) {\n            return (this as unknown as GameObj<any>).on(\n                \"animateChannelFinished\",\n                cb,\n            );\n        },\n        serializeAnimationChannels() {\n            return channels.reduce((o: Record<string, AnimationChannel>, c) => {\n                o[c.name] = c.serialize();\n                return o;\n            }, {});\n        },\n        serializeAnimationOptions() {\n            const options: any = {};\n            if (gopts.followMotion) {\n                options.followMotion = true;\n            }\n            if (gopts.relative) {\n                options.relative = true;\n            }\n            return options;\n        },\n    };\n}\n\n/**\n * Serializes an animation to javascript objects for serialization to JSON.\n * @param obj The root object to serialize from.\n * @param name Optional name of the root object.\n * @returns A javascript object serialization of the animation.\n */\nexport function serializeAnimation(obj: GameObj<any>, name: string): any {\n    let serialization: Animation = { name: obj.name };\n    if (obj.is(\"animate\")) {\n        serialization.channels = (obj as GameObj<AnimateComp>)\n            .serializeAnimationChannels();\n        Object.assign(\n            serialization,\n            (obj as GameObj<NamedComp | AnimateComp>)\n                .serializeAnimationOptions(),\n        );\n    }\n    if (obj.children.length > 0) {\n        serialization.children = obj.children.filter(o => o.is(\"named\")).map(\n            o => serializeAnimation(o, o.name),\n        );\n    }\n    return serialization;\n}\n\nfunction deserializeKeys(keys: AnimationChannelKeys) {\n    if (typeof keys[0] == \"number\") {\n        return keys;\n    }\n    else if (Array.isArray(keys[0])) {\n        if (keys[0].length == 2) {\n            return (keys as number[][]).map(k => new Vec2(k[0], k[1]));\n        }\n        else if (keys[0].length == 3) {\n            return (keys as number[][]).map(k => new Color(k[0], k[1], k[2]));\n        }\n    }\n}\n\nfunction deserializeOptions(options: AnimationOptions) {\n    if (options.easing) {\n        options.easing = (easings as any)[options.easing];\n    }\n    if (options.easings) {\n        options.easings = options.easings.map(e => (easings as any)[e]);\n    }\n    return options;\n}\n\n/**\n * Applies the animation to this object and its named children\n * @param obj The root object to deserialize to.\n * @param animation A javascript object serialization of the animation.\n */\nexport function applyAnimation(obj: GameObj<any>, animation: Animation) {\n    // TODO: test this\n    obj.use(animate({\n        followMotion: animation.followMotion,\n        relative: animation.relative,\n    }));\n    if (animation.channels) {\n        for (const name in animation.channels) {\n            const channel = animation.channels[name];\n            obj.animate(\n                name,\n                deserializeKeys(channel.keys),\n                deserializeOptions(channel),\n            );\n        }\n    }\n    if (animation.children) {\n        for (const childAnimation of animation.children) {\n            const q = obj.query({ name: childAnimation.name });\n            if (q.length != 0) {\n                applyAnimation(q[0], childAnimation);\n            }\n        }\n    }\n}\n", "import { dt } from \"../../app\";\nimport { vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { ScaleComp } from \"../transform/scale\";\n\nexport function boom(speed: number = 2, size: number = 1): Comp {\n    let time = 0;\n    return {\n        require: [\"scale\"],\n        update(this: GameObj<ScaleComp>) {\n            const s = Math.sin(time * speed) * size;\n            if (s < 0) {\n                this.destroy();\n            }\n            this.scale = vec2(s);\n            time += dt();\n        },\n    };\n}\n", "import type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\n\n/**\n * The {@link health `health()`} component.\n *\n * @group Component Types\n */\nexport interface HealthComp extends Comp {\n    /**\n     * Decrease HP by n (defaults to 1).\n     */\n    hurt(n?: number): void;\n    /**\n     * Increase HP by n (defaults to 1).\n     */\n    heal(n?: number): void;\n    /**\n     * Current health points.\n     */\n    hp(): number;\n    /**\n     * Set current health points.\n     */\n    setHP(hp: number): void;\n    /**\n     * Max amount of HP.\n     */\n    maxHP(): number | null;\n    /**\n     * Set max amount of HP.\n     */\n    setMaxHP(hp: number): void;\n    /**\n     * Register an event that runs when hurt() is called upon the object.\n     *\n     * @since v2000.1\n     */\n    onHurt(action: (amount?: number) => void): KEventController;\n    /**\n     * Register an event that runs when heal() is called upon the object.\n     *\n     * @since v2000.1\n     */\n    onHeal(action: (amount?: number) => void): KEventController;\n    /**\n     * Register an event that runs when object's HP is equal or below 0.\n     *\n     * @since v2000.1\n     */\n    onDeath(action: () => void): KEventController;\n}\n\nexport function health(\n    hp: number,\n    maxHP?: number,\n): HealthComp {\n    if (hp == null) {\n        throw new Error(\"health() requires the initial amount of hp\");\n    }\n\n    return {\n        id: \"health\",\n        hurt(this: GameObj, n: number = 1) {\n            this.setHP(hp - n);\n            this.trigger(\"hurt\", n);\n        },\n        heal(this: GameObj, n: number = 1) {\n            const origHP = hp;\n            this.setHP(hp + n);\n            this.trigger(\"heal\", hp - origHP);\n        },\n        hp(): number {\n            return hp;\n        },\n        maxHP(): number | null {\n            return maxHP ?? null;\n        },\n        setMaxHP(n: number): void {\n            maxHP = n;\n        },\n        setHP(this: GameObj, n: number) {\n            hp = maxHP ? Math.min(maxHP, n) : n;\n            if (hp <= 0) {\n                this.trigger(\"death\");\n            }\n        },\n        onHurt(\n            this: GameObj,\n            action: (amount?: number) => void,\n        ): KEventController {\n            return this.on(\"hurt\", action);\n        },\n        onHeal(\n            this: GameObj,\n            action: (amount?: number) => void,\n        ): KEventController {\n            return this.on(\"heal\", action);\n        },\n        onDeath(this: GameObj, action: () => void): KEventController {\n            return this.on(\"death\", action);\n        },\n        inspect() {\n            return `health: ${hp}`;\n        },\n    };\n}\n", "import { game } from \"../../kaplay\";\nimport easings from \"../../math/easings\";\nimport type { EmptyComp, GameObj } from \"../../types\";\nimport type { OpacityComp } from \"../draw/opacity\";\n\n/**\n * The {@link lifespan `lifespan()`} component.\n *\n * @group Component Types\n */\nexport interface LifespanCompOpt {\n    /**\n     * Fade out duration (default 0 which is no fade out).\n     */\n    fade?: number;\n}\n\nexport function lifespan(time: number, opt: LifespanCompOpt = {}): EmptyComp {\n    if (time == null) {\n        throw new Error(\"lifespan() requires time\");\n    }\n    const fade = opt.fade ?? 0;\n    return {\n        id: \"lifespan\",\n        require: [\"opacity\"],\n        async add(this: GameObj<OpacityComp>) {\n            await game.root.wait(time);\n            this.opacity = this.opacity ?? 1;\n            if (fade > 0) {\n                await game.root.tween(\n                    this.opacity,\n                    0,\n                    fade,\n                    (a) => this.opacity = a,\n                    easings.linear,\n                );\n            }\n            this.destroy();\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link named `named()`} component.\n *\n * @group Component Types\n */\nexport interface NamedComp extends Comp {\n    /** The name assigned to this object. */\n    name: string;\n}\n\nexport function named(name: string): NamedComp {\n    return {\n        id: \"named\",\n        name,\n    };\n}\n", "import type { Comp } from \"../../types\";\nimport { KEvent, KEventController } from \"../../utils/\";\n\n/**\n * The {@link state `state()`} component.\n *\n * @group Component Types\n */\nexport interface StateComp extends Comp {\n    /**\n     * Current state.\n     */\n    state: string;\n    /**\n     * Enter a state, trigger onStateEnd for previous state and onStateEnter for the new State state.\n     */\n    enterState: (state: string, ...args: any) => void;\n    /**\n     * Register event that runs once when a specific state transition happens. Accepts arguments passed from `enterState(name, ...args)`.\n     *\n     * @since v2000.2\n     */\n    onStateTransition(\n        from: string,\n        to: string,\n        action: () => void,\n    ): KEventController;\n    /**\n     * Register event that runs once when enters a specific state. Accepts arguments passed from `enterState(name, ...args)`.\n     */\n    onStateEnter: (\n        state: string,\n        action: (...args: any) => void,\n    ) => KEventController;\n    /**\n     * Register an event that runs once when leaves a specific state.\n     */\n    onStateEnd: (state: string, action: () => void) => KEventController;\n    /**\n     * Register an event that runs every frame when in a specific state.\n     */\n    onStateUpdate: (state: string, action: () => void) => KEventController;\n    /**\n     * Register an event that runs every frame when in a specific state.\n     */\n    onStateDraw: (state: string, action: () => void) => KEventController;\n}\n\nexport function state(\n    initState: string,\n    stateList?: string[],\n    transitions?: Record<string, string | string[]>,\n): StateComp {\n    if (!initState) {\n        throw new Error(\"state() requires an initial state\");\n    }\n\n    const events: { [k: string]: any } = {};\n\n    function initStateEvents(state: string) {\n        if (!events[state]) {\n            events[state] = {\n                enter: new KEvent(),\n                end: new KEvent(),\n                update: new KEvent(),\n                draw: new KEvent(),\n            };\n        }\n    }\n\n    function on(event: string, state: string, action: () => void) {\n        initStateEvents(state);\n        return events[state][event].add(action);\n    }\n\n    function trigger(event: string, state: string, ...args: any[]) {\n        initStateEvents(state);\n        events[state][event].trigger(...args);\n    }\n\n    let didFirstEnter = false;\n\n    return {\n        id: \"state\",\n        state: initState,\n\n        enterState(state: string, ...args) {\n            didFirstEnter = true;\n\n            if (stateList && !stateList.includes(state)) {\n                throw new Error(`State not found: ${state}`);\n            }\n\n            const oldState = this.state;\n\n            if (transitions) {\n                // check if the transition is legal, if transition graph is defined\n                if (!transitions?.[oldState]) {\n                    return;\n                }\n\n                const available = typeof transitions[oldState] === \"string\"\n                    ? [transitions[oldState]]\n                    : transitions[oldState] as string[];\n\n                if (!available.includes(state)) {\n                    throw new Error(\n                        `Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${\n                            available.map((s) => `\"${s}\"`).join(\", \")\n                        }`,\n                    );\n                }\n            }\n\n            trigger(\"end\", oldState, ...args);\n            this.state = state;\n            trigger(\"enter\", state, ...args);\n            trigger(\"enter\", `${oldState} -> ${state}`, ...args);\n        },\n\n        onStateTransition(\n            from: string,\n            to: string,\n            action: () => void,\n        ): KEventController {\n            return on(\"enter\", `${from} -> ${to}`, action);\n        },\n\n        onStateEnter(state: string, action: () => void): KEventController {\n            return on(\"enter\", state, action);\n        },\n\n        onStateUpdate(state: string, action: () => void): KEventController {\n            return on(\"update\", state, action);\n        },\n\n        onStateDraw(state: string, action: () => void): KEventController {\n            return on(\"draw\", state, action);\n        },\n\n        onStateEnd(state: string, action: () => void): KEventController {\n            return on(\"end\", state, action);\n        },\n\n        update() {\n            // execute the enter event for initState\n            if (!didFirstEnter) {\n                trigger(\"enter\", initState);\n                didFirstEnter = true;\n            }\n            trigger(\"update\", this.state);\n        },\n\n        draw() {\n            trigger(\"draw\", this.state);\n        },\n\n        inspect() {\n            return `state: ${this.state}`;\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link stay `stay()`} component.\n *\n * @group Component Types\n */\nexport interface StayComp extends Comp {\n    /**\n     * If the obj should not be destroyed on scene switch.\n     */\n    stay: boolean;\n    /**\n     * Array of scenes that the obj will stay on.\n     */\n    scenesToStay?: string[];\n}\n\nexport function stay(scenesToStay?: string[]): StayComp {\n    return {\n        id: \"stay\",\n        stay: true,\n        scenesToStay,\n    };\n}\n", "import { k } from \"../../kaplay\";\nimport type { Comp, GameObj, KAPLAYCtx } from \"../../types\";\nimport type { KEventController } from \"../../utils\";\nimport type { TextComp } from \"../draw/text\";\n\n/**\n * The {@link stay `stay()`} component.\n *\n * @group Component Types\n */\nexport interface TextInputComp extends Comp {\n    /**\n     * Enable the text input array from being modified by user input.\n     */\n    hasFocus: boolean;\n}\n\nexport function textInput(\n    this: KAPLAYCtx,\n    hasFocus: boolean = true,\n    maxInputLength?: number,\n): TextInputComp {\n    let charEv: KEventController;\n    let backEv: KEventController;\n\n    return {\n        id: \"textInput\",\n        hasFocus: hasFocus,\n        require: [\"text\"],\n        add(this: GameObj<TextComp & TextInputComp>) {\n            charEv = k.onCharInput((character) => {\n                if (\n                    this.hasFocus\n                    && (!maxInputLength || this.text.length < maxInputLength)\n                ) {\n                    if (k.isKeyDown(\"shift\")) {\n                        this.text += character.toUpperCase();\n                    }\n                    else {\n                        this.text += character;\n                    }\n                }\n            });\n\n            backEv = k.onKeyPress(\"backspace\", () => {\n                if (this.hasFocus) {\n                    this.text = this.text.slice(0, -1);\n                }\n            });\n        },\n        destroy() {\n            charEv.cancel();\n            backEv.cancel();\n        },\n    };\n}\n", "import { k } from \"../../kaplay\";\nimport easings from \"../../math/easings\";\nimport { lerp } from \"../../math/math\";\nimport type {\n    Comp,\n    GameObj,\n    LerpValue,\n    TimerController,\n    TweenController,\n} from \"../../types\";\nimport type { KEventController } from \"../../utils\";\n\n/**\n * The {@link timer `timer()`} component.\n *\n * @group Component Types\n */\nexport interface TimerComp extends Comp {\n    /**\n     * Run the callback after n seconds.\n     */\n    wait(time: number, action?: () => void): TimerController;\n    /**\n     * Run the callback every n seconds.\n     *\n     * @since v3000.0\n     */\n    loop(time: number, action: () => void): KEventController;\n    /**\n     * Tweeeeen! Note that this doesn't specifically mean tweening on this object's property, this just registers the timer on this object, so the tween will cancel with the object gets destroyed, or paused when obj.paused is true.\n     *\n     * @since v3000.0\n     */\n    tween<V extends LerpValue>(\n        from: V,\n        to: V,\n        duration: number,\n        setValue: (value: V) => void,\n        easeFunc?: (t: number) => number,\n    ): TweenController;\n}\n\nexport function timer(): TimerComp {\n    return {\n        id: \"timer\",\n        wait(\n            this: GameObj<TimerComp>,\n            time: number,\n            action?: () => void,\n        ): TimerController {\n            const actions: Function[] = [];\n\n            if (action) actions.push(action);\n            let t = 0;\n            const ev = this.onUpdate(() => {\n                t += k.dt();\n                if (t >= time) {\n                    actions.forEach((f) => f());\n                    ev.cancel();\n                }\n            });\n            return {\n                get paused() {\n                    return ev.paused;\n                },\n                set paused(p) {\n                    ev.paused = p;\n                },\n                cancel: ev.cancel,\n                onEnd(action) {\n                    actions.push(action);\n                },\n                then(action) {\n                    this.onEnd(action);\n                    return this;\n                },\n            };\n        },\n        loop(t: number, action: () => void): KEventController {\n            let curTimer: null | TimerController = null;\n            const newAction = () => {\n                // TODO: should f be execute right away as loop() is called?\n                curTimer = this.wait(t, newAction);\n                action();\n            };\n            curTimer = this.wait(0, newAction);\n            return {\n                get paused() {\n                    return curTimer?.paused ?? false;\n                },\n                set paused(p) {\n                    if (curTimer) curTimer.paused = p;\n                },\n                cancel: () => curTimer?.cancel(),\n            };\n        },\n        tween<V extends LerpValue>(\n            this: GameObj<TimerComp>,\n            from: V,\n            to: V,\n            duration: number,\n            setValue: (value: V) => void,\n            easeFunc = easings.linear,\n        ) {\n            let curTime = 0;\n            const onEndEvents: Array<() => void> = [];\n            const ev = this.onUpdate(() => {\n                curTime += k.dt();\n                const t = Math.min(curTime / duration, 1);\n                setValue(lerp(from, to, easeFunc(t)));\n                if (t === 1) {\n                    ev.cancel();\n                    setValue(to);\n                    onEndEvents.forEach((action) => action());\n                }\n            });\n            return {\n                get paused() {\n                    return ev.paused;\n                },\n                set paused(p) {\n                    ev.paused = p;\n                },\n                onEnd(action: () => void) {\n                    onEndEvents.push(action);\n                },\n                then(action: () => void) {\n                    this.onEnd(action);\n                    return this;\n                },\n                cancel() {\n                    ev.cancel();\n                },\n                finish() {\n                    ev.cancel();\n                    setValue(to);\n                    onEndEvents.forEach((action) => action());\n                },\n            };\n        },\n    };\n}\n", "import { DEF_ANCHOR } from \"../../constants\";\nimport { isFixed } from \"../../game/utils\";\nimport { anchorPt, getViewportScale } from \"../../gfx\";\nimport { app, game, k } from \"../../kaplay\";\nimport { rgb } from \"../../math/color\";\nimport { Polygon, testPolygonPoint, Vec2, vec2 } from \"../../math/math\";\nimport type {\n    Collision,\n    Comp,\n    Cursor,\n    GameObj,\n    MouseButton,\n    Shape,\n    Tag,\n} from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { AnchorComp } from \"../transform/anchor\";\nimport type { FixedComp } from \"../transform/fixed\";\nimport type { PosComp } from \"../transform/pos\";\n\nlet areaCount = 0;\n\nexport function usesArea() {\n    return areaCount > 0;\n}\n\n/**\n * The {@link area `area()`} component.\n *\n * @group Component Types\n */\nexport interface AreaComp extends Comp {\n    /**\n     * Collider area info.\n     */\n    area: {\n        /**\n         * If we use a custom shape over render shape.\n         */\n        shape: Shape | null;\n        /**\n         * Area scale.\n         */\n        scale: Vec2;\n        /**\n         * Area offset.\n         */\n        offset: Vec2;\n        /**\n         * Cursor on hover.\n         */\n        cursor: Cursor | null;\n    };\n    /**\n     * If this object should ignore collisions against certain other objects.\n     *\n     * @since v3000.0\n     */\n    collisionIgnore: Tag[];\n    /**\n     * If was just clicked on last frame.\n     */\n    isClicked(): boolean;\n    /**\n     * If is being hovered on.\n     */\n    isHovering(): boolean;\n    /**\n     * Check collision with another game obj.\n     *\n     * @since v3000.0\n     */\n    checkCollision(other: GameObj<AreaComp>): Collision | null;\n    /**\n     * Get all collisions currently happening.\n     *\n     * @since v3000.0\n     */\n    getCollisions(): Collision[];\n    /**\n     * If is currently colliding with another game obj.\n     */\n    isColliding(o: GameObj<AreaComp>): boolean;\n    /**\n     * If is currently overlapping with another game obj (like isColliding, but will return false if the objects are just touching edges).\n     */\n    isOverlapping(o: GameObj<AreaComp>): boolean;\n    /**\n     * Register an event runs when clicked.\n     *\n     * @since v2000.1\n     */\n    onClick(f: () => void, btn?: MouseButton): void;\n    /**\n     * Register an event runs once when hovered.\n     *\n     * @since v3000.0\n     */\n    onHover(action: () => void): KEventController;\n    /**\n     * Register an event runs every frame when hovered.\n     *\n     * @since v3000.0\n     */\n    onHoverUpdate(action: () => void): KEventController;\n    /**\n     * Register an event runs once when unhovered.\n     *\n     * @since v3000.0\n     */\n    onHoverEnd(action: () => void): KEventController;\n    /**\n     * Register an event runs once when collide with another game obj with certain tag.\n     *\n     * @since v2001.0\n     */\n    onCollide(tag: Tag, f: (obj: GameObj, col?: Collision) => void): void;\n    /**\n     * Register an event runs once when collide with another game obj.\n     *\n     * @since v2000.1\n     */\n    onCollide(f: (obj: GameObj, col?: Collision) => void): void;\n    /**\n     * Register an event runs every frame when collide with another game obj with certain tag.\n     *\n     * @since v3000.0\n     */\n    onCollideUpdate(\n        tag: Tag,\n        f: (obj: GameObj, col?: Collision) => void,\n    ): KEventController;\n    /**\n     * Register an event runs every frame when collide with another game obj.\n     *\n     * @since v3000.0\n     */\n    onCollideUpdate(\n        f: (obj: GameObj, col?: Collision) => void,\n    ): KEventController;\n    /**\n     * Register an event runs once when stopped colliding with another game obj with certain tag.\n     *\n     * @since v3000.0\n     */\n    onCollideEnd(tag: Tag, f: (obj: GameObj) => void): KEventController;\n    /**\n     * Register an event runs once when stopped colliding with another game obj.\n     *\n     * @since v3000.0\n     */\n    onCollideEnd(f: (obj: GameObj) => void): void;\n    /**\n     * If has a certain point inside collider.\n     */\n    hasPoint(p: Vec2): boolean;\n    /**\n     * Push out from another solid game obj if currently overlapping.\n     */\n    resolveCollision(obj: GameObj): void;\n    /**\n     * Get the geometry data for the collider in local coordinate space.\n     *\n     * @since v3000.0\n     */\n    localArea(): Shape;\n    /**\n     * Get the geometry data for the collider in world coordinate space.\n     */\n    worldArea(): Polygon;\n    /**\n     * Get the geometry data for the collider in screen coordinate space.\n     */\n    screenArea(): Polygon;\n}\n\n/**\n * Options for the {@link area `area()`} component.\n *\n * @group Component Types\n */\nexport interface AreaCompOpt {\n    /**\n     * The shape of the area (currently only Rect and Polygon is supported).\n     *\n     * @example\n     * ```js\n     * add([\n     *     sprite(\"butterfly\"),\n     *     pos(100, 200),\n     *     // a triangle shape!\n     *     area({ shape: new Polygon([vec2(0), vec2(100), vec2(-100, 100)]) }),\n     * ])\n     * ```\n     */\n    shape?: Shape;\n    /**\n     * Area scale.\n     */\n    scale?: number | Vec2;\n    /**\n     * Area offset.\n     */\n    offset?: Vec2;\n    /**\n     * Cursor on hover.\n     */\n    cursor?: Cursor;\n    /**\n     * If this object should ignore collisions against certain other objects.\n     *\n     * @since v3000.0\n     */\n    collisionIgnore?: Tag[];\n}\n\nexport function area(opt: AreaCompOpt = {}): AreaComp {\n    const colliding: Record<string, Collision> = {};\n    const collidingThisFrame = new Set();\n\n    return {\n        id: \"area\",\n        collisionIgnore: opt.collisionIgnore ?? [],\n\n        add(this: GameObj<AreaComp>) {\n            areaCount++;\n            if (this.area.cursor) {\n                this.onHover(() => app.setCursor(this.area.cursor!));\n            }\n\n            this.onCollideUpdate((obj, col) => {\n                if (!obj.id) {\n                    throw new Error(\"area() requires the object to have an id\");\n                }\n                if (!colliding[obj.id]) {\n                    this.trigger(\"collide\", obj, col);\n                }\n                if (!col) {\n                    return;\n                }\n\n                colliding[obj.id] = col;\n                collidingThisFrame.add(obj.id);\n            });\n        },\n\n        destroy() {\n            areaCount--;\n        },\n\n        update(this: GameObj<AreaComp>) {\n            for (const id in colliding) {\n                if (!collidingThisFrame.has(Number(id))) {\n                    this.trigger(\"collideEnd\", colliding[id].target);\n                    delete colliding[id];\n                }\n            }\n            collidingThisFrame.clear();\n        },\n\n        drawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n            const a = this.localArea();\n\n            k.pushTransform();\n            k.pushScale(this.area.scale);\n            k.pushTranslate(this.area.offset);\n\n            const opts = {\n                outline: {\n                    width: 4 / getViewportScale(),\n                    color: rgb(0, 0, 255),\n                },\n                anchor: this.anchor,\n                fill: false,\n                fixed: isFixed(this),\n            };\n\n            if (a instanceof k.Rect) {\n                k.drawRect({\n                    ...opts,\n                    pos: a.pos,\n                    width: a.width,\n                    height: a.height,\n                });\n            }\n            else if (a instanceof k.Polygon) {\n                k.drawPolygon({\n                    ...opts,\n                    pts: a.pts,\n                });\n            }\n            else if (a instanceof k.Circle) {\n                k.drawCircle({\n                    ...opts,\n                    pos: a.center,\n                    radius: a.radius,\n                });\n            }\n\n            k.popTransform();\n        },\n\n        area: {\n            shape: opt.shape ?? null,\n            scale: opt.scale ? vec2(opt.scale) : vec2(1),\n            offset: opt.offset ?? vec2(0),\n            cursor: opt.cursor ?? null,\n        },\n\n        isClicked(): boolean {\n            return app.isMousePressed() && this.isHovering();\n        },\n\n        isHovering(this: GameObj) {\n            const mpos = isFixed(this)\n                ? k.mousePos()\n                : k.toWorld(k.mousePos());\n            return this.hasPoint(mpos);\n        },\n\n        checkCollision(this: GameObj, other: GameObj<AreaComp>) {\n            if (!other.id) {\n                throw new Error(\n                    \"checkCollision() requires the object to have an id\",\n                );\n            }\n            return colliding[other.id] ?? null;\n        },\n\n        getCollisions() {\n            return Object.values(colliding);\n        },\n\n        // TODO: perform check instead of use cache\n        isColliding(other: GameObj<AreaComp>) {\n            if (!other.id) {\n                throw new Error(\n                    \"isColliding() requires the object to have an id\",\n                );\n            }\n            return Boolean(colliding[other.id]);\n        },\n\n        isOverlapping(other) {\n            if (!other.id) {\n                throw new Error(\n                    \"isOverlapping() requires the object to have an id\",\n                );\n            }\n            const col = colliding[other.id];\n            return col && col.hasOverlap();\n        },\n\n        onClick(\n            this: GameObj<AreaComp>,\n            f: () => void,\n            btn: MouseButton = \"left\",\n        ): KEventController {\n            const e = app.onMousePress(btn, () => {\n                if (this.isHovering()) {\n                    f();\n                }\n            });\n            this.onDestroy(() => e.cancel());\n            return e;\n        },\n\n        onHover(this: GameObj, action: () => void): KEventController {\n            let hovering = false;\n            return this.onUpdate(() => {\n                if (!hovering) {\n                    if (this.isHovering()) {\n                        hovering = true;\n                        action();\n                    }\n                }\n                else {\n                    hovering = this.isHovering();\n                }\n            });\n        },\n\n        onHoverUpdate(this: GameObj, onHover: () => void): KEventController {\n            return this.onUpdate(() => {\n                if (this.isHovering()) {\n                    onHover();\n                }\n            });\n        },\n\n        onHoverEnd(this: GameObj, action: () => void): KEventController {\n            let hovering = false;\n            return this.onUpdate(() => {\n                if (hovering) {\n                    if (!this.isHovering()) {\n                        hovering = false;\n                        action();\n                    }\n                }\n                else {\n                    hovering = this.isHovering();\n                }\n            });\n        },\n\n        onCollide(\n            this: GameObj,\n            tag: Tag | ((obj: GameObj, col?: Collision) => void),\n            cb?: (obj: GameObj, col?: Collision) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collide\", tag);\n            }\n            else if (typeof tag === \"string\") {\n                return this.onCollide((obj: GameObj, col: Collision) => {\n                    if (obj.is(tag)) {\n                        cb?.(obj, col);\n                    }\n                });\n            }\n            else {\n                throw new Error(\n                    \"onCollide() requires either a function or a tag\",\n                );\n            }\n        },\n\n        onCollideUpdate(\n            this: GameObj<AreaComp>,\n            tag: Tag | ((obj: GameObj, col?: Collision) => void),\n            cb?: (obj: GameObj, col?: Collision) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collideUpdate\", tag);\n            }\n            else if (typeof tag === \"string\") {\n                return this.on(\n                    \"collideUpdate\",\n                    (obj, col) => obj.is(tag) && cb?.(obj, col),\n                );\n            }\n            else {\n                throw new Error(\n                    \"onCollideUpdate() requires either a function or a tag\",\n                );\n            }\n        },\n\n        onCollideEnd(\n            this: GameObj<AreaComp>,\n            tag: Tag | ((obj: GameObj) => void),\n            cb?: (obj: GameObj) => void,\n        ): KEventController {\n            if (typeof tag === \"function\" && cb === undefined) {\n                return this.on(\"collideEnd\", tag);\n            }\n            else if (typeof tag === \"string\") {\n                return this.on(\n                    \"collideEnd\",\n                    (obj) => obj.is(tag) && cb?.(obj),\n                );\n            }\n            else {\n                throw new Error(\n                    \"onCollideEnd() requires either a function or a tag\",\n                );\n            }\n        },\n\n        hasPoint(pt: Vec2): boolean {\n            // TODO: convert to pt to local space instead\n            return testPolygonPoint(this.worldArea(), pt);\n        },\n\n        // push an obj out of another if they're overlapped\n        resolveCollision(\n            this: GameObj<AreaComp | PosComp>,\n            obj: GameObj<AreaComp>,\n        ) {\n            const col = this.checkCollision(obj);\n            if (col && !col.resolved) {\n                this.pos = this.pos.add(col.displacement);\n                col.resolved = true;\n            }\n        },\n\n        localArea(\n            this: GameObj<AreaComp | { renderArea(): Shape }>,\n        ): Shape {\n            return this.area.shape\n                ? this.area.shape\n                : this.renderArea();\n        },\n\n        // TODO: cache\n        worldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n            const localArea = this.localArea();\n\n            if (\n                !(localArea instanceof k.Polygon || localArea instanceof k.Rect)\n            ) {\n                throw new Error(\n                    \"Only support polygon and rect shapes for now\",\n                );\n            }\n\n            const transform = this.transform\n                .clone()\n                .scale(vec2(this.area.scale ?? 1))\n                .translate(this.area.offset);\n\n            if (localArea instanceof k.Rect) {\n                const offset = anchorPt(this.anchor || DEF_ANCHOR)\n                    .add(1, 1)\n                    .scale(-0.5)\n                    .scale(localArea.width, localArea.height);\n                transform.translate(offset);\n            }\n\n            return localArea.transform(transform) as Polygon;\n        },\n\n        screenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n            const area = this.worldArea();\n            if (isFixed(this)) {\n                return area;\n            }\n            else {\n                return area.transform(game.cam.transform);\n            }\n        },\n\n        inspect() {\n            if (this.area.scale.x == this.area.scale.y) {\n                return `area: ${this.area.scale.x.toFixed(1)}x`;\n            }\n            else {\n                return `area: (${this.area.scale.x.toFixed(1)}x, ${\n                    this.area.scale.y.toFixed(1)\n                }y)`;\n            }\n        },\n    };\n}\n", "import { fixedDt } from \"../../app\";\nimport { DEF_JUMP_FORCE, MAX_VEL } from \"../../constants\";\nimport { game, k } from \"../../kaplay\";\nimport { type Vec2, vec2 } from \"../../math/math\";\nimport { calcTransform } from \"../../math/various\";\nimport type { Collision, Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { PosComp } from \"../transform/pos\";\nimport type { AreaComp } from \"./area\";\n\n/**\n * The {@link body `body()`} component.\n *\n * @group Component Types\n */\nexport interface BodyComp extends Comp {\n    /**\n     * Object current velocity.\n     *\n     * @since v3001.0\n     */\n    vel: Vec2;\n    /**\n     * How much velocity decays (velocity *= (1 - drag) every frame).\n     *\n     * @since v3001.0\n     */\n    drag: number;\n    /**\n     * If object is static, won't move, and all non static objects won't move past it.\n     */\n    isStatic: boolean;\n    /**\n     * Initial speed in pixels per second for jump().\n     */\n    jumpForce: number;\n    /**\n     * Gravity multiplier.\n     */\n    gravityScale: number;\n    /**\n     * Mass of the body, decides how much a non-static body should move when resolves with another non-static body. (default 1).\n     *\n     * @since v3000.0\n     */\n    mass: number;\n    /**\n     * If object should move with moving platform (default true).\n     *\n     * @since v3000.0\n     */\n    stickToPlatform?: boolean;\n    /**\n     * Current platform landing on.\n     */\n    curPlatform(): GameObj | null;\n    /**\n     * If currently landing on a platform.\n     *\n     * @since v2000.1\n     */\n    isGrounded(): boolean;\n    /**\n     * If currently falling.\n     *\n     * @since v2000.1\n     */\n    isFalling(): boolean;\n    /**\n     * If currently rising.\n     *\n     * @since v3000.0\n     */\n    isJumping(): boolean;\n    /**\n     * Applies an impulse\n     * @param impulse The impulse vector, applied directly\n     */\n    applyImpulse(impulse: Vec2): void;\n    /**\n     * Applies a force\n     * @param force The force vector, applied after scaled by the inverse mass\n     */\n    addForce(force: Vec2): void;\n    /**\n     * Upward thrust.\n     */\n    jump(force?: number): void;\n    /**\n     * Register an event that runs when a collision is resolved.\n     *\n     * @since v3000.0\n     */\n    onPhysicsResolve(action: (col: Collision) => void): KEventController;\n    /**\n     * Register an event that runs before a collision would be resolved.\n     *\n     * @since v3000.0\n     */\n    onBeforePhysicsResolve(action: (col: Collision) => void): KEventController;\n    /**\n     * Register an event that runs when the object is grounded.\n     *\n     * @since v2000.1\n     */\n    onGround(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object starts falling.\n     *\n     * @since v2000.1\n     */\n    onFall(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object falls off platform.\n     *\n     * @since v3000.0\n     */\n    onFallOff(action: () => void): KEventController;\n    /**\n     * Register an event that runs when the object bumps into something on the head.\n     *\n     * @since v2000.1\n     */\n    onHeadbutt(action: () => void): KEventController;\n    /**\n     * Register an event that runs when an object lands on this object.\n     *\n     * @since v3001.0\n     */\n    onLand(action: (obj: GameObj) => void): KEventController;\n    /**\n     * Register an event that runs when the object is bumped by another object head.\n     */\n    onHeadbutted(action: (obj: GameObj) => void): KEventController;\n}\n\n/**\n * Options for the {@link body `body()`} component.\n *\n * @group Component Types\n */\nexport interface BodyCompOpt {\n    /**\n     * How much velocity decays (velocity *= (1 - drag) every frame).\n     *\n     * @since v3001.0\n     */\n    drag?: number;\n    /**\n     * Initial speed in pixels per second for jump().\n     */\n    jumpForce?: number;\n    /**\n     * Maximum velocity when falling.\n     */\n    maxVelocity?: number;\n    /**\n     * Gravity multiplier.\n     */\n    gravityScale?: number;\n    /**\n     * If object is static, won't move, and all non static objects won't move past it.\n     *\n     * @since v3000.0\n     */\n    isStatic?: boolean;\n    /**\n     * If object should move with moving platform (default true).\n     *\n     * @since v3000.0\n     */\n    stickToPlatform?: boolean;\n    /**\n     * Mass of the body, decides how much a non-static body should move when resolves with another non-static body. (default 1).\n     *\n     * @since v3000.0\n     */\n    mass?: number;\n}\n\nexport function body(opt: BodyCompOpt = {}): BodyComp {\n    let curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null;\n    let lastPlatformPos: null | Vec2 = null;\n    let willFall = false;\n    const acc = vec2(0);\n    let prevPhysicsPos: Vec2 | null = null;\n    let nextPhysicsPos: Vec2 | null = null;\n    let prevDrawPos: Vec2;\n\n    return {\n        id: \"body\",\n        require: [\"pos\"],\n        vel: vec2(0),\n        drag: opt.drag ?? 0,\n        jumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n        gravityScale: opt.gravityScale ?? 1,\n        isStatic: opt.isStatic ?? false,\n        // TODO: prefer density * area\n        mass: opt.mass ?? 1,\n        add(this: GameObj<PosComp | BodyComp | AreaComp>) {\n            prevPhysicsPos = this.pos.clone();\n            nextPhysicsPos = this.pos.clone();\n            prevDrawPos = this.pos.clone();\n            if (this.mass === 0) {\n                throw new Error(\"Can't set body mass to 0\");\n            }\n\n            if (this.is(\"area\")) {\n                // static vs static: don't resolve\n                // static vs non-static: always resolve non-static\n                // non-static vs non-static: resolve the first one\n                this.onCollideUpdate(\n                    (other, col) => {\n                        if (!col) return;\n                        if (!other.is(\"body\")) return;\n                        if (col.resolved) return;\n\n                        this.trigger(\"beforePhysicsResolve\", col);\n                        const rcol = col.reverse();\n                        other.trigger(\"beforePhysicsResolve\", rcol);\n\n                        // user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n                        if (col.resolved || rcol.resolved) {\n                            return;\n                        }\n\n                        if (this.isStatic && other.isStatic) {\n                            return;\n                        }\n                        else if (!this.isStatic && !other.isStatic) {\n                            // TODO: update all children transform?\n                            const tmass = this.mass + other.mass;\n                            this.pos = this.pos.add(\n                                col.displacement.scale(other.mass / tmass),\n                            );\n                            other.pos = other.pos.add(\n                                col.displacement.scale(-this.mass / tmass),\n                            );\n                            this.transform = calcTransform(this);\n                            other.transform = calcTransform(other);\n                        }\n                        else {\n                            // if one is static and on is not, resolve the non static one\n                            const col2 = (!this.isStatic && other.isStatic)\n                                ? col\n                                : col.reverse();\n                            col2.source.pos = col2.source.pos.add(\n                                col2.displacement,\n                            );\n                            col2.source.transform = calcTransform(\n                                col2.source,\n                            );\n                        }\n\n                        col.resolved = true;\n                        this.trigger(\"physicsResolve\", col);\n                        other.trigger(\"physicsResolve\", col.reverse());\n                    },\n                );\n\n                this.onPhysicsResolve((col) => {\n                    if (game.gravity) {\n                        if (col.isBottom() && this.isFalling()) {\n                            this.vel = this.vel.reject(\n                                game.gravity.unit(),\n                            );\n                            curPlatform = col.target as GameObj<\n                                PosComp | BodyComp | AreaComp\n                            >;\n                            lastPlatformPos = col.target.pos;\n                            if (willFall) {\n                                willFall = false;\n                            }\n                            else {\n                                this.trigger(\"ground\", curPlatform);\n                                col.target.trigger(\"land\", this);\n                            }\n                        }\n                        else if (col.isTop() && this.isJumping()) {\n                            this.vel = this.vel.reject(\n                                game.gravity.unit(),\n                            );\n                            this.trigger(\"headbutt\", col.target);\n                            col.target.trigger(\"headbutted\", this);\n                        }\n                    }\n                });\n            }\n        },\n\n        update(this: GameObj<PosComp | BodyComp | AreaComp>) {\n            if (curPlatform) {\n                if (\n                    // TODO: this prevents from falling when on edge\n                    !this.isColliding(curPlatform)\n                    || !curPlatform.exists()\n                    || !curPlatform.is(\"body\")\n                ) {\n                    willFall = true;\n                }\n                else {\n                    if (\n                        lastPlatformPos\n                        && !curPlatform.pos.eq(lastPlatformPos)\n                        && opt.stickToPlatform !== false\n                    ) {\n                        this.moveBy(\n                            curPlatform.pos.sub(lastPlatformPos),\n                        );\n                    }\n                    lastPlatformPos = curPlatform.pos;\n                }\n            }\n\n            const dt = k.restDt();\n            if (dt) {\n                // Check if no external changes were made\n                if (this.pos.eq(prevDrawPos)) {\n                    // Interpolate physics steps\n                    this.pos = k.lerp(\n                        prevPhysicsPos!,\n                        nextPhysicsPos!,\n                        dt / k.fixedDt(),\n                    );\n                    // Copy to check for changes\n                    prevDrawPos = this.pos.clone();\n                }\n            }\n        },\n\n        fixedUpdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n            // If we were interpolating, and the position wasn't set manually, reset to last physics position\n            if (prevPhysicsPos) {\n                if (this.pos.eq(prevDrawPos)) {\n                    this.pos = prevPhysicsPos;\n                }\n                prevPhysicsPos = null;\n            }\n\n            if (game.gravity && !this.isStatic) {\n                if (willFall) {\n                    curPlatform = null;\n                    lastPlatformPos = null;\n                    this.trigger(\"fallOff\");\n                    willFall = false;\n                }\n\n                let addGravity = true;\n\n                if (curPlatform) {\n                    addGravity = false;\n                }\n\n                if (addGravity) {\n                    const prevVel = this.vel.clone();\n\n                    // Apply gravity\n                    this.vel = this.vel.add(\n                        game.gravity.scale(this.gravityScale * k.dt()),\n                    );\n\n                    // Clamp velocity\n                    const maxVel = opt.maxVelocity ?? MAX_VEL;\n                    if (this.vel.slen() > maxVel * maxVel) {\n                        this.vel = this.vel.unit().scale(maxVel);\n                    }\n\n                    if (\n                        prevVel.dot(game.gravity) < 0\n                        && this.vel.dot(game.gravity) >= 0\n                    ) {\n                        this.trigger(\"fall\");\n                    }\n                }\n            }\n\n            this.vel.x += acc.x * k.dt();\n            this.vel.y += acc.y * k.dt();\n\n            this.vel.x *= 1 - this.drag * k.dt();\n            this.vel.y *= 1 - this.drag * k.dt();\n\n            this.move(this.vel);\n\n            const dt = k.restDt();\n            if (dt) {\n                // Save this position as previous\n                prevPhysicsPos = this.pos.clone();\n                // Calculate next (future) position\n                const nextVel = this.vel.add(acc.scale(k.dt()));\n                nextPhysicsPos = this.pos.add(nextVel.scale(k.dt()));\n                // Copy to check for changes\n                prevDrawPos = this.pos.clone();\n            }\n\n            acc.x = 0;\n            acc.y = 0;\n        },\n\n        onPhysicsResolve(this: GameObj, action) {\n            return this.on(\"physicsResolve\", action);\n        },\n\n        onBeforePhysicsResolve(this: GameObj, action) {\n            return this.on(\"beforePhysicsResolve\", action);\n        },\n\n        curPlatform(): GameObj | null {\n            return curPlatform;\n        },\n\n        isGrounded() {\n            return curPlatform !== null;\n        },\n\n        isFalling(): boolean {\n            return this.vel.dot(k.getGravityDirection()) > 0;\n        },\n\n        isJumping(): boolean {\n            return this.vel.dot(k.getGravityDirection()) < 0;\n        },\n\n        applyImpulse(impulse: Vec2) {\n            this.vel = this.vel.add(impulse);\n        },\n\n        addForce(force: Vec2) {\n            acc.x += force.x / this.mass;\n            acc.y += force.y / this.mass;\n        },\n\n        jump(force: number) {\n            curPlatform = null;\n            lastPlatformPos = null;\n            this.vel = k.getGravityDirection().scale(\n                -force || -this.jumpForce,\n            );\n        },\n\n        onGround(this: GameObj, action: () => void): KEventController {\n            return this.on(\"ground\", action);\n        },\n\n        onFall(this: GameObj, action: () => void): KEventController {\n            return this.on(\"fall\", action);\n        },\n\n        onFallOff(this: GameObj, action: () => void): KEventController {\n            return this.on(\"fallOff\", action);\n        },\n\n        onHeadbutt(this: GameObj, action: () => void): KEventController {\n            return this.on(\"headbutt\", action);\n        },\n\n        onLand(this: GameObj, action: (obj: GameObj) => void) {\n            return this.on(\"land\", action);\n        },\n\n        onHeadbutted(this: GameObj, action: (obj: GameObj) => void) {\n            return this.on(\"headbutted\", action);\n        },\n\n        inspect() {\n            return `gravityScale: ${this.gravityScale}x`;\n        },\n    };\n}\n", "import type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { BodyComp } from \"./body\";\n\n/**\n * The {@link doubleJump `doubleJump()`} component.\n *\n * @group Component Types\n */\nexport interface DoubleJumpComp extends Comp {\n    /**\n     * Number of jumps allowed.\n     */\n    numJumps: number;\n    /**\n     * Performs double jump (the initial jump only happens if player is grounded).\n     */\n    doubleJump(force?: number): void;\n    /**\n     * Register an event that runs when the object performs the second jump when double jumping.\n     */\n    onDoubleJump(action: () => void): KEventController;\n}\n\nexport function doubleJump(numJumps: number = 2): DoubleJumpComp {\n    let jumpsLeft = numJumps;\n    return {\n        id: \"doubleJump\",\n        require: [\"body\"],\n        numJumps: numJumps,\n        add(this: GameObj<BodyComp | DoubleJumpComp>) {\n            this.onGround(() => {\n                jumpsLeft = this.numJumps;\n            });\n        },\n        doubleJump(\n            this: GameObj<BodyComp | DoubleJumpComp>,\n            force?: number,\n        ) {\n            if (jumpsLeft <= 0) {\n                return;\n            }\n            if (jumpsLeft < this.numJumps) {\n                this.trigger(\"doubleJump\");\n            }\n            jumpsLeft--;\n            this.jump(force);\n        },\n        onDoubleJump(this: GameObj, action: () => void): KEventController {\n            return this.on(\"doubleJump\", action);\n        },\n        inspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n            return `jumpsLeft: ${jumpsLeft}`;\n        },\n    };\n}\n", "import { getGravity, getGravityDirection } from \"../../game\";\nimport { width } from \"../../gfx\";\nimport { debug } from \"../../kaplay\";\nimport { Polygon, Vec2, vec2 } from \"../../math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { PosComp } from \"../transform\";\nimport type { AreaComp } from \"./area\";\nimport type { BodyComp } from \"./body\";\n\nexport type SurfaceEffectorCompOpt = {\n    speed: number;\n    speedVariation?: number;\n    forceScale?: number;\n};\n\nexport interface SurfaceEffectorComp extends Comp {\n    speed: number;\n    speedVariation: number;\n    forceScale: number;\n}\n\nexport function surfaceEffector(\n    opts: SurfaceEffectorCompOpt,\n): SurfaceEffectorComp {\n    return {\n        id: \"surfaceEffector\",\n        require: [\"area\"],\n        speed: opts.speed,\n        speedVariation: opts.speedVariation ?? 0,\n        forceScale: opts.speedVariation ?? 0.9,\n        add(this: GameObj<AreaComp | SurfaceEffectorComp>) {\n            this.onCollideUpdate((obj, col) => {\n                const dir = col?.normal.normal();\n                const currentVel = obj.vel.project(dir);\n                const wantedVel = dir?.scale(this.speed);\n                const force = wantedVel?.sub(currentVel);\n                obj.addForce(force?.scale(obj.mass * this.forceScale));\n            });\n        },\n    };\n}\n\nexport type AreaEffectorCompOpt = {\n    useGlobalAngle?: boolean;\n    forceAngle: number;\n    forceMagnitude: number;\n    forceVariation?: number;\n    linearDrag?: number;\n    // angularDrag?: number;\n};\n\nexport interface AreaEffectorComp extends Comp {\n    useGlobalAngle: boolean;\n    forceAngle: number;\n    forceMagnitude: number;\n    forceVariation: number;\n    linearDrag?: number;\n    // angularDrag?: number;\n}\n\nexport function areaEffector(opts: AreaEffectorCompOpt): AreaEffectorComp {\n    return {\n        id: \"areaEffector\",\n        require: [\"area\"],\n        useGlobalAngle: opts.useGlobalAngle || false,\n        forceAngle: opts.forceAngle,\n        forceMagnitude: opts.forceMagnitude,\n        forceVariation: opts.forceVariation ?? 0,\n        linearDrag: opts.linearDrag ?? 0,\n        // angularDrag: opts.angularDrag ?? 0,\n        add(this: GameObj<AreaComp | AreaEffectorComp>) {\n            this.onCollideUpdate((obj, col) => {\n                const dir = Vec2.fromAngle(this.forceAngle);\n                const force = dir.scale(this.forceMagnitude);\n                obj.addForce(force);\n                if (this.linearDrag) {\n                    obj.addForce(obj.vel.scale(-this.linearDrag));\n                }\n            });\n        },\n    };\n}\n\nexport type ForceMode = \"constant\" | \"inverseLinear\" | \"inverseSquared\";\n\nexport type PointEffectorCompOpt = {\n    forceMagnitude: number;\n    forceVariation: number;\n    distanceScale?: number;\n    forceMode?: ForceMode;\n    linearDrag?: number;\n    // angularDrag?: number;\n};\n\nexport interface PointEffectorComp extends Comp {\n    forceMagnitude: number;\n    forceVariation: number;\n    distanceScale: number;\n    forceMode: ForceMode;\n    linearDrag: number;\n    // angularDrag: number;\n}\n\nexport function pointEffector(opts: PointEffectorCompOpt): PointEffectorComp {\n    return {\n        id: \"pointEffector\",\n        require: [\"area\", \"pos\"],\n        forceMagnitude: opts.forceMagnitude,\n        forceVariation: opts.forceVariation ?? 0,\n        distanceScale: opts.distanceScale ?? 1,\n        forceMode: opts.forceMode || \"inverseLinear\",\n        linearDrag: opts.linearDrag ?? 0,\n        // angularDrag: opts.angularDrag ?? 0,\n        add(this: GameObj<PointEffectorComp | AreaComp | PosComp>) {\n            this.onCollideUpdate((obj, col) => {\n                const dir = this.pos.sub(obj.pos);\n                const length = dir.len();\n                const distance = length * this.distanceScale / 10;\n                const forceScale = this.forceMode === \"constant\"\n                    ? 1\n                    : this.forceMode === \"inverseLinear\"\n                    ? 1 / distance\n                    : 1 / distance ** 2;\n                const force = dir.scale(\n                    this.forceMagnitude * forceScale / length,\n                );\n                obj.addForce(force);\n                if (this.linearDrag) {\n                    obj.addForce(obj.vel.scale(-this.linearDrag));\n                }\n            });\n        },\n    };\n}\n\nexport type ConstantForceCompOpt = {\n    force?: Vec2;\n};\n\nexport interface ConstantForceComp extends Comp {\n    force?: Vec2;\n}\n\nexport function constantForce(opts: ConstantForceCompOpt): ConstantForceComp {\n    return {\n        id: \"constantForce\",\n        require: [\"body\"],\n        force: opts.force,\n        update(this: GameObj<BodyComp | ConstantForceComp>) {\n            if (this.force) {\n                this.addForce(this.force);\n            }\n        },\n    };\n}\n\nexport type PlatformEffectorCompOpt = {\n    surfaceArc?: number;\n    useOneWay?: boolean;\n};\n\nexport interface PlatformEffectorComp extends Comp {\n    surfaceArc: number;\n    useOneWay: boolean;\n}\n\nexport function platformEffector(\n    opt: PlatformEffectorCompOpt,\n): PlatformEffectorComp {\n    return {\n        id: \"platformEffector\",\n        require: [\"area\", \"body\"],\n        surfaceArc: opt.surfaceArc ?? 180,\n        useOneWay: opt.useOneWay ?? false,\n        add(this: GameObj<BodyComp | AreaComp | PlatformEffectorComp>) {\n            this.onBeforePhysicsResolve(collision => {\n                const v = collision.target.vel;\n                const up = getGravityDirection().scale(-1);\n                const angle = up.angleBetween(v);\n                if (Math.abs(angle) > this.surfaceArc / 2) {\n                    collision.preventResolution();\n                }\n            });\n        },\n    };\n}\n\nexport type BuoyancyEffectorCompOpt = {\n    surfaceLevel: number;\n    density?: number;\n    linearDrag?: number;\n    angularDrag?: number;\n    flowAngle?: number;\n    flowMagnitude?: number;\n    flowVariation?: number;\n};\n\nexport interface BuoyancyEffectorComp extends Comp {\n    surfaceLevel: number;\n    density: number;\n    linearDrag: number;\n    angularDrag: number;\n    flowAngle: number;\n    flowMagnitude: number;\n    flowVariation: number;\n    applyBuoyancy(body: GameObj<BodyComp>, submergedArea: Polygon): void;\n    applyDrag(body: GameObj<BodyComp>, submergedArea: Polygon): void;\n}\n\nexport function buoyancyEffector(\n    opts: BuoyancyEffectorCompOpt,\n): BuoyancyEffectorComp {\n    return {\n        id: \"buoyancyEffector\",\n        require: [\"area\"],\n        surfaceLevel: opts.surfaceLevel,\n        density: opts.density ?? 1,\n        linearDrag: opts.linearDrag ?? 1,\n        angularDrag: opts.angularDrag ?? 0.2,\n        flowAngle: opts.flowAngle ?? 0,\n        flowMagnitude: opts.flowMagnitude ?? 0,\n        flowVariation: opts.flowVariation ?? 0,\n        add(this: GameObj<AreaComp | BuoyancyEffectorComp>) {\n            this.onCollideUpdate((obj, col) => {\n                const o = obj as GameObj<BodyComp | AreaComp>;\n                const polygon = o.worldArea();\n                const [submergedArea, _] = polygon.cut(\n                    vec2(-100, this.surfaceLevel),\n                    vec2(100, this.surfaceLevel),\n                );\n\n                if (submergedArea) {\n                    this.applyBuoyancy(o, submergedArea);\n                    this.applyDrag(o, submergedArea);\n                }\n\n                if (this.flowMagnitude) {\n                    o.addForce(\n                        Vec2.fromAngle(this.flowAngle).scale(\n                            this.flowMagnitude,\n                        ),\n                    );\n                }\n            });\n        },\n        applyBuoyancy(body: GameObj<BodyComp>, submergedArea: Polygon) {\n            const displacedMass = this.density * submergedArea.area();\n            const buoyancyForce = vec2(0, 1).scale(-displacedMass);\n            // console.log(\"buoyancyForce\", buoyancyForce)\n            // TODO: Should be applied to the center of submergedArea, but since there is no torque yet, this is OK\n            body.addForce(buoyancyForce);\n        },\n        applyDrag(body: GameObj<BodyComp>, submergedArea: Polygon) {\n            const velocity = body.vel;\n            const dragMagnitude = this.density * this.linearDrag;\n            const dragForce = velocity.scale(-dragMagnitude);\n            // console.log(\"dragForce\", dragForce)\n            // TODO: Should be applied to the center of submergedArea, but since there is no torque yet, this is OK\n            body.addForce(dragForce);\n            // const angularDrag = submergedArea.area() * -body.angularVelocity * this.angularDrag;\n            // object.addTorque(angularDrag);\n        },\n    };\n}\n", "import type { Vec2 } from \"../../math/math\";\nimport type { Anchor, Comp } from \"../../types\";\n\n/**\n * The {@link anchor `anchor()`} component.\n *\n * @group Component Types\n */\nexport interface AnchorComp extends Comp {\n    /**\n     * Anchor point for render.\n     */\n    anchor: Anchor | Vec2;\n}\n\nexport function anchor(o: Anchor | Vec2): AnchorComp {\n    if (!o) {\n        throw new Error(\"Please define an anchor\");\n    }\n    return {\n        id: \"anchor\",\n        anchor: o,\n        inspect() {\n            if (typeof this.anchor === \"string\") {\n                return `anchor: ` + this.anchor;\n            }\n            else {\n                return `anchor: ` + this.anchor.toString();\n            }\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link fixed `fixed()`} component.\n *\n * @group Component Types\n */\nexport interface FixedComp extends Comp {\n    /**\n     * If the obj is unaffected by camera\n     */\n    fixed: boolean;\n}\n\nexport function fixed(): FixedComp {\n    return {\n        id: \"fixed\",\n        fixed: true,\n    };\n}\n", "import { Vec2, vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { PosComp } from \"./pos\";\n\n/**\n * The {@link follow `follow()`} component.\n *\n * @group Component Types\n */\nexport interface FollowComp extends Comp {\n    follow: {\n        obj: GameObj;\n        offset: Vec2;\n    };\n}\n\nexport function follow(obj: GameObj, offset?: Vec2): FollowComp {\n    return {\n        id: \"follow\",\n        require: [\"pos\"],\n        follow: {\n            obj: obj,\n            offset: offset ?? vec2(0),\n        },\n        add(this: GameObj<FollowComp | PosComp>) {\n            if (obj.exists()) {\n                this.pos = this.follow.obj.pos.add(this.follow.offset);\n            }\n        },\n        update(this: GameObj<FollowComp | PosComp>) {\n            if (obj.exists()) {\n                this.pos = this.follow.obj.pos.add(this.follow.offset);\n            }\n        },\n    };\n}\n", "import { game } from \"../../kaplay\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link layer `layer()`} component.\n *\n * @group Component Types\n */\nexport interface LayerComp extends Comp {\n    /**\n     * Get the index of the current layer the object is assigned to.\n     *\n     * @returns The index of the layer the object is assigned to, or `null` if the layer does not exist.\n     */\n    get layerIndex(): number | null;\n    /**\n     * Get the name of the current layer the object is assigned to.\n     *\n     * @returns The name of the layer the object is assigned to.\n     */\n    get layer(): string | null;\n    /**\n     * Set the name of the layer the object should be assigned to.\n     */\n    set layer(name: string);\n}\n\nexport function layer(layer: string): LayerComp {\n    let _layerIndex = game.layers?.indexOf(layer);\n\n    return {\n        id: \"layer\",\n        get layerIndex() {\n            return _layerIndex ?? null;\n        },\n        get layer(): string | null {\n            if (!_layerIndex) return null;\n\n            return game.layers?.[_layerIndex] ?? null;\n        },\n        set layer(value: string) {\n            _layerIndex = game.layers?.indexOf(value);\n\n            if (_layerIndex == -1) throw Error(\"Invalid layer name\");\n        },\n        inspect() {\n            return `layer: ${this.layer}`;\n        },\n    };\n}\n", "import { Vec2 } from \"../../math/math\";\nimport type { EmptyComp, GameObj } from \"../../types\";\nimport type { PosComp } from \"./pos\";\n\nexport function move(dir: number | Vec2, speed: number): EmptyComp {\n    const d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n    return {\n        id: \"move\",\n        require: [\"pos\"],\n        update(this: GameObj<PosComp>) {\n            this.move(d.scale(speed));\n        },\n    };\n}\n", "import { DEF_OFFSCREEN_DIS } from \"../../constants\";\nimport { k } from \"../../kaplay\";\nimport { Rect, vec2 } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { KEventController } from \"../../utils/\";\nimport type { PosComp } from \"./pos\";\n\n/**\n * The {@link offscreen `offscreen()`} component.\n *\n * @group Component Types\n */\nexport interface OffScreenComp extends Comp {\n    /**\n     * If object is currently out of view.\n     */\n    isOffScreen(): boolean;\n    /**\n     * Register an event that runs when object goes out of view.\n     */\n    onExitScreen(action: () => void): KEventController;\n    /**\n     * Register an event that runs when object enters view.\n     */\n    onEnterScreen(action: () => void): KEventController;\n}\n\n/**\n * Options for {@link offscreen `offscreen()`} component.\n *\n * @group Component Types\n */\nexport interface OffScreenCompOpt {\n    /**\n     * If hide object when out of view.\n     */\n    hide?: boolean;\n    /**\n     * If pause object when out of view.\n     */\n    pause?: boolean;\n    /**\n     * If destroy object when out of view.\n     */\n    destroy?: boolean;\n    /**\n     * The distance when out of view is triggered (default 200).\n     *\n     * @since v3000.0\n     */\n    distance?: number;\n}\n\nexport function offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n    const distance = opt.distance ?? DEF_OFFSCREEN_DIS;\n    let isOut = false;\n\n    return {\n        id: \"offscreen\",\n        require: [\"pos\"],\n        isOffScreen(this: GameObj<PosComp>): boolean {\n            const pos = this.screenPos();\n\n            // This is not possible, screenPos() without arguments returns the pos\n            if (!pos) return false;\n\n            const screenRect = new Rect(vec2(0), k.width(), k.height());\n            return !k.testRectPoint(screenRect, pos)\n                && screenRect.sdistToPoint(pos) > distance * distance;\n        },\n        onExitScreen(this: GameObj, action: () => void): KEventController {\n            return this.on(\"exitView\", action);\n        },\n        onEnterScreen(this: GameObj, action: () => void): KEventController {\n            return this.on(\"enterView\", action);\n        },\n        update(this: GameObj) {\n            if (this.isOffScreen()) {\n                if (!isOut) {\n                    this.trigger(\"exitView\");\n                    isOut = true;\n                }\n                if (opt.hide) this.hidden = true;\n                if (opt.pause) this.paused = true;\n                if (opt.destroy) this.destroy();\n            }\n            else {\n                if (isOut) {\n                    this.trigger(\"enterView\");\n                    isOut = false;\n                }\n                if (opt.hide) this.hidden = false;\n                if (opt.pause) this.paused = false;\n            }\n        },\n    };\n}\n", "import { isFixed } from \"../../game/utils\";\nimport { getViewportScale } from \"../../gfx\";\nimport { k } from \"../../kaplay\";\nimport { Vec2, vec2, type Vec2Args } from \"../../math/math\";\nimport type { Comp, GameObj } from \"../../types\";\nimport type { FixedComp } from \"./fixed\";\n\n/**\n * The {@link pos `pos()`} component.\n *\n * @group Component Types\n */\nexport interface PosComp extends Comp {\n    /**\n     * Object's current world position.\n     */\n    pos: Vec2;\n    /**\n     * Move how many pixels per second. If object is 'solid', it won't move into other 'solid' objects.\n     */\n    move(xVel: number, yVel: number): void;\n    move(vel: Vec2): void;\n    /**\n     * Move how many pixels, without multiplying dt, but still checking for 'solid'.\n     */\n    moveBy(dx: number, dy: number): void;\n    moveBy(d: Vec2): void;\n    /**\n     * Move to a spot with a speed (pixels per second), teleports if speed is not given.\n     */\n    moveTo(dest: Vec2, speed?: number): void;\n    moveTo(x: number, y: number, speed?: number): void;\n    /**\n     * Get the position of the object on the screen.\n     */\n    screenPos(): Vec2 | null;\n    /**\n     * Get the position of the object relative to the root.\n     */\n    worldPos(): Vec2 | null;\n    /**\n     * Transform a local point (relative to this) to a screen point (relative to the camera)\n     */\n    toScreen(this: GameObj<PosComp | FixedComp>, p: Vec2): Vec2;\n    /**\n     * Transform a local point (relative to this) to a world point (relative to the root)\n     * @since v3001.0\n     */\n    toWorld(this: GameObj<PosComp>, p: Vec2): Vec2;\n    /**\n     * Transform a screen point (relative to the camera) to a local point (relative to this)\n     * @since v3001.0\n     */\n    fromScreen(this: GameObj<PosComp | FixedComp>, p: Vec2): Vec2;\n    /**\n     * Transform a world point (relative to the root) to a local point (relative to this)\n     * @since v3001.0\n     */\n    fromWorld(this: GameObj<PosComp>, p: Vec2): Vec2;\n    /**\n     * Transform a point relative to this to a point relative to other\n     * @since v3001.0\n     */\n    toOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2): Vec2;\n    /**\n     * Transform a point relative to other to a point relative to this\n     * @since v3001.0\n     */\n    fromOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2): Vec2;\n}\n\nexport function pos(...args: Vec2Args): PosComp {\n    return {\n        id: \"pos\",\n        pos: vec2(...args),\n\n        moveBy(...args: Vec2Args) {\n            this.pos = this.pos.add(vec2(...args));\n        },\n\n        // move with velocity (pixels per second)\n        move(...args: Vec2Args) {\n            this.moveBy(vec2(...args).scale(k.dt()));\n        },\n\n        // move to a destination, with optional speed\n        // Adress all ts ignores\n        moveTo(...args) {\n            if (\n                typeof args[0] === \"number\" && typeof args[1] === \"number\"\n            ) {\n                // @ts-ignore Use overload functions here?\n                return this.moveTo(vec2(args[0], args[1]), args[2]);\n            }\n            const dest = args[0];\n            const speed = args[1];\n            if (speed === undefined) {\n                this.pos = vec2(dest);\n                return;\n            }\n            // @ts-ignore\n            const diff = dest.sub(this.pos);\n            if (diff.len() <= speed * k.dt()) {\n                this.pos = vec2(dest);\n                return;\n            }\n            this.move(diff.unit().scale(speed));\n        },\n\n        // Get the position of the object relative to the root\n        worldPos(this: GameObj<PosComp>, pos: Vec2 | null = null) {\n            if (pos) {\n                this.pos = this.pos.add(this.fromWorld(pos));\n                return null;\n            }\n            else {\n                return this.parent\n                    ? this.parent.transform.multVec2(this.pos)\n                    : this.pos;\n            }\n        },\n\n        // Transform a local point to a world point\n        toWorld(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return this.parent\n                ? this.parent.transform.multVec2(this.pos.add(p))\n                : this.pos.add(p);\n        },\n\n        // Transform a world point (relative to the root) to a local point (relative to this)\n        fromWorld(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return this.parent\n                ? this.parent.transform.invert().multVec2(p).sub(this.pos)\n                : p.sub(this.pos);\n        },\n\n        // Transform a screen point (relative to the camera) to a local point (relative to this)\n        screenPos(\n            this: GameObj<PosComp | FixedComp>,\n            pos: Vec2 | null = null,\n        ) {\n            if (pos) {\n                this.pos = this.pos.add(this.fromScreen(pos));\n                return null;\n            }\n            else {\n                const pos = this.worldPos();\n\n                // This is not really possible, because worldPos() will always return a value\n                // if it doesn't have arguments\n\n                // I left this like that for compatibility, maybe if it returns a value\n                // will break something?\n\n                if (!pos) {\n                    return null;\n                }\n\n                return isFixed(this)\n                    ? pos\n                    : k.toScreen(pos);\n            }\n        },\n\n        // Transform a local point (relative to this) to a screen point (relative to the camera)\n        toScreen(this: GameObj<PosComp | FixedComp>, p: Vec2): Vec2 {\n            const pos = this.toWorld(p);\n            return isFixed(this)\n                ? pos\n                : k.toScreen(pos);\n        },\n\n        // Transform a screen point (relative to the camera) to a local point (relative to this)\n        fromScreen(this: GameObj<PosComp>, p: Vec2): Vec2 {\n            return isFixed(this)\n                ? this.fromWorld(p)\n                : this.fromWorld(k.toWorld(p));\n        },\n\n        // Transform a point relative to this to a point relative to other\n        toOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2) {\n            return other.fromWorld(this.toWorld(p));\n        },\n\n        // Transform a point relative to other to a point relative to this\n        fromOther(this: GameObj<PosComp>, other: GameObj<PosComp>, p: Vec2) {\n            return other.toOther(this, p);\n        },\n\n        inspect() {\n            return `pos: (${Math.round(this.pos.x)}x, ${\n                Math.round(this.pos.y)\n            }y)`;\n        },\n\n        drawInspect() {\n            k.drawCircle({\n                color: k.rgb(255, 0, 0),\n                radius: 4 / getViewportScale(),\n            });\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link rotate `rotate()`} component.\n *\n * @group Component Types\n */\nexport interface RotateComp extends Comp {\n    /**\n     * Angle in degrees.\n     */\n    angle: number;\n    /**\n     * Rotate in degrees.\n     */\n    rotateBy(angle: number): void;\n    /**\n     * Rotate to a degree (like directly assign to .angle)\n     *\n     * @since v3000.0\n     */\n    rotateTo(s: number): void;\n}\n\nexport function rotate(r: number): RotateComp {\n    return {\n        id: \"rotate\",\n        angle: r ?? 0,\n        rotateBy(angle: number) {\n            this.angle += angle;\n        },\n        rotateTo(angle: number) {\n            this.angle = angle;\n        },\n        inspect() {\n            return `angle: ${Math.round(this.angle)}`;\n        },\n    };\n}\n", "import { Vec2, vec2, type Vec2Args } from \"../../math/math\";\nimport type { Comp } from \"../../types\";\n\n/**\n * The {@link scale `scale()`} component.\n *\n * @group Component Types\n */\nexport interface ScaleComp extends Comp {\n    /**\n     * The current scale of the object\n     *\n     * @returns The current scale of the object as a {@link Vec2 `Vec2`}\n     */\n    scale: Vec2;\n    /**\n     * Set the scale of the object to a number\n     */\n    scaleTo(s: number): void;\n    /**\n     * Set the scale of the object to a Vec2\n     */\n    scaleTo(s: Vec2): void;\n    /**\n     * Set the scale of the object to a number for x and y\n     */\n    scaleTo(sx: number, sy: number): void;\n    /**\n     * Scale the object by a number\n     */\n    scaleBy(s: number): void;\n    /**\n     * Scale the object by a Vec2\n     */\n    scaleBy(s: Vec2): void;\n    /**\n     * Scale the object by a number for x and y\n     */\n    scaleBy(sx: number, sy: number): void;\n}\n\nexport function scale(...args: Vec2Args): ScaleComp {\n    if (args.length === 0) {\n        return scale(1);\n    }\n\n    let _scale = vec2(...args);\n\n    return {\n        id: \"scale\",\n        set scale(value: Vec2) {\n            if (value instanceof Vec2 === false) {\n                throw Error(\n                    \"The scale property on scale is a vector. Use scaleTo or scaleBy to set the scale with a number.\",\n                );\n            }\n\n            _scale = vec2(value);\n        },\n        get scale() {\n            return _scale;\n        },\n        scaleTo(...args: Vec2Args) {\n            _scale = vec2(...args);\n        },\n        scaleBy(...args: Vec2Args) {\n            _scale = _scale.scale(vec2(...args));\n        },\n        inspect() {\n            if (_scale.x == _scale.y) {\n                return `scale: ${_scale.x.toFixed(1)}x`;\n            }\n            else {return `scale: (${_scale.x.toFixed(1)}x, ${\n                    _scale.y.toFixed(1)\n                }y)`;}\n        },\n    };\n}\n", "import type { Comp } from \"../../types\";\n\n/**\n * The {@link z `z()`} component.\n *\n * @group Component Types\n */\nexport interface ZComp extends Comp {\n    /**\n     * Defines the z-index of this game obj\n     */\n    z: number;\n}\n\nexport function z(z: number): ZComp {\n    return {\n        id: \"z\",\n        z: z,\n        inspect() {\n            return `z: ${this.z}`;\n        },\n    };\n}\n", "const VERSION = \"3001.0.0\";\n\nimport { type App, type ButtonsDef, initApp } from \"./app\";\n\nimport {\n    type AppGfxCtx,\n    center,\n    drawBezier,\n    drawCircle,\n    drawCurve,\n    drawDebug,\n    drawEllipse,\n    drawFormattedText,\n    drawFrame,\n    drawLine,\n    drawLines,\n    drawLoadScreen,\n    drawMasked,\n    drawPolygon,\n    drawRect,\n    drawSprite,\n    drawSubtracted,\n    drawText,\n    drawTexture,\n    drawTriangle,\n    drawUnscaled,\n    drawUVQuad,\n    flush,\n    formatText,\n    FrameBuffer,\n    getBackground,\n    height,\n    initAppGfx,\n    initGfx,\n    mousePos,\n    popTransform,\n    pushMatrix,\n    pushRotate,\n    pushScale,\n    pushTransform,\n    pushTranslate,\n    setBackground,\n    updateViewport,\n    width,\n} from \"./gfx\";\n\nimport {\n    Asset,\n    getAsset,\n    getBitmapFont,\n    getFont,\n    getShader,\n    getSound,\n    getSprite,\n    initAssets,\n    load,\n    loadAseprite,\n    loadBean,\n    loadBitmapFont,\n    loadFont,\n    loadJSON,\n    loadMusic,\n    loadPedit,\n    loadProgress,\n    loadRoot,\n    loadShader,\n    loadShaderURL,\n    loadSound,\n    loadSprite,\n    loadSpriteAtlas,\n    SoundData,\n    SpriteData,\n    type Uniform,\n} from \"./assets\";\n\nimport {\n    ASCII_CHARS,\n    BG_GRID_SIZE,\n    DBG_FONT,\n    DEF_HASH_GRID_SIZE,\n    LOG_MAX,\n    MAX_TEXT_CACHE_SIZE,\n} from \"./constants\";\n\nimport {\n    bezier,\n    cardinal,\n    catmullRom,\n    chance,\n    choose,\n    chooseMultiple,\n    Circle,\n    clamp,\n    Color,\n    curveLengthApproximation,\n    deg2rad,\n    easingCubicBezier,\n    easingLinear,\n    easingSteps,\n    Ellipse,\n    evaluateBezier,\n    evaluateBezierFirstDerivative,\n    evaluateBezierSecondDerivative,\n    evaluateCatmullRom,\n    evaluateCatmullRomFirstDerivative,\n    evaluateQuadratic,\n    evaluateQuadraticFirstDerivative,\n    evaluateQuadraticSecondDerivative,\n    hermite,\n    hsl2rgb,\n    isConvex,\n    kochanekBartels,\n    lerp,\n    Line,\n    map,\n    mapc,\n    Mat4,\n    NavMesh,\n    normalizedCurve,\n    Point,\n    Polygon,\n    Quad,\n    quad,\n    rad2deg,\n    rand,\n    randi,\n    randSeed,\n    Rect,\n    rgb,\n    RNG,\n    sat,\n    shuffle,\n    testCirclePolygon,\n    testLineCircle,\n    testLineLine,\n    testLinePoint,\n    testRectLine,\n    testRectPoint,\n    testRectRect,\n    triangulate,\n    Vec2,\n    vec2,\n    wave,\n} from \"./math\";\n\nimport easings from \"./math/easings\";\n\nimport {\n    download,\n    downloadBlob,\n    downloadJSON,\n    downloadText,\n    KEvent,\n    KEventController,\n    KEventHandler,\n} from \"./utils\";\n\nimport type {\n    Debug,\n    GameObj,\n    KAPLAYCtx,\n    KAPLAYOpt,\n    KAPLAYPlugin,\n    MergePlugins,\n    PluginList,\n    Recording,\n} from \"./types\";\n\nimport {\n    agent,\n    anchor,\n    animate,\n    area,\n    type AreaComp,\n    areaEffector,\n    body,\n    buoyancyEffector,\n    circle,\n    color,\n    constantForce,\n    doubleJump,\n    drawon,\n    fadeIn,\n    fixed,\n    follow,\n    health,\n    layer,\n    lifespan,\n    mask,\n    move,\n    named,\n    navigation,\n    offscreen,\n    opacity,\n    outline,\n    particles,\n    patrol,\n    pointEffector,\n    polygon,\n    pos,\n    raycast,\n    rect,\n    rotate,\n    scale,\n    sentry,\n    serializeAnimation,\n    shader,\n    sprite,\n    state,\n    stay,\n    surfaceEffector,\n    text,\n    textInput,\n    tile,\n    timer,\n    usesArea,\n    uvquad,\n    z,\n} from \"./components\";\n\nimport { dt, fixedDt, restDt } from \"./app\";\nimport { type AudioCtx, burp, initAudio, play, volume } from \"./audio\";\n\nimport {\n    addKaboom,\n    addLevel,\n    camFlash,\n    camPos,\n    camRot,\n    camScale,\n    camTransform,\n    destroy,\n    type Game,\n    getGravity,\n    getGravityDirection,\n    getSceneName,\n    getTreeRoot,\n    go,\n    initEvents,\n    initGame,\n    layers,\n    make,\n    on,\n    onAdd,\n    onClick,\n    onCollide,\n    onCollideEnd,\n    onCollideUpdate,\n    onDestroy,\n    onDraw,\n    onError,\n    onFixedUpdate,\n    onHover,\n    onHoverEnd,\n    onHoverUpdate,\n    onLoad,\n    onLoading,\n    onResize,\n    onSceneLeave,\n    onUpdate,\n    scene,\n    setGravity,\n    setGravityDirection,\n    shake,\n    toScreen,\n    toWorld,\n} from \"./game\";\n\nimport boomSpriteSrc from \"./kassets/boom.png\";\nimport kaSpriteSrc from \"./kassets/ka.png\";\n\nexport let k: KAPLAYCtx;\nexport let globalOpt: KAPLAYOpt;\nexport let gfx: AppGfxCtx;\nexport let game: Game;\nexport let app: App;\nexport let assets: ReturnType<typeof initAssets>;\nexport let fontCacheCanvas: HTMLCanvasElement | null;\nexport let fontCacheC2d: CanvasRenderingContext2D | null;\nexport let debug: Debug;\nexport let audio: AudioCtx;\nexport let pixelDensity: number;\nexport let canvas: HTMLCanvasElement;\nexport let gscale: number;\nexport let kaSprite: Asset<SpriteData>;\nexport let boomSprite: Asset<SpriteData>;\n\n/**\n * Initialize KAPLAY context. The starting point of all KAPLAY games.\n *\n * @example\n * ```js\n * // Start KAPLAY with default options (will create a fullscreen canvas under <body>)\n * kaplay()\n *\n * // Init with some options\n * kaplay({\n *     width: 320,\n *     height: 240,\n *     font: \"sans-serif\",\n *     canvas: document.querySelector(\"#mycanvas\"),\n *     background: [ 0, 0, 255, ],\n * })\n *\n * // All KAPLAY functions are imported to global after calling kaplay()\n * add()\n * onUpdate()\n * onKeyPress()\n * vec2()\n *\n * // If you want to prevent KAPLAY from importing all functions to global and use a context handle for all KAPLAY functions\n * const k = kaplay({ global: false })\n *\n * k.add(...)\n * k.onUpdate(...)\n * k.onKeyPress(...)\n * k.vec2(...)\n * ```\n *\n * @group Start\n */\nconst kaplay = <\n    TPlugins extends PluginList<unknown> = [undefined],\n    TButtons extends ButtonsDef = {},\n    TButtonsName extends string = keyof TButtons & string,\n>(\n    gopt: KAPLAYOpt<TPlugins, TButtons> = {},\n): TPlugins extends [undefined] ? KAPLAYCtx<TButtons, TButtonsName>\n    : KAPLAYCtx<TButtons, TButtonsName> & MergePlugins<TPlugins> =>\n{\n    globalOpt = gopt;\n    const root = gopt.root ?? document.body;\n\n    // if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n    if (root === document.body) {\n        document.body.style[\"width\"] = \"100%\";\n        document.body.style[\"height\"] = \"100%\";\n        document.body.style[\"margin\"] = \"0px\";\n        document.documentElement.style[\"width\"] = \"100%\";\n        document.documentElement.style[\"height\"] = \"100%\";\n    }\n\n    // create a <canvas> if user didn't provide one\n    canvas = gopt.canvas\n        ?? root.appendChild(document.createElement(\"canvas\"));\n\n    // global pixel scale\n    gscale = gopt.scale ?? 1;\n    const fixedSize = gopt.width && gopt.height && !gopt.stretch\n        && !gopt.letterbox;\n\n    // adjust canvas size according to user size / viewport settings\n    if (fixedSize) {\n        canvas.width = gopt.width! * gscale;\n        canvas.height = gopt.height! * gscale;\n    }\n    else {\n        canvas.width = canvas.parentElement!.offsetWidth;\n        canvas.height = canvas.parentElement!.offsetHeight;\n    }\n\n    // canvas css styles\n    const styles = [\n        \"outline: none\",\n        \"cursor: default\",\n    ];\n\n    if (fixedSize) {\n        const cw = canvas.width;\n        const ch = canvas.height;\n        styles.push(`width: ${cw}px`);\n        styles.push(`height: ${ch}px`);\n    }\n    else {\n        styles.push(\"width: 100%\");\n        styles.push(\"height: 100%\");\n    }\n\n    if (gopt.crisp) {\n        // chrome only supports pixelated and firefox only supports crisp-edges\n        styles.push(\"image-rendering: pixelated\");\n        styles.push(\"image-rendering: crisp-edges\");\n    }\n\n    canvas.style.cssText = styles.join(\";\");\n\n    pixelDensity = gopt.pixelDensity || window.devicePixelRatio;\n\n    canvas.width *= pixelDensity;\n    canvas.height *= pixelDensity;\n    // make canvas focusable\n    canvas.tabIndex = 0;\n\n    fontCacheCanvas = document.createElement(\"canvas\");\n    fontCacheCanvas.width = MAX_TEXT_CACHE_SIZE;\n    fontCacheCanvas.height = MAX_TEXT_CACHE_SIZE;\n    fontCacheC2d = fontCacheCanvas.getContext(\"2d\", {\n        willReadFrequently: true,\n    });\n\n    app = initApp({\n        canvas: canvas,\n        touchToMouse: gopt.touchToMouse,\n        gamepads: gopt.gamepads,\n        pixelDensity: gopt.pixelDensity,\n        maxFPS: gopt.maxFPS,\n        buttons: gopt.buttons,\n    });\n\n    const gc: Array<() => void> = [];\n\n    const canvasContext = app.canvas\n        .getContext(\"webgl\", {\n            antialias: true,\n            depth: true,\n            stencil: true,\n            alpha: true,\n            preserveDrawingBuffer: true,\n        });\n\n    if (!canvasContext) throw new Error(\"WebGL not supported\");\n\n    const gl = canvasContext;\n\n    const ggl = initGfx(gl, {\n        texFilter: gopt.texFilter,\n    });\n\n    gfx = initAppGfx(gopt, ggl);\n    audio = initAudio();\n    assets = initAssets(ggl);\n\n    game = initGame();\n\n    game.root.use(timer());\n\n    function makeCanvas(w: number, h: number) {\n        const fb = new FrameBuffer(ggl, w, h);\n        return {\n            clear: () => fb.clear(),\n            free: () => fb.free(),\n            toDataURL: () => fb.toDataURL(),\n            toImageData: () => fb.toImageData(),\n            width: fb.width,\n            height: fb.height,\n            draw: (action: () => void) => {\n                flush();\n                fb.bind();\n                action();\n                flush();\n                fb.unbind();\n            },\n        };\n    }\n\n    // start a rendering frame, reset some states\n    function frameStart() {\n        // clear backbuffer\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gfx.frameBuffer.bind();\n        // clear framebuffer\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        if (!gfx.bgColor) {\n            drawUnscaled(() => {\n                drawUVQuad({\n                    width: width(),\n                    height: height(),\n                    quad: new Quad(\n                        0,\n                        0,\n                        width() / BG_GRID_SIZE,\n                        height() / BG_GRID_SIZE,\n                    ),\n                    tex: gfx.bgTex,\n                    fixed: true,\n                });\n            });\n        }\n\n        gfx.renderer.numDraws = 0;\n        gfx.fixed = false;\n        gfx.transformStack.length = 0;\n        gfx.transform = new Mat4();\n    }\n\n    function usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n        gfx.postShader = name;\n        gfx.postShaderUniform = uniform ?? null;\n    }\n\n    function frameEnd() {\n        // TODO: don't render debug UI with framebuffer\n        // TODO: polish framebuffer rendering / sizing issues\n        flush();\n        gfx.lastDrawCalls = gfx.renderer.numDraws;\n        gfx.frameBuffer.unbind();\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        const ow = gfx.width;\n        const oh = gfx.height;\n        gfx.width = gl.drawingBufferWidth / pixelDensity;\n        gfx.height = gl.drawingBufferHeight / pixelDensity;\n\n        drawTexture({\n            flipY: true,\n            tex: gfx.frameBuffer.tex,\n            pos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n            width: gfx.viewport.width,\n            height: gfx.viewport.height,\n            shader: gfx.postShader,\n            uniform: typeof gfx.postShaderUniform === \"function\"\n                ? gfx.postShaderUniform()\n                : gfx.postShaderUniform,\n            fixed: true,\n        });\n\n        flush();\n        gfx.width = ow;\n        gfx.height = oh;\n    }\n\n    // TODO: cache formatted text\n    // format text and return a list of chars with their calculated position\n\n    // get game root\n\n    let debugPaused = false;\n\n    debug = {\n        inspect: false,\n        timeScale: 1,\n        showLog: true,\n        fps: () => app.fps(),\n        numFrames: () => app.numFrames(),\n        stepFrame: updateFrame,\n        drawCalls: () => gfx.lastDrawCalls,\n        clearLog: () => game.logs = [],\n        log: (msg) => {\n            const max = gopt.logMax ?? LOG_MAX;\n            game.logs.unshift({\n                msg: msg,\n                time: app.time(),\n            });\n            if (game.logs.length > max) {\n                game.logs = game.logs.slice(0, max);\n            }\n        },\n        error: (msg) =>\n            debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n        curRecording: null,\n        numObjects: () => get(\"*\", { recursive: true }).length,\n        get paused() {\n            return debugPaused;\n        },\n        set paused(v) {\n            debugPaused = v;\n            if (v) {\n                audio.ctx.suspend();\n            }\n            else {\n                audio.ctx.resume();\n            }\n        },\n    };\n\n    function getData<T>(key: string, def?: T): T | null {\n        try {\n            return JSON.parse(window.localStorage[key]);\n        } catch {\n            if (def) {\n                setData(key, def);\n                return def;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n\n    function setData(key: string, data: any) {\n        window.localStorage[key] = JSON.stringify(data);\n    }\n\n    function plug<T extends Record<string, any>>(\n        plugin: KAPLAYPlugin<T>,\n        ...args: any\n    ): KAPLAYCtx & T {\n        const funcs = plugin(k);\n        let funcsObj: T;\n        if (typeof funcs === \"function\") {\n            const plugWithOptions = funcs(...args);\n            funcsObj = plugWithOptions(k);\n        }\n        else {\n            funcsObj = funcs;\n        }\n\n        for (const key in funcsObj) {\n            k[key as keyof typeof k] = funcsObj[key];\n\n            if (gopt.global !== false) {\n                window[key as any] = funcsObj[key];\n            }\n        }\n        return k as KAPLAYCtx & T;\n    }\n\n    function record(frameRate?: number): Recording {\n        const stream = app.canvas.captureStream(frameRate);\n        const audioDest = audio.ctx.createMediaStreamDestination();\n\n        audio.masterNode.connect(audioDest);\n\n        // TODO: Enabling audio results in empty video if no audio received\n        // const audioStream = audioDest.stream\n        // const [firstAudioTrack] = audioStream.getAudioTracks()\n\n        // stream.addTrack(firstAudioTrack);\n\n        const recorder = new MediaRecorder(stream);\n        const chunks: any[] = [];\n\n        recorder.ondataavailable = (e) => {\n            if (e.data.size > 0) {\n                chunks.push(e.data);\n            }\n        };\n\n        recorder.onerror = () => {\n            audio.masterNode.disconnect(audioDest);\n            stream.getTracks().forEach(t => t.stop());\n        };\n\n        recorder.start();\n\n        return {\n            resume() {\n                recorder.resume();\n            },\n\n            pause() {\n                recorder.pause();\n            },\n\n            stop(): Promise<Blob> {\n                recorder.stop();\n                // cleanup\n                audio.masterNode.disconnect(audioDest);\n                stream.getTracks().forEach(t => t.stop());\n                return new Promise((resolve) => {\n                    recorder.onstop = () => {\n                        resolve(\n                            new Blob(chunks, {\n                                type: \"video/mp4\",\n                            }),\n                        );\n                    };\n                });\n            },\n\n            download(filename = \"kaboom.mp4\") {\n                this.stop().then((blob) => downloadBlob(filename, blob));\n            },\n        };\n    }\n\n    function isFocused(): boolean {\n        return document.activeElement === app.canvas;\n    }\n\n    // aliases for root game obj operations\n    const add = game.root.add.bind(game.root);\n    const readd = game.root.readd.bind(game.root);\n    const destroyAll = game.root.removeAll.bind(game.root);\n    const get = game.root.get.bind(game.root);\n    const wait = game.root.wait.bind(game.root);\n    const loop = game.root.loop.bind(game.root);\n    const query = game.root.query.bind(game.root);\n    const tween = game.root.tween.bind(game.root);\n\n    kaSprite = loadSprite(null, kaSpriteSrc);\n    boomSprite = loadSprite(null, boomSpriteSrc);\n\n    function fixedUpdateFrame() {\n        // update every obj\n        game.root.fixedUpdate();\n    }\n\n    function updateFrame() {\n        // update every obj\n        game.root.update();\n    }\n\n    class Collision {\n        source: GameObj;\n        target: GameObj;\n        normal: Vec2;\n        distance: number;\n        resolved: boolean = false;\n        constructor(\n            source: GameObj,\n            target: GameObj,\n            normal: Vec2,\n            distance: number,\n            resolved = false,\n        ) {\n            this.source = source;\n            this.target = target;\n            this.normal = normal;\n            this.distance = distance;\n            this.resolved = resolved;\n        }\n        get displacement() {\n            return this.normal.scale(this.distance);\n        }\n        reverse() {\n            return new Collision(\n                this.target,\n                this.source,\n                this.normal.scale(-1),\n                this.distance,\n                this.resolved,\n            );\n        }\n        hasOverlap() {\n            return !this.displacement.isZero();\n        }\n        isLeft() {\n            return this.displacement.cross(game.gravity || vec2(0, 1)) > 0;\n        }\n        isRight() {\n            return this.displacement.cross(game.gravity || vec2(0, 1)) < 0;\n        }\n        isTop() {\n            return this.displacement.dot(game.gravity || vec2(0, 1)) > 0;\n        }\n        isBottom() {\n            return this.displacement.dot(game.gravity || vec2(0, 1)) < 0;\n        }\n        preventResolution() {\n            this.resolved = true;\n        }\n    }\n\n    function checkFrame() {\n        if (!usesArea()) {\n            return;\n        }\n\n        // TODO: persistent grid?\n        // start a spatial hash grid for more efficient collision detection\n        const grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {};\n        const cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE;\n\n        // current transform\n        let tr = new Mat4();\n\n        // a local transform stack\n        const stack: any[] = [];\n\n        function checkObj(obj: GameObj) {\n            stack.push(tr.clone());\n\n            // Update object transform here. This will be the transform later used in rendering.\n            if (obj.pos) tr.translate(obj.pos);\n            if (obj.scale) tr.scale(obj.scale);\n            if (obj.angle) tr.rotate(obj.angle);\n            obj.transform = tr.clone();\n\n            if (obj.c(\"area\") && !obj.paused) {\n                // TODO: only update worldArea if transform changed\n                const aobj = obj as GameObj<AreaComp>;\n                const area = aobj.worldArea();\n                const bbox = area.bbox();\n\n                // Get spatial hash grid coverage\n                const xmin = Math.floor(bbox.pos.x / cellSize);\n                const ymin = Math.floor(bbox.pos.y / cellSize);\n                const xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize);\n                const ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize);\n\n                // Cache objs that are already checked\n                const checked = new Set();\n\n                // insert & check against all covered grids\n                for (let x = xmin; x <= xmax; x++) {\n                    for (let y = ymin; y <= ymax; y++) {\n                        if (!grid[x]) {\n                            grid[x] = {};\n                            grid[x][y] = [aobj];\n                        }\n                        else if (!grid[x][y]) {\n                            grid[x][y] = [aobj];\n                        }\n                        else {\n                            const cell = grid[x][y];\n                            check: for (const other of cell) {\n                                if (other.paused) continue;\n                                if (!other.exists()) continue;\n                                if (checked.has(other.id)) continue;\n                                for (const tag of aobj.collisionIgnore) {\n                                    if (other.is(tag)) {\n                                        continue check;\n                                    }\n                                }\n                                for (const tag of other.collisionIgnore) {\n                                    if (aobj.is(tag)) {\n                                        continue check;\n                                    }\n                                }\n                                // TODO: cache the world area here\n                                const res = sat(\n                                    aobj.worldArea(),\n                                    other.worldArea(),\n                                );\n                                if (res) {\n                                    // TODO: rehash if the object position is changed after resolution?\n                                    const col1 = new Collision(\n                                        aobj,\n                                        other,\n                                        res.normal,\n                                        res.distance,\n                                    );\n                                    aobj.trigger(\"collideUpdate\", other, col1);\n                                    const col2 = col1.reverse();\n                                    // resolution only has to happen once\n                                    col2.resolved = col1.resolved;\n                                    other.trigger(\"collideUpdate\", aobj, col2);\n                                }\n                                checked.add(other.id);\n                            }\n                            cell.push(aobj);\n                        }\n                    }\n                }\n            }\n\n            obj.children.forEach(checkObj);\n            tr = stack.pop();\n        }\n\n        checkObj(game.root);\n    }\n\n    function handleErr(err: Error) {\n        console.error(err);\n        audio.ctx.suspend();\n        const errorMessage = err.message ?? String(err)\n            ?? \"Unknown error, check console for more info\";\n\n        // TODO: this should only run once\n        app.run(\n            () => {},\n            () => {\n                frameStart();\n\n                drawUnscaled(() => {\n                    const pad = 32;\n                    const gap = 16;\n                    const gw = width();\n                    const gh = height();\n\n                    const textStyle = {\n                        size: 36,\n                        width: gw - pad * 2,\n                        letterSpacing: 4,\n                        lineSpacing: 4,\n                        font: DBG_FONT,\n                        fixed: true,\n                    };\n\n                    drawRect({\n                        width: gw,\n                        height: gh,\n                        color: rgb(0, 0, 255),\n                        fixed: true,\n                    });\n\n                    const title = formatText({\n                        ...textStyle,\n                        text: \"Error\",\n                        pos: vec2(pad),\n                        color: rgb(255, 128, 0),\n                        fixed: true,\n                    });\n\n                    drawFormattedText(title);\n\n                    drawText({\n                        ...textStyle,\n                        text: errorMessage,\n                        pos: vec2(pad, pad + title.height + gap),\n                        fixed: true,\n                    });\n\n                    popTransform();\n                    game.events.trigger(\"error\", err);\n                });\n\n                frameEnd();\n            },\n        );\n    }\n\n    function onCleanup(action: () => void) {\n        gc.push(action);\n    }\n\n    function quit() {\n        game.events.onOnce(\"frameEnd\", () => {\n            app.quit();\n\n            // clear canvas\n            gl.clear(\n                gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT\n                    | gl.STENCIL_BUFFER_BIT,\n            );\n\n            // unbind everything\n            const numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n            for (let unit = 0; unit < numTextureUnits; unit++) {\n                gl.activeTexture(gl.TEXTURE0 + unit);\n                gl.bindTexture(gl.TEXTURE_2D, null);\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            // run all scattered gc events\n            ggl.destroy();\n            gc.forEach((f) => f());\n        });\n    }\n\n    let isFirstFrame = true;\n\n    // main game loop\n    app.run(\n        () => {\n            try {\n                if (assets.loaded) {\n                    checkFrame();\n                    if (!debug.paused) fixedUpdateFrame();\n                }\n            } catch (e) {\n                handleErr(e as Error);\n            }\n        },\n        () => {\n            try {\n                if (!assets.loaded) {\n                    if (loadProgress() === 1 && !isFirstFrame) {\n                        assets.loaded = true;\n                        game.events.trigger(\"load\");\n                    }\n                }\n\n                if (\n                    !assets.loaded && gopt.loadingScreen !== false\n                    || isFirstFrame\n                ) {\n                    frameStart();\n                    // TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n                    drawLoadScreen();\n                    frameEnd();\n                }\n                else {\n                    if (!debug.paused) updateFrame();\n                    checkFrame();\n                    frameStart();\n                    drawFrame();\n                    if (gopt.debug !== false) drawDebug();\n                    frameEnd();\n                }\n\n                if (isFirstFrame) {\n                    isFirstFrame = false;\n                }\n\n                game.events.trigger(\"frameEnd\");\n            } catch (e) {\n                handleErr(e as Error);\n            }\n        },\n    );\n\n    updateViewport();\n    initEvents();\n\n    // the exported ctx handle\n    k = {\n        VERSION,\n        // asset load\n        loadRoot,\n        loadProgress,\n        loadSprite,\n        loadSpriteAtlas,\n        loadSound,\n        loadMusic,\n        loadBitmapFont,\n        loadFont,\n        loadShader,\n        loadShaderURL,\n        loadAseprite,\n        loadPedit,\n        loadBean,\n        loadJSON,\n        load,\n        getSound,\n        getFont,\n        getBitmapFont,\n        getSprite,\n        getShader,\n        getAsset,\n        Asset,\n        SpriteData,\n        SoundData,\n        // query\n        width,\n        height,\n        center,\n        dt,\n        fixedDt,\n        restDt,\n        time: app.time,\n        screenshot: app.screenshot,\n        record,\n        isFocused,\n        setCursor: app.setCursor,\n        getCursor: app.getCursor,\n        setCursorLocked: app.setCursorLocked,\n        isCursorLocked: app.isCursorLocked,\n        setFullscreen: app.setFullscreen,\n        isFullscreen: app.isFullscreen,\n        isTouchscreen: app.isTouchscreen,\n        onLoad,\n        onLoading,\n        onResize,\n        onGamepadConnect: app.onGamepadConnect,\n        onGamepadDisconnect: app.onGamepadDisconnect,\n        onError,\n        onCleanup,\n        // misc\n        camPos,\n        camScale,\n        camFlash,\n        camRot,\n        camTransform,\n        shake,\n        toScreen,\n        toWorld,\n        setGravity,\n        getGravity,\n        setGravityDirection,\n        getGravityDirection,\n        setBackground,\n        getBackground,\n        getGamepads: app.getGamepads,\n        // obj\n        getTreeRoot,\n        add,\n        make,\n        destroy,\n        destroyAll,\n        get,\n        query,\n        readd,\n        // comps\n        pos,\n        scale,\n        rotate,\n        color,\n        opacity,\n        anchor,\n        area,\n        sprite,\n        text,\n        polygon,\n        rect,\n        circle,\n        uvquad,\n        outline,\n        particles,\n        body,\n        surfaceEffector,\n        areaEffector,\n        pointEffector,\n        buoyancyEffector,\n        constantForce,\n        doubleJump,\n        shader,\n        textInput,\n        timer,\n        fixed,\n        stay,\n        health,\n        lifespan,\n        named,\n        state,\n        z,\n        layer,\n        move,\n        offscreen,\n        follow,\n        fadeIn,\n        mask,\n        drawon,\n        raycast,\n        tile,\n        animate,\n        serializeAnimation,\n        agent,\n        sentry,\n        patrol,\n        navigation,\n        // group events\n        on,\n        onFixedUpdate,\n        onUpdate,\n        onDraw,\n        onAdd,\n        onDestroy,\n        onClick,\n        onCollide,\n        onCollideUpdate,\n        onCollideEnd,\n        onHover,\n        onHoverUpdate,\n        onHoverEnd,\n        // input\n        onKeyDown: app.onKeyDown,\n        onKeyPress: app.onKeyPress,\n        onKeyPressRepeat: app.onKeyPressRepeat,\n        onKeyRelease: app.onKeyRelease,\n        onMouseDown: app.onMouseDown,\n        onMousePress: app.onMousePress,\n        onMouseRelease: app.onMouseRelease,\n        onMouseMove: app.onMouseMove,\n        onCharInput: app.onCharInput,\n        onTouchStart: app.onTouchStart,\n        onTouchMove: app.onTouchMove,\n        onTouchEnd: app.onTouchEnd,\n        onScroll: app.onScroll,\n        onHide: app.onHide,\n        onShow: app.onShow,\n        onGamepadButtonDown: app.onGamepadButtonDown,\n        onGamepadButtonPress: app.onGamepadButtonPress,\n        onGamepadButtonRelease: app.onGamepadButtonRelease,\n        onGamepadStick: app.onGamepadStick,\n        onButtonPress: app.onButtonPress,\n        onButtonDown: app.onButtonDown,\n        onButtonRelease: app.onButtonRelease,\n        mousePos: mousePos,\n        mouseDeltaPos: app.mouseDeltaPos,\n        isKeyDown: app.isKeyDown,\n        isKeyPressed: app.isKeyPressed,\n        isKeyPressedRepeat: app.isKeyPressedRepeat,\n        isKeyReleased: app.isKeyReleased,\n        isMouseDown: app.isMouseDown,\n        isMousePressed: app.isMousePressed,\n        isMouseReleased: app.isMouseReleased,\n        isMouseMoved: app.isMouseMoved,\n        isGamepadButtonPressed: app.isGamepadButtonPressed,\n        isGamepadButtonDown: app.isGamepadButtonDown,\n        isGamepadButtonReleased: app.isGamepadButtonReleased,\n        getGamepadStick: app.getGamepadStick,\n        isButtonPressed: app.isButtonPressed,\n        isButtonDown: app.isButtonDown,\n        isButtonReleased: app.isButtonReleased,\n        setButton: app.setButton,\n        getButton: app.getButton,\n        getLastInputDeviceType: app.getLastInputDeviceType,\n        charInputted: app.charInputted,\n        // timer\n        loop,\n        wait,\n        // audio\n        play,\n        volume,\n        burp,\n        audioCtx: audio.ctx,\n        // math\n        Line,\n        Rect,\n        Circle,\n        Ellipse,\n        Point,\n        Polygon,\n        Vec2,\n        Color,\n        Mat4,\n        Quad,\n        RNG,\n        rand,\n        randi,\n        randSeed,\n        vec2,\n        rgb,\n        hsl2rgb,\n        quad,\n        choose,\n        chooseMultiple,\n        shuffle,\n        chance,\n        lerp,\n        tween,\n        easings,\n        map,\n        mapc,\n        wave,\n        deg2rad,\n        rad2deg,\n        clamp,\n        evaluateQuadratic,\n        evaluateQuadraticFirstDerivative,\n        evaluateQuadraticSecondDerivative,\n        evaluateBezier,\n        evaluateBezierFirstDerivative,\n        evaluateBezierSecondDerivative,\n        evaluateCatmullRom,\n        evaluateCatmullRomFirstDerivative,\n        curveLengthApproximation,\n        normalizedCurve,\n        hermite,\n        cardinal,\n        catmullRom,\n        bezier,\n        kochanekBartels,\n        easingSteps,\n        easingLinear,\n        easingCubicBezier,\n        testLineLine,\n        testRectRect,\n        testRectLine,\n        testRectPoint,\n        testCirclePolygon,\n        testLinePoint,\n        testLineCircle,\n        isConvex,\n        triangulate,\n        NavMesh,\n        // raw draw\n        drawSprite,\n        drawText,\n        formatText,\n        drawRect,\n        drawLine,\n        drawLines,\n        drawTriangle,\n        drawCircle,\n        drawEllipse,\n        drawUVQuad,\n        drawPolygon,\n        drawCurve,\n        drawBezier,\n        drawFormattedText,\n        drawMasked,\n        drawSubtracted,\n        pushTransform,\n        popTransform,\n        pushTranslate,\n        pushScale,\n        pushRotate,\n        pushMatrix,\n        usePostEffect,\n        makeCanvas,\n        // debug\n        debug,\n        // scene\n        scene,\n        getSceneName,\n        go,\n        onSceneLeave,\n        // layers\n        layers,\n        // level\n        addLevel,\n        // storage\n        getData,\n        setData,\n        download,\n        downloadJSON,\n        downloadText,\n        downloadBlob,\n        // plugin\n        plug,\n        // char sets\n        ASCII_CHARS,\n        // dom\n        canvas: app.canvas,\n        // misc\n        addKaboom,\n        // dirs\n        LEFT: Vec2.LEFT,\n        RIGHT: Vec2.RIGHT,\n        UP: Vec2.UP,\n        DOWN: Vec2.DOWN,\n        // colors\n        RED: Color.RED,\n        GREEN: Color.GREEN,\n        BLUE: Color.BLUE,\n        YELLOW: Color.YELLOW,\n        MAGENTA: Color.MAGENTA,\n        CYAN: Color.CYAN,\n        WHITE: Color.WHITE,\n        BLACK: Color.BLACK,\n        quit,\n        // helpers\n        KEvent,\n        KEventHandler,\n        KEventController,\n    };\n\n    const plugins = gopt.plugins as KAPLAYPlugin<Record<string, unknown>>[];\n\n    if (plugins) {\n        plugins.forEach(plug);\n    }\n\n    // export everything to window if global is set\n    if (gopt.global !== false) {\n        for (const key in k) {\n            (<any> window[<any> key]) = k[key as keyof KAPLAYCtx];\n        }\n    }\n\n    if (gopt.focus !== false) {\n        app.canvas.focus();\n    }\n\n    return k as TPlugins extends [undefined] ? KAPLAYCtx<TButtons, TButtonsName>\n        : KAPLAYCtx<TButtons, TButtonsName> & MergePlugins<TPlugins>;\n};\n\nexport { kaplay };\n", "import { kaplay } from \"./kaplay\";\n\nexport type {\n    AsepriteData,\n    Asset,\n    AssetBucket,\n    AssetsCtx,\n    BitmapFontData,\n    FontData,\n    GfxFont,\n    LoadBitmapFontOpt,\n    LoadSpriteOpt,\n    LoadSpriteSrc,\n    NineSlice,\n    PeditFile,\n    Shader,\n    ShaderData,\n    SoundData,\n    SpriteAnim,\n    SpriteAnims,\n    SpriteAtlasData,\n    SpriteAtlasEntry,\n    SpriteData,\n    Uniform,\n    UniformKey,\n    UniformValue,\n} from \"./assets\";\nexport type { AudioCtx, AudioPlay, AudioPlayOpt } from \"./audio\";\nexport type {\n    AgentComp,\n    AgentCompOpt,\n    AnchorComp,\n    AnimateComp,\n    AnimateCompOpt,\n    AnimateOpt,\n    AreaComp,\n    AreaCompOpt,\n    BaseValues,\n    BodyComp,\n    BodyCompOpt,\n    CircleComp,\n    CircleCompOpt,\n    ColorComp,\n    DoubleJumpComp,\n    EmitterOpt,\n    FixedComp,\n    FollowComp,\n    HealthComp,\n    LayerComp,\n    LifespanCompOpt,\n    MaskComp,\n    NamedComp,\n    NavigationComp,\n    NavigationCompOpt,\n    NavigationMapComp,\n    NavigationMapCompOpt,\n    OffScreenComp,\n    OffScreenCompOpt,\n    OpacityComp,\n    OutlineComp,\n    ParticlesComp,\n    ParticlesOpt,\n    PatrolComp,\n    PatrolCompOpt,\n    PolygonComp,\n    PolygonCompOpt,\n    PosComp,\n    RectComp,\n    RectCompOpt,\n    RotateComp,\n    ScaleComp,\n    SentryCandidates,\n    SentryCandidatesCb,\n    SentryComp,\n    SentryCompOpt,\n    ShaderComp,\n    SpriteComp,\n    SpriteCompOpt,\n    StateComp,\n    StayComp,\n    TextComp,\n    TextCompOpt,\n    TextInputComp,\n    TileComp,\n    TileCompOpt,\n    TimerComp,\n    UVQuadComp,\n    ZComp,\n} from \"./components\";\nexport type {\n    BoomOpt,\n    Game,\n    GameObjEventMap,\n    GameObjEventNames,\n    LevelOpt,\n    SceneDef,\n    SceneName,\n    TupleWithoutFirst,\n} from \"./game\";\nexport type {\n    AppGfxCtx,\n    BatchRenderer,\n    CharTransform,\n    CharTransformFunc,\n    DrawBezierOpt,\n    DrawCircleOpt,\n    DrawCurveOpt,\n    DrawLineOpt,\n    DrawLinesOpt,\n    DrawRectOpt,\n    DrawSpriteOpt,\n    DrawTextOpt,\n    DrawTriangleOpt,\n    FormattedChar,\n    FormattedText,\n    FrameBuffer,\n    GfxCtx,\n    LineCap,\n    LineJoin,\n    Mesh,\n    TextAlign,\n    Texture,\n    VertexFormat,\n} from \"./gfx\";\nexport type {\n    Circle,\n    Color,\n    ColorArgs,\n    Ellipse,\n    Graph,\n    Grid,\n    Line,\n    Mat4,\n    NavMesh,\n    Point,\n    Polygon,\n    Quad,\n    RaycastHit,\n    RaycastResult,\n    Rect,\n    RGBAValue,\n    RGBValue,\n    RNG,\n    ShapeType,\n    StepPosition,\n    Vec2,\n    Vec2Args,\n} from \"./math\";\nexport type {\n    Anchor,\n    Canvas,\n    Collision,\n    Comp,\n    CompList,\n    Cursor,\n    Debug,\n    DrawEllipseOpt,\n    DrawPolygonOpt,\n    DrawTextureOpt,\n    DrawUVQuadOpt,\n    EaseFunc,\n    EaseFuncs,\n    Edge,\n    EdgeMask,\n    EmptyComp,\n    Event,\n    EventController,\n    EventHandler,\n    GameObj,\n    GameObjID,\n    GameObjInspect,\n    GameObjRaw,\n    GamepadDef,\n    GamepadStick,\n    GetOpt,\n    ImageSource,\n    KaboomCtx,\n    KaboomOpt,\n    KaboomPlugin,\n    KAPLAYCtx,\n    KAPLAYOpt,\n    KAPLAYPlugin,\n    Key,\n    KGamePad,\n    KGamepadButton,\n    LerpValue,\n    LevelComp,\n    LoadFontOpt,\n    Mask,\n    MergeComps,\n    MergeObj,\n    MergePlugins,\n    MouseButton,\n    MusicData,\n    Outline,\n    PathFindOpt,\n    PluginList,\n    QueryOpt,\n    Recording,\n    RenderProps,\n    RNGValue,\n    Shape,\n    SpriteAnimPlayOpt,\n    SpriteCurAnim,\n    Tag,\n    TexFilter,\n    TextureOpt,\n    TexWrap,\n    TimerController,\n    TweenController,\n    Vertex,\n} from \"./types\";\nexport type {\n    BinaryHeap,\n    KEvent,\n    KEventController,\n    KEventHandler,\n    Registry,\n} from \"./utils\";\n\nexport default kaplay;\n", "export function introscene() {\r\n\treturn scene(\"introscene\", () => {\r\n\t\tdebug.log(\"amuspark logo\")\r\n\r\n\t\t// if not signed in go to newgrounds scene\r\n\t\t// go(\"newgroundscene\")\r\n\r\n\t\t// else go to gamescene i think\r\n\t\t// go(\"gamescene\")\r\n\t})\t\r\n}", "// # Update code by MF / the other stuff by amyspark-ng\r\n\r\n// A custom component for waving - it is TS for this waveCompOpt\r\ntype WaveCompOpt = {\r\n\twave_tweenSpeed?: number,\r\n\twave_startTweenSpeed?: number,\r\n\twave_endTweenSpeed?: number,\r\n\tminAmplitude?: number,\r\n\tmaxAmplitude?: number,\r\n\twave_speed?: number,\r\n}\r\n\r\nexport function waver(WaveCompOpt?: WaveCompOpt) {\r\n\treturn {\r\n\t\t// Name of the component\r\n\t\tid: \"wave\",\r\n\t\t// This component requires the \"pos\" component to work\r\n\t\trequire: [ \"pos\" ],\r\n\t\tamplitude: 0,\r\n\t\twave_tweenSpeed: WaveCompOpt?.wave_tweenSpeed || 0.32,\r\n\t\twave_startTweenSpeed: WaveCompOpt?.wave_tweenSpeed || 0.32,\r\n\t\twave_endTweenSpeed: WaveCompOpt?.wave_tweenSpeed || 0.32,\r\n\t\tminAmplitude: WaveCompOpt?.minAmplitude || 0,\r\n\t\tmaxAmplitude: WaveCompOpt?.maxAmplitude || 50,\r\n\t\twave_verPosition: 0,\r\n\t\twave_speed: WaveCompOpt?.wave_speed || 1,\r\n\t\tisWaving: false,\r\n\t\tadd() {\r\n\t\t\tthis.wave_verPosition = this.pos.y\r\n\t\t},\r\n\t\tstartWave() {\r\n\t\t\tif (this.isWaving) return\r\n\t\t\tthis.trigger(\"waveStart\")\r\n\t\t\ttween(this.minAmplitude, this.maxAmplitude, this.wave_tweenSpeed, v => this.amplitude = v)\r\n\t\t\tthis.isWaving = true\r\n\t\t},\r\n\t\tstopWave() {\r\n\t\t\tif (!this.isWaving) return\r\n\t\t\tthis.trigger(\"waveStop\")\r\n\t\t\ttween(this.amplitude, this.minAmplitude, this.wave_tweenSpeed, v => this.amplitude = v)\r\n\t\t\ttween(this.pos.y, this.wave_verPosition, this.wave_tweenSpeed, v => this.pos.y = v)\r\n\t\t\tthis.isWaving = false\r\n\t\t},\r\n\t\t// \"update\" is a lifecycle method gets called every frame the obj is in scene\r\n\t\tupdate() {\r\n\t\t\tif (!this.isWaving) return\r\n\t\t\tconst t = time() * this.wave_speed\r\n\t\t\tthis.pos.y = this.wave_verPosition + this.amplitude * Math.cos(t * this.wave_speed)\r\n\t\t},\r\n\t}\r\n}\r\n", "import { AudioPlay, AudioPlayOpt, Key } from \"kaplay\";\r\nimport { GameState } from \"./gamestate.ts\"\r\nimport { panderitoIndex } from \"./game/gamescene.ts\";\r\nimport { bop } from \"./game/utils.ts\";\r\n\r\nlet bg:any;\r\nlet volumeText:any;\r\nlet speaker:any;\r\nlet trayVolElements:any;\r\nlet volumeBars:any;\r\n\r\nexport let sfxHandlers = new Set<AudioPlay>();\r\nexport function playSfx(sound:string, opts?:AudioPlayOpt) {\r\n\topts = opts || {}\r\n\topts.detune = opts.detune || 0\r\n\topts.speed = opts.speed || 1\r\n\topts.loop = opts.loop || false\r\n\topts.volume = opts.volume || GameState.settings.sfx.muted == true ? 0 : GameState.settings.sfx.volume\r\n\r\n\tlet handle = play(sound, {\r\n\t\tvolume: opts.volume,\r\n\t\tdetune: opts.detune,\r\n\t\tspeed: opts.speed,\r\n\t\tloop: opts.loop,\r\n\t})\r\n\r\n\tsfxHandlers.add(handle)\r\n\thandle.onEnd(() => sfxHandlers.delete(handle))\r\n\r\n\treturn handle;\r\n}\r\n\r\nexport function stopAllSounds() {\r\n\tsfxHandlers.forEach((handler) => {\r\n\t\thandler.stop()\r\n\t})\r\n}\r\n\r\nexport let musicHandler:any;\r\nexport function playMusic(song:string, opts?:AudioPlayOpt) {\r\n\topts = opts || {}\r\n\t\r\n\t// IF VOLUME IS NOT SET DO THE SETTING CHECK\r\n\topts.volume = opts.volume || GameState.settings.music.muted == true ? 0 : GameState.settings.music.volume\r\n\t\r\n\topts.loop = opts.loop || true\r\n\topts.detune = opts.detune || 0\r\n\r\n\tmusicHandler?.stop()\r\n\tmusicHandler = play(song, {\r\n\t\tvolume: opts.volume,\r\n\t\tloop: opts.loop,\t\r\n\t\tdetune: opts.detune,\r\n\t})\r\n}\r\n\r\nexport function changeVolume(type: \"sfx\" | \"music\", volume:number) {\r\n\tif (type == \"sfx\") {\r\n\t\tsfxHandlers.forEach((handler) => {\r\n\t\t\thandler.volume = volume\r\n\t\t})\r\n\t}\r\n\r\n\telse if (type == \"music\") {\r\n\t\tmusicHandler.volume = volume\r\n\t}\r\n}\r\n\r\nexport function manageMute(type: \"sfx\" | \"music\", mute:boolean) {\r\n\tif (type == \"sfx\") {\r\n\t\tGameState.settings.sfx.muted = mute\r\n\t\tchangeVolume(\"sfx\", mute == true ? 0 : GameState.settings.sfx.volume)\r\n\t}\r\n\r\n\telse if (type == \"music\") {\r\n\t\tGameState.settings.music.muted = mute\r\n\t\tchangeVolume(\"music\", mute == true ? 0 : GameState.settings.music.volume)\r\n\t}\r\n}\r\n\r\n// takes 1.25 seconds\r\nexport function scratchSong() {\r\n\tmusicHandler.winding = true\r\n\ttween(musicHandler.detune, rand(-100, -150), 0.25, (p) => musicHandler.detune = p, easings.easeInQuint).then(() => {\r\n\t\ttween(musicHandler.detune, rand(100, 150), 0.25, (p) => musicHandler.detune = p, easings.easeInQuint)\r\n\t})\r\n\ttween(musicHandler.speed, rand(0.25, 0.5), 0.25, (p) => musicHandler.speed = p, easings.easeInQuint)\r\n\ttween(musicHandler.volume, rand(0.1, 0.5), 0.5, (p) => musicHandler.volume = p, easings.easeInQuint).then(() => {\r\n\t\tmusicHandler.stop()\r\n\t})\r\n}\r\n\r\nexport let volChangeTune = 0\r\nlet showTween = null;\r\n\r\nexport function addSoundElements() {\r\n\tbg = add([\r\n\t\trect(width() / 6, 80, { radius: 2.5 }),\r\n\t\tpos(width() / 2, 0),\r\n\t\tanchor(\"top\"),\r\n\t\tcolor(BLACK),\r\n\t\tstay(),\r\n\t\topacity(0.75),\r\n\t\tlayer(\"sound\"),\r\n\t\tz(0),\r\n\t\t\"trayVolElement\",\r\n\t\t{\r\n\t\t\tupYPos: -80,\r\n\t\t\tdownYPos: 0,\r\n\t\t}\r\n\t])\r\n\r\n\tbg.pos.y = bg.upYPos\r\n\t\r\n\tvolumeText = bg.add([\r\n\t\ttext(\"VOLUME\"),\r\n\t\tpos(0, bg.height - 12),\r\n\t\tanchor(\"center\"),\r\n\t\tscale(0.6),\r\n\t\tlayer(\"sound\"),\r\n\t\tz(1),\r\n\t\t\"trayVolElement\",\r\n\t])\r\n\r\n\tspeaker = volumeText.add([\r\n\t\tsprite(\"speakers\"),\r\n\t\topacity(1),\r\n\t\tpos(0, -64),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\tlayer(\"sound\"),\r\n\t\tz(1),\r\n\t\t\"trayVolElement\",\r\n\t])\r\n\r\n\t// frame 1 is sound / frame 0 is muted\r\n\tspeaker.frame = 0\r\n\tspeaker.hidden = true\r\n\r\n\t// bars\r\n\tfor (let i = 0; i < 10; i++) {\r\n\t\tbg.add([\r\n\t\t\tpos(-67 + i * 15, 30),\r\n\t\t\trect(10, bg.height - 40, { radius: 1 }),\r\n\t\t\topacity(0),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tlayer(\"sound\"),\r\n\t\t\tz(1),\r\n\t\t\tscale(),\r\n\t\t\t\"trayVolElement\",\r\n\t\t\t\"trayVolBar\",\r\n\t\t\t{\r\n\t\t\t\tvolume: 0.1 * (i + 1),\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tif (GameState.settings.volume.toFixed(1) < this.volume.toFixed(1)) this.opacity = 0.1\r\n\t\t\t\t\telse this.opacity = 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t}\r\n\r\n\ttrayVolElements = get(\"trayVolElement\", { recursive: true })\r\n\tvolumeBars = get(\"trayVolBar\", { recursive: true })\r\n}\r\n\r\nexport function volumeManager() {\r\n\tshowTween = tween(GameState.settings.volume, GameState.settings.volume , 0, (p) => GameState.settings.volume = p, easings.linear)\r\n\tvolume(GameState.settings.volume)\r\n\r\n\tlet changeVolTune = 0\r\n\tlet waitingTimer = wait(0, function(){})\r\n\r\n\tmusicHandler = play(\"clickRelease\", { volume: 0 })\r\n\tmusicHandler.winding = true\r\n\tmusicHandler.currentTime = 0 // time()\r\n\tmusicHandler.totalTime = 0 // duration()\r\n\t\r\n\ttrayVolElements = get(\"trayVolElement\", { recursive: true }) \r\n\r\n\tlet soundManager = add([\r\n\t\tstay(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tGameState.settings.volume = parseFloat(GameState.settings.volume.toFixed(1))\r\n\t\t\t\tGameState.settings.sfx.volume = parseFloat(GameState.settings.sfx.volume.toFixed(1))\r\n\t\t\t\tGameState.settings.music.volume = parseFloat(GameState.settings.music.volume.toFixed(1))\r\n\t\t\t\tvolChangeTune = map(GameState.settings.volume, 0, 1, -250, 0)\r\n\r\n\t\t\t\tif (isKeyPressed(\"-\")) {\r\n\t\t\t\t\t// have to trigger this before because else the objects will not exist\r\n\t\t\t\t\tthis.trigger(\"show\")\r\n\t\t\t\t\tif (GameState.settings.volume > 0) {\r\n\t\t\t\t\t\tGameState.settings.volume -= 0.1\r\n\t\t\t\t\t\tvolume(GameState.settings.volume)\r\n\r\n\t\t\t\t\t\t// would mute\r\n\t\t\t\t\t\tif (GameState.settings.volume == 0) {\r\n\t\t\t\t\t\t\t// mute everything\r\n\t\t\t\t\t\t\tvolumeText.text = \"SOUND OFF\"\r\n\t\t\t\t\t\t\t// no need to mute other things because their volume \r\n\t\t\t\t\t\t\t// is being managed by the volume() function globally lol!\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvolumeText.text = `VOLUME: ${(GameState.settings.volume * 100).toFixed(0)}%`\r\n\t\t\t\t\t\t\tbop(volumeBars[clamp(Math.floor(GameState.settings.volume * 10 - 1), 0, 10)], 0.05)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tget(\"trayVolBar\", { recursive: true }).forEach(trayVolBar => {\r\n\t\t\t\t\t\t\ttrayVolBar.hidden = GameState.settings.volume == 0 ? true : false\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tspeaker.hidden = GameState.settings.volume == 0 ? false : true\r\n\t\t\t\t\t\tspeaker.frame = GameState.settings.volume == 0 ? 0 : 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\telse if (isKeyPressed(\"+\" as Key)) {\r\n\t\t\t\t\t// have to trigger this before because else the objects will not exist\r\n\t\t\t\t\tthis.trigger(\"show\")\r\n\t\t\t\t\tget(\"trayVolBar\", { recursive: true }).forEach(trayVolBar => {\r\n\t\t\t\t\t\ttrayVolBar.hidden = false\r\n\t\t\t\t\t})\r\n\t\t\t\t\tspeaker.hidden = true\r\n\t\t\t\t\tspeaker.frame = 1\r\n\r\n\t\t\t\t\tif (GameState.settings.volume <= 0.9) {\r\n\t\t\t\t\t\tGameState.settings.volume += 0.1\r\n\t\t\t\t\t\tvolume(GameState.settings.volume)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// // this is too loud\r\n\t\t\t\t\t\t// play(\"whistle\")\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbop(volumeBars[clamp(Math.floor(GameState.settings.volume * 10 - 1), 0, 10)], 0.05)\r\n\t\t\t\t\tvolumeText.text = `VOLUME: ${(GameState.settings.volume * 100).toFixed(0)}%`\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (isKeyPressed(\"n\") && panderitoIndex != 3) {\r\n\t\t\t\t\t// have to trigger this before because else the objects will not exist\r\n\t\t\t\t\tthis.trigger(\"show\")\r\n\t\t\t\t\t\r\n\t\t\t\t\tmanageMute(\"sfx\", !GameState.settings.sfx.muted)\r\n\t\t\t\t\tvolumeText.text = `SFX: ${GameState.settings.sfx.muted ? \"OFF\" : \"ON\"}`\r\n\t\t\t\t\t\r\n\t\t\t\t\tget(\"trayVolBar\", { recursive: true }).forEach(trayVolBar => {\r\n\t\t\t\t\t\ttrayVolBar.hidden = true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tspeaker.hidden = false\r\n\t\t\t\t\tspeaker.frame = GameState.settings.sfx.muted ? 0 : 1\r\n\t\t\t\t\tbop(speaker, 0.05)\r\n\r\n\t\t\t\t\t// toggle checkbox in setings window\r\n\t\t\t\t\tif (get(\"sfxCheckbox\", { recursive: true })[0]) {\r\n\t\t\t\t\t\tif (GameState.settings.sfx.muted) get(\"sfxCheckbox\", { recursive: true })[0]?.turnOff()\r\n\t\t\t\t\t\telse get(\"sfxCheckbox\", { recursive: true })[0]?.turnOn()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (isKeyPressed(\"m\")) {\r\n\t\t\t\t\t// have to trigger this before because else the objects will not exist\r\n\t\t\t\t\tthis.trigger(\"show\")\r\n\t\t\t\t\t\r\n\t\t\t\t\tGameState.settings.music.muted = !GameState.settings.music.muted\r\n\t\t\t\t\tvolumeText.text = `MUSIC: ${GameState.settings.music.muted ? \"OFF\" : \"ON\"}`\r\n\t\t\t\t\t\r\n\t\t\t\t\tget(\"trayVolBar\", { recursive: true }).forEach(trayVolBar => {\r\n\t\t\t\t\t\ttrayVolBar.hidden = true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tspeaker.hidden = false\r\n\t\t\t\t\tspeaker.frame = GameState.settings.music.muted ? 0 : 1\r\n\t\t\t\t\tbop(speaker, 0.05)\r\n\r\n\t\t\t\t\t// toggle checkbox in setings window\r\n\t\t\t\t\tif (get(\"musicCheckbox\", { recursive: true })[0]) {\r\n\t\t\t\t\t\tif (GameState.settings.music.muted) get(\"musicCheckbox\", { recursive: true })[0]?.turnOff()\r\n\t\t\t\t\t\telse get(\"musicCheckbox\", { recursive: true })[0]?.turnOn()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmanageMute(\"music\", GameState.settings.music.muted)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tsoundManager.on(\"hide\", () => {\r\n\t\tif (get(\"trayVolElement\").length === 0) return\r\n\r\n\t\tshowTween.cancel()\r\n\t\tshowTween = tween(bg.pos.y, bg.upYPos, 0.32, (p) => bg.pos.y = p, easings.easeOutQuad).then(() => {\r\n\t\t\twaitingTimer.cancel()\r\n\t\t\twaitingTimer = wait(0.5, () => {\r\n\t\t\t\ttrayVolElements.forEach(soundElement => {\r\n\t\t\t\t\tdestroy(soundElement)\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\r\n\tsoundManager.on(\"show\", () => {\r\n\t\tif (get(\"trayVolElement\").length === 0) addSoundElements()\r\n\r\n\t\tif (showTween) {\r\n\t\t\tshowTween.cancel()\r\n\t\t}\r\n\t\tshowTween = tween(bg.pos.y, bg.downYPos, 0.32, (p) => bg.pos.y = p, easings.easeOutQuad)\r\n\r\n\t\twaitingTimer.cancel()\r\n\t\twaitingTimer = wait(1, () => {\r\n\t\t\tsoundManager.trigger(\"hide\")\r\n\t\t})\r\n\r\n\t\tif (GameState.settings.volume < 10)\tplay(\"volumeChange\", { detune: changeVolTune })\r\n\t})\r\n\r\n\t// DON'T ADD ONCHARINPUT BECAUSE THE NUMBERS ARE EXCLUSIVE FOR THE WINDOWS BUTTONS!!!!\r\n\r\n\treturn soundManager;\r\n}", "// # Found in kaplay examples\r\n\r\n// Keep track of the current draggin item\r\nexport let curDraggin = null\r\n\r\nexport function setCurDraggin(value = null) {\r\n\tcurDraggin = value\r\n}\r\n\r\n/**\r\n * Drag objects\r\n * @param onlyX - only drag it on the X axis\r\n */\r\nexport function drag(onlyX:boolean = false) {\r\n\r\n\t// The displacement between object pos and mouse pos\r\n\tlet offset = vec2(0)\r\n\r\n\treturn {\r\n\t\t// Name of the component\r\n\t\tid: \"drag\",\r\n\t\t// This component requires the \"pos\" and \"area\" component to work\r\n\t\trequire: [ \"pos\", \"area\" ],\r\n\t\tdragging: false,\r\n\t\tpick() {\r\n\t\t\t// Set the current global dragged to this\r\n\t\t\tcurDraggin = this\r\n\t\t\toffset = mousePos().sub(this.pos)\r\n\t\t\tthis.trigger(\"drag\")\r\n\t\t\tthis.dragging = true\r\n\t\t},\r\n\t\t// \"update\" is a lifecycle method gets called every frame the obj is in scene\r\n\t\tupdate() {\r\n\t\t\tif (curDraggin === this) {\r\n\t\t\t\tif (onlyX == true) this.pos.x = mousePos().x - (offset.x)\r\n\t\t\t\telse this.pos = this.pos = mousePos().sub(offset) \r\n\t\t\t\tthis.trigger(\"dragUpdate\")\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tthis.dragging = false\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDrag(action:() => void) {\r\n\t\t\treturn this.on(\"drag\", action)\r\n\t\t},\r\n\t\tonDragUpdate(action: () => void) {\r\n\t\t\treturn this.on(\"dragUpdate\", action)\r\n\t\t},\r\n\t\tonDragEnd(action: () => void) {\r\n\t\t\treturn this.on(\"dragEnd\", action)\r\n\t\t},\r\n\t\tinspect() {\r\n\t\t\treturn `dragging: ${this.dragging}`\r\n\t\t}\r\n\t}\r\n}\r\n", "// # by amyspark-ng\r\n\r\n// A custom component for adding a dummy shadow that follows the object\r\nexport function dummyShadow() {\r\n\r\n\treturn {\r\n\t\t// Name of the component\r\n\t\tid: \"dummyShadow\",\r\n\t\trequire: [ \"pos\", \"area\", \"drag\", \"z\" ],\r\n\t\tshadow: null,\r\n\t\tadd() {\r\n\t\t\tthis.on(\"drag\", () => {\r\n\t\t\t\tthis.shadow = add([\r\n\t\t\t\t\tpos(this.pos),\r\n\t\t\t\t\tsprite(this.sprite),\r\n\t\t\t\t\tz(this.z - 1),\r\n\t\t\t\t\trotate(0),\r\n\t\t\t\t\tcolor(BLACK),\r\n\t\t\t\t\tlayer(this.layer),\r\n\t\t\t\t\topacity(0.8),\r\n\t\t\t\t\tanchor(\"center\"),\r\n\t\t\t\t])\r\n\t\r\n\t\t\t\tthis.shadow.onUpdate(() => {\r\n\t\t\t\t\tlet xPos = map(this.pos.x, 0, width(), this.pos.x + 8, this.pos.x - 8)\r\n\t\t\t\t\tthis.shadow.pos.x = lerp(this.pos.x, xPos, 0.75)\r\n\t\t\t\t\tthis.shadow.pos.y = lerp(this.shadow.pos.y, this.pos.y + 8, 0.75)\r\n\t\t\t\t\tthis.shadow.angle = lerp(this.shadow.angle, this.angle, 0.9)\r\n\t\t\t\t})\r\n\t\t\t\r\n\t\t\t\tthis.on(\"dragEnd\", () => {\r\n\t\t\t\t\tthis.shadow?.destroy()\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tdestroy() {\r\n\t\t\tthis.shadow?.destroy()\r\n\t\t},\r\n\t}\r\n}\r\n", "import { Vec2 } from \"kaplay\";\r\nimport { curDraggin } from \"../../plugins/drag\"\r\n\r\nconst timeForHold = 0.18\r\n\r\nexport function openWindowButton() {\r\n\tlet lastPosClicked:Vec2;\r\n\r\n\treturn {\r\n\t\tid: \"windowButton\",\r\n\t\trequire: [\"rotate\", \"drag\", \"dummyShadow\"],\r\n\r\n\t\tadd() {\r\n\t\t\tlet waitingHold = wait(0, () => {})\r\n\t\t\tthis.onMousePress(\"left\", () => {\r\n\t\t\t\tlastPosClicked = mousePos()\r\n\t\t\t\tif (!this.isBeingHovered) return\r\n\t\t\t\r\n\t\t\t\twaitingHold.cancel()\r\n\t\t\t\twaitingHold = wait(timeForHold, () => {\r\n\t\t\t\t\tif (!this.isBeingHovered) return\r\n\t\t\t\t\tif (curDraggin) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t// hold function\r\n\t\t\t\t\tthis.trigger(\"hold\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tthis.onMouseRelease(\"left\", () => {\r\n\t\t\t\tif (this.dragging) {\r\n\t\t\t\t\tthis.trigger(\"holdRelease\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// was not being dragged\r\n\t\t\t\telse {\r\n\t\t\t\t\twaitingHold.cancel()\r\n\t\t\t\t\t// if last posclicked is inside gridminibutton\r\n\t\t\t\t\tif (!this.isBeingHovered) return\r\n\t\t\t\t\tif (!this.hasPoint(lastPosClicked)) return\r\n\t\t\t\t\tif (curDraggin) return\r\n\t\r\n\t\t\t\t\t// click function\r\n\t\t\t\t\tthis.trigger(\"press\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tupdate() {\r\n\t\t\tif (this.dragging) {\r\n\t\t\t\t// tilting towards direction\r\n\t\t\t\tif (isMouseMoved()) this.angle = lerp(this.angle, mouseDeltaPos().x, 0.25)\r\n\t\t\t\telse this.angle = lerp(this.angle, 0, 0.25)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonPress(action: () => void) {\r\n\t\t\treturn this.on(\"press\", action)\r\n\t\t},\r\n\r\n\t\tonHold(action: () => void) {\r\n\t\t\treturn this.on(\"hold\", action)\r\n\t\t},\r\n\r\n\t\tonHoldRelease(action: () => void) {\r\n\t\t\treturn this.on(\"holdRelease\", action)\r\n\t\t},\r\n\t}\r\n}", "\r\n// =========================\r\n// OUTSIDE HOVER COMPONENT\r\n\r\nimport { mouse } from \"../additives\"\r\nimport { curDraggin } from \"../plugins/drag\"\r\nimport { allObjWindows } from \"../windows/windows-api/windowManaging\"\r\n\r\n// =========================\r\nexport function outsideWindowHover() {\r\n\treturn {\r\n\t\tid: \"outsideHover\",\r\n\t\trequire: [\"area\"],\r\n\t\tisBeingHovered: false,\r\n\r\n\t\tstartHoverAnim: null,\r\n\t\tendHoverAnim: null,\r\n\r\n\t\tstartHoverFunction: null,\r\n\t\tendHoverFunction: null,\r\n\r\n\t\tadd() {\r\n\t\t\tthis.startHoverFunction = function() {\r\n\t\t\t\tif (curDraggin == null && this.isBeingHovered == false) {\r\n\t\t\t\t\tthis.startHoverAnim()\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.trigger(\"outsideHoverStart\")\r\n\t\t\t\t\tmouse.play(\"point\")\r\n\t\t\t\t\tthis.isBeingHovered = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.endHoverFunction = function() {\r\n\t\t\t\tif (this.isBeingHovered == false || this.dragging == true) return\r\n\t\t\t\tthis.endHoverAnim()\r\n\t\t\t\t\r\n\t\t\t\tthis.trigger(\"outsideHoverEnd\")\r\n\t\t\t\tmouse.play(\"cursor\")\r\n\t\t\t\tthis.isBeingHovered = false\r\n\t\t\t} \r\n\r\n\t\t\tthis.onHover(() => {\r\n\t\t\t\t// only check for these conditions here\r\n\t\t\t\tif (allObjWindows.isHoveringAWindow == false && allObjWindows.isDraggingAWindow == false) {\r\n\t\t\t\t\tthis.startHoverFunction()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.onHoverEnd(() => {\r\n\t\t\t\tthis.endHoverFunction()\r\n\t\t\t})\r\n\r\n\t\t\tthis.on(\"cursorEnterWindow\", (windowObj) => {\r\n\t\t\t\t// if the hover animation is playing then stop playing it\r\n\t\t\t\tif (this.isBeingHovered == true) {\r\n\t\t\t\t\tthis.endHoverFunction()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.on(\"cursorExitWindow\", (windowObj) => {\r\n\t\t\t\t// if is being hovered but the animation is not playing\r\n\t\t\t\t// due to being inside a window\r\n\t\t\t\tif (this.isHovering()) {\r\n\t\t\t\t\tthis.startHoverFunction()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tstartingHover(action: () => void) {\r\n\t\t\tthis.startHoverAnim = action\r\n\t\t\t// return this.on(\"outsideHoverStart\")\r\n\t\t},\r\n\r\n\t\tendingHover(action: () => void) {\r\n\t\t\tthis.endHoverAnim = action\r\n\t\t\t// return this.on(\"outsideHoverEnd\")\r\n\t\t}\r\n\t}\r\n}\r\n", "import { curDraggin, drag, setCurDraggin } from \"../.././plugins/drag\";\r\nimport { dummyShadow } from \"../.././plugins/dummyShadow\";\r\nimport { playSfx } from \"../../../sound\";\r\nimport { bop, getPosInGrid } from \"../../utils\";\r\nimport { mouse } from \"../../additives\";\r\nimport { infoForWindows, manageWindow, buttonSpacing, openWindow, allObjWindows, windowKey, } from \"./windowManaging\";\r\nimport { GameState } from \"../../../gamestate\";\r\nimport { Vec2 } from \"kaplay\";\r\nimport { openWindowButton } from \"./openWindowButton\";\r\nimport { folded, folderObj } from \"./folderObj\";\r\nimport { destroyExclamation } from \"../../unlockables/unlockablewindows\";\r\nimport { outsideWindowHover } from \"../../hovers/outsideWindowHover\";\r\n\r\ntype minibuttonOpt = {\r\n\twindowKey:windowKey\r\n\ttaskbarIndex:number;\r\n\tinitialPosition:Vec2,\r\n\tdestPosition?:Vec2;\r\n}\r\n\r\nexport function getMinibuttonPos(taskbarIndex:number) {\r\n\treturn getPosInGrid(folderObj.pos, 0, -taskbarIndex - 1, vec2(75, 0))\r\n}\r\n\r\nexport function addMinibutton(opts:minibuttonOpt) {\r\n\tlet quad;\r\n\r\n\tgetSprite(\"bean\")?.then(quady => {\r\n\t\tquad = quady\r\n\t})\r\n\r\n\tlet idxForInfo = infoForWindows[opts.windowKey].idx\r\n\r\n\tlet destinedPosition:Vec2;\r\n\tif (opts.destPosition) destinedPosition = opts.destPosition\r\n\telse {\r\n\t\tlet extraMb = infoForWindows[Object.keys(infoForWindows)[idxForInfo]].icon ? true : false\r\n\t\tif (extraMb) destinedPosition = vec2(folderObj.pos.x, folderObj.pos.y - buttonSpacing)  \r\n\t\telse destinedPosition = getMinibuttonPos(opts.taskbarIndex)\r\n\t}\r\n\r\n\tlet currentMinibutton = add([\r\n\t\tsprite(\"white_noise\"),\r\n\t\tpos(opts.initialPosition),\r\n\t\tanchor(\"center\"),\r\n\t\tarea({ scale: vec2(0) }),\r\n\t\tscale(1),\r\n\t\topacity(1),\r\n\t\trotate(0),\r\n\t\tdrag(),\r\n\t\tcolor(),\r\n\t\tlayer(\"ui\"),\r\n\t\tz(folderObj.z - 1),\r\n\t\tdummyShadow(),\r\n\t\topenWindowButton(),\r\n\t\toutsideWindowHover(),\r\n\t\t`${opts.windowKey}`,\r\n\t\t\"minibutton\",\r\n\t\tinfoForWindows[opts.windowKey].icon == \"extra\" ? \"extraMinibutton\" : \"\",\r\n\t\t{\r\n\t\t\tidxForInfo: idxForInfo,\r\n\t\t\ttaskbarIndex: opts.taskbarIndex,\r\n\t\t\twindow: get(`${opts.windowKey}`, { recursive: true })[0] ?? null,\r\n\t\t\twindowInfo: infoForWindows[opts.windowKey],\r\n\t\t\twindowKey: opts.windowKey,\r\n\t\t\tnervousSpinSpeed: 10,\r\n\t\t\tsaturation: 0,\r\n\t\t\tsaturationColor: WHITE,\r\n\t\t\tdefaultScale: vec2(1),\r\n\t\t\tdragHasSurpassed: false,\r\n\t\t\tdestinedPosition: destinedPosition,\r\n\t\t\textraMb: infoForWindows[opts.windowKey].icon == \"extra\" ? true : null,\r\n\t\t\tshut: get(\"extraWin\")[0] ? false : true,\r\n\t\t\tupdate() {\r\n\t\t\t\tif (this.dragging == false) {\r\n\t\t\t\t\tif (curDraggin?.is(\"minibutton\") && !this.extraMb) {\r\n\t\t\t\t\t\t// spinning\r\n\t\t\t\t\t\t// if it's waiting to be swapped\r\n\t\t\t\t\t\tthis.angle = wave(-8, 8, time () * 3)\r\n\t\t\t\t\t\tthis.saturation = wave(0.005, 0.05, (time() * 3))\r\n\r\n\t\t\t\t\t\t// swapping behaviour\r\n\t\t\t\t\t\t// if the distance is less than 15\r\n\t\t\t\t\t\tif (Math.abs(curDraggin?.pos.sub(this.pos).x) < 15) {\r\n\t\t\t\t\t\t\t// i have to move it to the right, therefore left will be false\r\n\t\t\t\t\t\t\tif (curDraggin.pos.x < this.pos.x && !this.dragHasSurpassed) {\r\n\t\t\t\t\t\t\t\tthis.trigger(\"dragHasSurpassed\", true)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (curDraggin.pos.x > this.pos.x && !this.dragHasSurpassed) {\r\n\t\t\t\t\t\t\t\tthis.trigger(\"dragHasSurpassed\", false)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.dragHasSurpassed = false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// curDragging is gridMinibutton, this is waiting to be replaced, nervous, panic!!\r\n\t\t\t\t\telse if (curDraggin?.is(\"gridMiniButton\") && !this.extraMb) {\r\n\t\t\t\t\t\tthis.angle = wave(-4, 4, time () * this.nervousSpinSpeed)\r\n\t\t\t\t\t\tthis.saturation = wave(0.01, 0.1, (time() * 3))\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// no curdragging\r\n\t\t\t\t\telse if (curDraggin == null) {\r\n\t\t\t\t\t\t// this.opacity = lerp(this.opacity, 1, 0.1)\r\n\t\t\t\t\t\tif (this.isBeingHovered) {\r\n\t\t\t\t\t\t\tthis.angle = wave(-8, 8, time () * 3)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.angle = lerp(this.angle, 0, 0.25)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// saturation\r\n\t\t\t\t\t\tif (this.window != null) {\r\n\t\t\t\t\t\t\tthis.saturation = wave(0.01, 0.1, (time() * 3))\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.saturation = 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// sets hitbox\r\n\t\t\t\t\tif (this.pos.dist(folderObj.pos) > 65) {\r\n\t\t\t\t\t\tthis.area.scale = !this.extraMb ? vec2(0.75, 1.1) : vec2(0.75, 0.8)\r\n\t\t\t\t\t\tthis.area.offset = vec2(2, 4)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.area.scale = vec2(0)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.extraMb) {\r\n\t\t\t\t\tthis.destinedPosition = vec2(folderObj.pos.x, folderObj.pos.y - buttonSpacing)\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.destinedPosition = getMinibuttonPos(this.taskbarIndex)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tdrawInspect() {\r\n\t\t\t\tif (this.extraMb) return\r\n\t\t\t\tdrawText({\r\n\t\t\t\t\ttext: this.taskbarIndex,\r\n\t\t\t\t\tpos: vec2(0, -this.height),\r\n\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\tsize: 25,\r\n\t\t\t\t\tcolor: WHITE\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tclick() {\r\n\t\t\t\t// click function\r\n\t\t\t\tmanageWindow(currentMinibutton.windowKey)\r\n\t\t\t\tbop(currentMinibutton)\r\n\r\n\t\t\t\t// unlocking stuff\r\n\t\t\t\tdestroyExclamation(currentMinibutton)\r\n\t\t\t},\r\n\r\n\t\t\tpickFromTaskbar() {\r\n\t\t\t\tmouse.grab()\r\n\t\t\t\tthis.pick()\r\n\r\n\t\t\t\tthis.layer = \"mouse\"\r\n\t\t\t\tthis.z = mouse.z - 1\r\n\t\t\t\tfolderObj.addSlots()\r\n\t\t\t\tplaySfx(\"plap\", {detune: 100 * this.windowInfo.idx / 4})\r\n\t\t\t\tbop(this, 0.1)\r\n\r\n\t\t\t\tif (this.window) this.window.close()\r\n\t\t\t},\r\n\r\n\t\t\treleaseDrop() {\r\n\t\t\t\tcurDraggin.trigger(\"dragEnd\")\r\n\t\t\t\tsetCurDraggin(null)\r\n\t\t\t\tmouse.releaseAndPlay(\"cursor\")\r\n\t\t\t\tthis.layer = \"ui\"\r\n\t\t\t\tthis.z = folderObj.z - 1\r\n\r\n\t\t\t\tlet closestSlot = null;\r\n\t\t\t\tlet closestDistance = Infinity;\r\n\t\t\t\t\r\n\t\t\t\t// Get all minibutton slots\r\n\t\t\t\tconst minibuttonSlots = get(\"minibuttonslot\");\r\n\t\t\t\t\r\n\t\t\t\t// Check the distance to each minibutton\r\n\t\t\t\tminibuttonSlots.forEach(slot => {\r\n\t\t\t\t\tconst distance = currentMinibutton.screenPos().dist(slot.screenPos());\r\n\t\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestSlot = slot;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tlet movingTween = null;\r\n\r\n\t\t\t\t// if the taskbarindexes don't coincide\r\n\t\t\t\t// goes back to the slot corresponding to its taskbar index\r\n\t\t\t\tif (this.taskbarIndex != closestSlot.taskbarIndex) movingTween = tween(this.pos, get(`slot_${this.taskbarIndex}`)[0].pos, 0.32, (p) => this.pos = p, easings.easeOutQuint)\r\n\t\t\t\t// if the taskbar indexes do coincide\r\n\t\t\t\t// goes to the slot that coincides with its taskbar index \r\n\t\t\t\tif (this.taskbarIndex == closestSlot.taskbarIndex) movingTween = tween(this.pos, closestSlot.pos, 0.32, (p) => this.pos = p, easings.easeOutQuint)\r\n\t\t\t\t\r\n\t\t\t\tplaySfx(\"plop\", {detune: 100 * this.windowInfo.idx / 4})\r\n\t\t\t\tthis.z = folderObj.z - 1\r\n\t\t\t\t\r\n\t\t\t\t// destroys all slots except the current one\r\n\t\t\t\tget(\"minibuttonslot\").filter(minibuttonslot => minibuttonslot.taskbarIndex != this.taskbarIndex).forEach((minibuttonslot) => {\r\n\t\t\t\t\tdestroy(minibuttonslot)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// when it ends it destroys its slot\r\n\t\t\t\tmovingTween.onEnd(() => {\r\n\t\t\t\t\tlet currentSlot = get(`slot_${this.taskbarIndex}`)[0]\r\n\t\t\t\t\tcurrentSlot?.fadeOut(0.32).onEnd(() => currentSlot?.destroy())\r\n\t\t\t\t\tif (this.isHovering() && !allObjWindows.isHoveringAWindow) this.startHoverFunction()\r\n\t\t\t\t\telse this.endHoverFunction()\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// reset their angles\r\n\t\t\t\tget(\"minibutton\").forEach(element => {\r\n\t\t\t\t\ttween(element.angle, 0, 0.32, (p) => element.angle = p, easings.easeOutQuint)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\t// SPRITE\r\n\tcurrentMinibutton.use(sprite(`icon_${infoForWindows[opts.windowKey].icon || opts.windowKey.replace(\"Win\", \"\")}`))\r\n\tif (currentMinibutton.extraMb) {\r\n\t\tif (currentMinibutton.shut) currentMinibutton.play(\"shut_default\")\r\n\t\telse currentMinibutton.play(\"open_default\")\r\n\t}\r\n\telse currentMinibutton.play(\"default\")\r\n\r\n\t// animate them\r\n\tcurrentMinibutton.opacity = 0\r\n    tween(currentMinibutton.opacity, 1, 0.32, (p) => currentMinibutton.opacity = p, easings.easeOutQuad)\r\n\ttween(currentMinibutton.pos, currentMinibutton.destinedPosition, 0.32, (p) => currentMinibutton.pos = p, easings.easeOutBack)\r\n\t\r\n\t// currentMinibutton is the one being swapped to met the curDragging wish\r\n\tcurrentMinibutton.on(\"dragHasSurpassed\", (left) => {\r\n\t\tcurrentMinibutton.dragHasSurpassed = true\r\n\r\n\t\t// the bigger the index the more to the ACTUAL left it will be\r\n\t\t// -- to the right / ++ to the left\r\n\r\n\t\t// will i use this function again?\r\n\t\tfunction swap(sourceObj, sourceKey, targetObj, targetKey) {\r\n\t\t\tlet temp = sourceObj[sourceKey];\r\n\t\t\tsourceObj[sourceKey] = targetObj[targetKey];\r\n\t\t\ttargetObj[targetKey] = temp;\r\n\t\t}\r\n\t\t// probably not\r\n\t\t\r\n\t\t// change it before they're swapped\r\n\t\tGameState.taskbar[curDraggin.taskbarIndex] = currentMinibutton.windowKey\r\n\t\tGameState.taskbar[currentMinibutton.taskbarIndex] = curDraggin.windowKey\r\n\r\n\t\tswap(curDraggin, \"taskbarIndex\", currentMinibutton, \"taskbarIndex\")\r\n\r\n\t\t// sets position based on the new taskbarindex\r\n\t\tlet newXPos = getMinibuttonPos(currentMinibutton.taskbarIndex).x\r\n\t\ttween(currentMinibutton.pos.x, newXPos, 0.32, (p) => currentMinibutton.pos.x = p, easings.easeOutBack)\r\n\t})\r\n\r\n\tcurrentMinibutton.use(shader(\"saturate\", () => ({\r\n\t\t\"saturation\": currentMinibutton.saturation,\r\n\t\t\"saturationColor\": currentMinibutton.saturationColor,\r\n\t\t\"u_pos\": vec2(quad.x, quad.y),\r\n\t\t\"u_size\": vec2(quad.w, quad.h),\r\n\t})))\r\n\r\n\tcurrentMinibutton.startingHover(() => {\r\n\t\tif (folded) return\r\n\t\tplaySfx(\"hoverMiniButton\", {detune: 100 * currentMinibutton.windowInfo.idx / 4})\r\n\t\ttween(currentMinibutton.pos.y, currentMinibutton.destinedPosition.y - 5, 0.32, (p) => currentMinibutton.pos.y = p, easings.easeOutQuint)\r\n\t\ttween(currentMinibutton.scale, vec2(1.05), 0.32, (p) => currentMinibutton.scale = p, easings.easeOutQuint)\r\n\r\n\t\tif (currentMinibutton.extraMb) currentMinibutton.shut ? currentMinibutton.play(\"shut_hover\") : currentMinibutton.play(\"open_hover\")\r\n\t\telse currentMinibutton.play(\"hover\")\r\n\r\n\t\tif (currentMinibutton.extraMb || currentMinibutton.dragging) return\r\n\t\tlet newXPos = getMinibuttonPos(currentMinibutton.taskbarIndex).x\r\n\t\ttween(currentMinibutton.pos.x, newXPos, 0.32, (p) => currentMinibutton.pos.x = p, easings.easeOutQuint)\r\n\t})\r\n\r\n\tcurrentMinibutton.endingHover(() => {\r\n\t\tif (folded) return\r\n\t\tif (allObjWindows.isDraggingAWindow) return\r\n\t\ttween(currentMinibutton.pos.y, currentMinibutton.destinedPosition.y, 0.32, (p) => currentMinibutton.pos.y = p, easings.easeOutQuint)\r\n\t\ttween(currentMinibutton.angle, 0, 0.32, (p) => currentMinibutton.angle = p, easings.easeOutQuint)\r\n\t\ttween(currentMinibutton.scale, vec2(1), 0.32, (p) => currentMinibutton.scale = p, easings.easeOutQuint)\r\n\t\tcurrentMinibutton.defaultScale = vec2(1.05)\r\n\t\t\r\n\t\tif (currentMinibutton.extraMb) currentMinibutton.shut ? currentMinibutton.play(\"shut_default\") : currentMinibutton.play(\"open_default\")\r\n\t\telse currentMinibutton.play(\"default\")\r\n\t\tmouse.play(\"cursor\")\r\n\r\n\t\tif (currentMinibutton.extraMb || currentMinibutton.dragging) return\r\n\t\t\r\n\t\tlet newXPos = getMinibuttonPos(currentMinibutton.taskbarIndex).x\r\n\t\ttween(currentMinibutton.pos.x, newXPos, 0.32, (p) => currentMinibutton.pos.x = p, easings.easeOutQuint)\r\n\t})\r\n\r\n\tcurrentMinibutton.onPress(() => {\r\n\t\tif (allObjWindows.isHoveringAWindow || allObjWindows.isDraggingAWindow) return\r\n\t\tcurrentMinibutton.click()\r\n\t})\r\n\t\r\n\tif (currentMinibutton.windowKey != \"extraWin\") {\r\n\t\tcurrentMinibutton.onHold(() => {\r\n\t\t\tif (curDraggin) return\r\n\t\t\t\r\n\t\t\tcurrentMinibutton.pickFromTaskbar()\r\n\t\t\t\r\n\t\t\t// unlocking stuff\r\n\t\t\tdestroyExclamation(currentMinibutton)\r\n\t\t})\r\n\t\r\n\t\tcurrentMinibutton.onHoldRelease(() => {\r\n\t\t\tif (curDraggin == currentMinibutton) {\r\n\t\t\t\tcurrentMinibutton.releaseDrop()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\treturn currentMinibutton;\r\n}\r\n", "import { GameObj } from \"kaplay\";\r\nimport { GameState, scoreManager } from \"../../gamestate\";\r\nimport { windowKey } from \"../windows/windows-api/windowManaging\";\r\nimport { waver } from \".././plugins/wave\";\r\nimport { bop } from \"../utils\";\r\nimport { playSfx } from \"../../sound\";\r\nimport { folded, folderObj } from \"../windows/windows-api/folderObj\";\r\nimport { addMinibutton } from \"../windows/windows-api/minibuttons\";\r\nimport { ROOT } from \"../../main\";\r\n\r\nexport let unlockableWindows = {\r\n\t\"storeWin\": {\r\n\t\tcondition: () => GameState.score >= 25\r\n\t},\r\n\t\"settingsWin\": {\r\n\t\tcondition: () => GameState.score >= 50\r\n\t},\r\n\t\"statsWin\": {\r\n\t\tcondition: () => GameState.score >= 60\r\n\t},\r\n\t// they're unlocked at the same time lol!\r\n\t\"extraWin\": {\r\n\t\tcondition: () => GameState.score >= 150\r\n\t},\r\n\t\"musicWin\": {\r\n\t\tcondition: () => GameState.score >= 150\r\n\t},\r\n\t\"medalsWin\": {\r\n\t\tcondition: () => GameState.score >= 105\r\n\t},\r\n\t\"creditsWin\": {\r\n\t\tcondition: () => GameState.score >= 200\r\n\t},\r\n\t\"leaderboardsWin\": {\r\n\t\tcondition: () => GameState.scoreAllTime >= 1_100_000\r\n\t},\r\n\t\"ascendWin\": {\r\n\t\tcondition: () => GameState.scoreAllTime >= scoreManager.ascensionConstant\r\n\t},\r\n}\r\n\r\nexport function isWindowUnlocked(windowName:windowKey) {\r\n\treturn GameState.unlockedWindows.includes(windowName)\r\n}\r\n\r\nexport function destroyExclamation(obj) {\r\n\tobj?.get(\"exclamation\")?.forEach(element => {\r\n\t\telement?.fadeOut(0.1).onEnd(() => { destroy(element) })\r\n\t});\r\n}\r\n\r\nexport function addExclamation(obj:any) {\r\n\t// there's no exclamation\r\n\tif (obj.get(\"exclamation\").length == 0) {\r\n\t\tlet exclamation = obj.add([\r\n\t\t\ttext(\"!\", { font: \"lambdao\", size: 45 }),\r\n\t\t\tpos(obj.width / 2, -obj.height / 2),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tscale(),\r\n\t\t\topacity(1),\r\n\t\t\twaver({ maxAmplitude: 5 }),\r\n\t\t\t\"exclamation\",\r\n\t\t\t{\r\n\t\t\t\ttimes: 0,\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tif (obj.opacity != null) this.opacity = obj.opacity\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t\r\n\t\ttween(-obj.height, -obj.height / 2, 0.32, (p) => exclamation.pos.y = p, easings.easeOutBack).onEnd(() => {\r\n\t\t\texclamation.startWave()\r\n\t\t})\r\n\t\ttween(0.5, 1, 0.32, (p) => exclamation.opacity = p, easings.easeOutQuad)\r\n\t}\r\n\r\n\telse {\r\n\t\tlet exclamation = obj.get(\"exclamation\")[0]\r\n\t\tbop(exclamation)\r\n\t}\r\n}\r\n\r\nexport function unlockWindow(windowJustUnlocked:windowKey) {\r\n\t// does the actual stuff\r\n\tGameState.unlockedWindows.push(windowJustUnlocked)\r\n\tplaySfx(\"windowUnlocked\")\r\n\t\r\n\tif (GameState.taskbar.length < 4 || windowJustUnlocked == \"extraWin\") {\r\n\t\tGameState.taskbar.push(windowJustUnlocked)\r\n\t}\r\n\r\n\telse {\r\n\t\t// i got a 'Too much recursion!' crash here, got pretty scared :(\r\n\t\t// if (GameState.unlockedWindows.includes(\"extraWin\") == false) {\r\n\t\t// \tunlockWindow(\"extraWin\")\r\n\t\t// \tGameState.taskbar.push(\"extraWin\")\r\n\t\t// }\r\n\t}\r\n\r\n\t// if the folderObj is folded\r\n\tif (folded == true) {\r\n\t\taddExclamation(folderObj)\r\n\r\n\t\tlet unfoldCheckEvent = folderObj.on(\"unfold\", () => {\r\n\t\t\tdestroyExclamation(folderObj)\r\n\r\n\t\t\t// is on taskbar\r\n\t\t\tif (GameState.taskbar.includes(windowJustUnlocked)) {\r\n\t\t\t\tlet newlyUnlockedBtn = get(\"minibutton\").filter(btn => btn.windowKey == windowJustUnlocked)[0]\r\n\t\t\t\taddExclamation(newlyUnlockedBtn)\r\n\t\t\t}\r\n\r\n\t\t\t// it went to extraa win\r\n\t\t\telse if (GameState.taskbar.includes(windowJustUnlocked) == false) {\r\n\t\t\t\tlet extraWinBtn = get(\"minibutton\").filter(btn => btn.windowKey == \"extraWin\")[0]\r\n\t\t\t\taddExclamation(extraWinBtn)\r\n\t\t\t}\r\n\r\n\t\t\tunfoldCheckEvent.cancel()\r\n\t\t})\r\n\t}\r\n\r\n\t// if the folderobj is unfolded\r\n\telse if (folded == false) {\r\n\t\tif (GameState.taskbar.includes(windowJustUnlocked)) {\r\n\t\t\t// index in taskbar of the new button\r\n\t\t\tlet newIndex = GameState.taskbar.indexOf(windowJustUnlocked)\r\n\t\t\t\r\n\t\t\tlet btnForNewWindow = addMinibutton({\r\n\t\t\t\twindowKey: windowJustUnlocked,\r\n\t\t\t\ttaskbarIndex: newIndex,\r\n\t\t\t\tinitialPosition: folderObj.pos,\r\n\t\t\t})\r\n\r\n\t\t\taddExclamation(btnForNewWindow)\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tlet extraWinBtn = get(\"minibutton\").filter(btn => btn.windowKey == \"extraWin\")[0]\r\n\t\t\taddExclamation(extraWinBtn)\r\n\t\t\t// if the window goes to the extra window but the extra win hasn't been unlocked yet \r\n\t\t\t// we're oging to have trouble\r\n\t\t\t// i just unlock extra win before musicwin and hope that fixes everything\r\n\t\t}\r\n\t}\r\n\r\n\t// if the window is on extra win i have to check if the extra win is opened to add the extra minibutton\r\n\t// if is not open i have to wait until then\r\n\tif (GameState.taskbar.includes(windowJustUnlocked) == false) {\r\n\t\tlet extraWinOpenCheck = ROOT.on(\"winOpen\", (windowOpened) => {\r\n\t\t\tif (windowOpened == \"extraWin\") {\r\n\t\t\t\tlet gridMinibtn = get(\"gridMiniButton\", { recursive: true }).filter((btn) => btn.windowKey == windowJustUnlocked)[0]\r\n\t\t\t\taddExclamation(gridMinibtn)\r\n\t\r\n\t\t\t\textraWinOpenCheck.cancel()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tROOT.trigger(\"winUnlock\", windowJustUnlocked)\r\n}", "import { GameObj, Vec2 } from \"kaplay\"\r\nimport { getPrice, getVariable, setVariable } from \"../utils\"\r\nimport { GameState } from \"../../gamestate\"\r\nimport { ascension, talk } from \"./ascension\"\r\nimport { ROOT } from \"../../main\"\r\nimport { playSfx } from \"../../sound\"\r\nimport { windowKey } from \"../windows/windows-api/windowManaging\"\r\nimport { isWindowUnlocked, unlockWindow } from \"../unlockables/unlockablewindows\"\r\n\r\nlet cardsInfo = {\r\n\t\"clickersCard\": { \r\n\t\tinfo: \"Clickers are +[number]% more efficient\",\r\n\t\tbasePrice: 1,\r\n\t\tpercentageIncrease: 100,\r\n\t\tidx: 0,\r\n\t\tgamestateInfo: {\r\n\t\t\tkey: \"clickPercentage\",\r\n\t\t\tobjectAmount: \"ascension.clickPercentagesBought\"\r\n\t\t}\r\n\t},\r\n\t\"cursorsCard\": { \r\n\t\tinfo: \"Cursors are +[number]% more efficient\",\r\n\t\tbasePrice: 1,\r\n\t\tpercentageIncrease: 110,\r\n\t\tidx: 1,\r\n\t\tgamestateInfo: {\r\n\t\t\tkey: \"cursorsPercentage\",\r\n\t\t\tobjectAmount: \"ascension.cursorsPercentagesBought\"\r\n\t\t}\r\n\t},\r\n\t\"powerupsCard\": { \r\n\t\tinfo: \"Powerups will be +[number]x more powerful\",\r\n\t\tbasePrice: 2,\r\n\t\tpercentageIncrease: 120,\r\n\t\tidx: 2,\r\n\t\tgamestateInfo: {\r\n\t\t\tkey: \"powerupPower\",\r\n\t\t\tobjectAmount: \"ascension.powerupPowersBought\"\r\n\t\t}\r\n\t},\r\n\t\"critsCard\": {\r\n\t\tinfo: \"Criticals will be +[number]x more powerful\",\r\n\t\tbasePrice: 3,\r\n\t\tpercentageIncrease: 122,\r\n\t\tidx: 3,\r\n\t\tgamestateInfo: {\r\n\t\t\tkey: \"critPower\",\r\n\t\t\tobjectAmount: \"ascension.critPowersBought\"\r\n\t\t}\r\n\t},\r\n\t\"hexColorCard\": { \r\n\t\tinfo: \"You can customize the hexagon's color\",\r\n\t\tunlockPrice: 5,\r\n\t\tidx: 4,\r\n\t},\r\n\t\"bgColorCard\": { \r\n\t\tinfo: \"You can customize the background's color\",\r\n\t\tunlockPrice: 5,\r\n\t\tidx: 5,\r\n\t},\r\n}\r\n\r\nfunction cardTypes() {\r\n\treturn Object.keys(cardsInfo).sort((a, b) => cardsInfo[a].idx - cardsInfo[b].idx)\r\n}\r\n\r\ntype card = keyof typeof cardsInfo\r\n\r\nlet cardYPositions = {\r\n\thidden: 691,\r\n\t/**\r\n\t * The position they are when they're stacked\r\n\t */\r\n\tdealing: 341,\r\n\tunhovered: 544,\r\n\thovered: 524,\r\n}\r\n\r\n/**\r\n * Gets a random additive value based on the card type\r\n * @returns the additive  \r\n */\r\nfunction getAdditive(type:card) {\r\n\tlet additive:number\r\n\r\n\tif (type == \"clickersCard\" || type == \"cursorsCard\") {\r\n\t\tadditive = randi(8, 12)\r\n\t}\r\n\r\n\telse if (type == \"powerupsCard\") {\r\n\t\tadditive = randi(1, 5)\r\n\t}\r\n\r\n\telse if (type == \"critsCard\") {\r\n\t\tif (GameState.ascension.critPowersBought == 0) additive = 1\r\n\t\telse additive = randi(10, 15) \r\n\t}\r\n\r\n\telse if (type == \"hexColorCard\" || type == \"bgColorCard\") {\r\n\t\tadditive = 0\r\n\t}\r\n\r\n\treturn additive;\r\n}\r\n\r\n// clickersCard -> card_clickers\r\nconst typeToSprite = (type:card | string) => `card_${type.replace(\"Card\", \"\")}`    \r\n\r\nfunction flipCard(card:GameObj, newType:card | string) {\r\n\tlet flipOneSideTime = 0.075\r\n\t\r\n\t// turn it to middle\r\n\tcard.area.scale = vec2(0)\r\n\ttween(1, 0, flipOneSideTime, (p) => card.scale.x = p).onEnd(() => {\r\n\t\tcard.type = newType as card\r\n\t\tcard.typeIdx = cardsInfo[card.type as string].idx\r\n\t\tcard.additive = getAdditive(card.type as card)\r\n\t\tcard.sprite = typeToSprite(card.type)\r\n\t\t\r\n\t\ttween(0, 1, flipOneSideTime, (p) => card.scale.x = p).onEnd(() => {\r\n\t\t\tcard.area.scale = vec2(1)\r\n\t\t\tcard.trigger(\"flip\")\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction addCard(cardType:string | card, position: Vec2) {\r\n\t\r\n\tlet card = add([\r\n\t\t// starts at backcard\r\n\t\tsprite(\"backcard\"),\r\n\t\tpos(position),\r\n\t\trotate(0),\r\n\t\tlayer(\"ascension\"),\r\n\t\tz(6),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\tarea({ scale: vec2(0) }),\r\n\t\t\"card\",\r\n\t\t\"ascensionHover\",\r\n\t\t{\r\n\t\t\tindexInDeck: 0, // 1 - 4 / 1 being leftmost\r\n\t\t\tprice: 1,\r\n\t\t\ttype: cardType,\r\n\t\t\ttypeIdx: cardsInfo[cardType].idx,\r\n\t\t\tadditive: getAdditive(cardType as card),\r\n\t\t\tupdate() {\r\n\t\t\t\t// sets price\r\n\t\t\t\tif (!(this.type == \"hexColorCard\" || this.type == \"bgColorCard\")) {\r\n\t\t\t\t\tlet objectAmount = getVariable(GameState, cardsInfo[this.type].gamestateInfo.objectAmount)\r\n\r\n\t\t\t\t\tthis.price = getPrice({\r\n\t\t\t\t\t\tbasePrice: cardsInfo[this.type].basePrice,\r\n\t\t\t\t\t\tpercentageIncrease: cardsInfo[this.type].percentageIncrease,\r\n\t\t\t\t\t\tobjectAmount: objectAmount\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.price = cardsInfo[this.type].unlockPrice\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tstartHover() {\r\n\t\t\t\ttween(this.pos.y, cardYPositions.hovered, 0.25, (p) => this.pos.y = p, easings.easeOutQuart)\r\n\t\t\t\ttween(this.angle, choose([-1.5, 1.5]), 0.25, (p) => this.angle = p, easings.easeOutQuart)\r\n\t\r\n\t\t\t\tlet message:string;\r\n\r\n\t\t\t\tif (this.type == \"critsCard\" && GameState.ascension.critPowersBought == 0) {\r\n\t\t\t\t\tmessage = \"When you click, you will have a random chance of getting more score per click\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// it adds the % on the info message\r\n\t\t\t\t\tmessage = cardsInfo[this.type].info.replace(\"[number]\", this.additive)\r\n\t\t\t\t\tif (!(this.type == \"hexColorCard\" || this.type == \"bgColorCard\")) {\r\n\t\t\t\t\t\tlet addition = getVariable(GameState, cardsInfo[this.type].gamestateInfo.objectAmount)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.type == \"powerupsCard\" || this.type == \"critsCard\") {\r\n\t\t\t\t\t\t\tmessage += ` (Current power: ${addition}x)`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tmessage += ` (You have: ${addition}%)`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttalk(\"card\", message)\r\n\t\t\t\tplaySfx(\"onecard\", { detune: rand(-75, 75) * this.indexInDeck })\r\n\t\t\t},\r\n\r\n\t\t\tbuy() {\r\n\t\t\t\ttween(0.75, 1, 0.15, (p) => this.scale.y = p, easings.easeOutQuart)\r\n\t\t\t\r\n\t\t\t\t// unlock color window\r\n\t\t\t\tif (this.type == \"hexColorCard\" || this.type == \"bgColorCard\") {\r\n\t\t\t\t\tlet oldType = this.type // get it before it changes\r\n\t\t\t\t\tflipCard(card, cardTypes()[this.typeIdx - 2])\r\n\r\n\t\t\t\t\tlet endascensioncheck = ROOT.on(\"endAscension\", () => {\r\n\t\t\t\t\t\twait(1, () => {\r\n\t\t\t\t\t\t\tunlockWindow(oldType.replace(\"Card\", \"Win\") as windowKey)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tendascensioncheck.cancel()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add percentages\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.type == \"critsCard\" && GameState.ascension.critPowersBought == 0) {\r\n\t\t\t\t\t\tGameState.critPower = 1\r\n\t\t\t\t\t\tGameState.ascension.critPowersBought = 1\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// actually add the stuff LOL!\r\n\t\t\t\t\t\tlet currentPercentage = getVariable(GameState, cardsInfo[this.type].gamestateInfo.key)\r\n\t\t\t\t\t\tlet percentagesBought = getVariable(GameState, cardsInfo[this.type].gamestateInfo.objectAmount)\r\n\t\r\n\t\t\t\t\t\t// add the actual percentage\r\n\t\t\t\t\t\tsetVariable(GameState, cardsInfo[this.type].gamestateInfo.key, currentPercentage + this.additive)\r\n\t\t\t\t\t\t// set the percentagesBought\r\n\t\t\t\t\t\tsetVariable(GameState, cardsInfo[this.type].gamestateInfo.objectAmount, percentagesBought + 1)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// get new additive\r\n\t\t\t\t\tthis.additive = getAdditive(this.type as card)\r\n\t\t\t\t\tthis.startHover() // talk\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction subMana(amount:number) {\r\n\t\t\t\t\ttween(GameState.ascension.mana, GameState.ascension.mana - amount, 0.32, (p) => GameState.ascension.mana = Math.round(p), easings.easeOutExpo)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsubMana(this.price)\r\n\t\t\t\tplaySfx(\"kaching\", { detune: rand(-50, 50) })\r\n\t\t\t\tif (ascension.canLeave == false) {ascension.canLeave = true; ROOT.trigger(\"canLeaveAscension\")}\r\n\t\t\t},\r\n\r\n\t\t\tdrawInspect() {\r\n\t\t\t\tdrawText({\r\n\t\t\t\t\ttext: `deck: ${this.indexInDeck}\\ntype: ${this.typeIdx} - ${this.type}`,\r\n\t\t\t\t\tpos: vec2(0, -this.height),\r\n\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\tsize: 25,\r\n\t\t\t\t\tcolor: WHITE\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tcard.on(\"dealingOver\", () => {\r\n\t\tcard.onHover(() => {\r\n\t\t\tcard.startHover()\r\n\t\t})\r\n\r\n\t\tcard.onHoverEnd(() => {\r\n\t\t\ttween(card.pos.y, cardYPositions.unhovered, 0.25, (p) => card.pos.y = p, easings.easeOutQuart)\r\n\t\t})\r\n\r\n\t\tcard.onClick(() => {\r\n\t\t\tif (GameState.ascension.mana >= card.price) card.buy()\r\n\t\t\telse {\r\n\t\t\t\ttween(0.75, 1, 0.15, (p) => card.scale.x = p, easings.easeOutQuart)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst greenPrice = GREEN.lighten(30)\r\n\t\tconst redPrice = RED.lighten(30) \r\n\t\tcard.onDraw(() => {\r\n\t\t\tdrawText({\r\n\t\t\t\ttext: `${card.price}\u2726`,\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\tanchor: \"center\",\r\n\t\t\t\tpos: vec2(0, 35),\r\n\t\t\t\tsize: 26,\r\n\t\t\t\tscale: card.scale,\r\n\t\t\t\tcolor: GameState.ascension.mana >= card.price ? greenPrice : redPrice\r\n\t\t\t})\r\n\r\n\t\t\tif (!(card.type == \"hexColorCard\" || card.type == \"bgColorCard\")) {\r\n\t\t\t\tdrawText({\r\n\t\t\t\t\ttext: `+${card.additive}%`,\r\n\t\t\t\t\tsize: 15,\r\n\t\t\t\t\tcolor: BLACK,\r\n\t\t\t\t\talign: \"left\",\r\n\t\t\t\t\tpos: vec2(-59, -82)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\treturn card;\r\n}\r\n\r\n// is the part where they're dealt and send to their corresponding positions\r\n// in deck\r\nexport function spawnCards() {\r\n\tconst cardSpacing = 150;\r\n\t\r\n\t// from left to right\r\n\tlet cardsToAdd = [\r\n\t\t\"clickersCard\",\r\n\t\t\"cursorsCard\",\r\n\t\t!isWindowUnlocked(\"hexColorWin\") ? \"hexColorCard\" : \"powerupsCard\",\r\n\t\t!isWindowUnlocked(\"bgColorWin\") ? \"bgColorCard\" : \"critsCard\"\r\n\t]\r\n\r\n\t// now add the cards\r\n\tlet dealingXPosition = 947;\r\n\tplaySfx(\"allcards\", { detune: rand(-25, 25) })\r\n\tcardsToAdd.forEach((cardToAdd, index) => {\r\n\t\tlet card = addCard(cardToAdd, vec2(dealingXPosition, cardYPositions.hidden))\r\n\t\tcard.angle = rand(-4, 4)\r\n\t\tcard.pos.x = dealingXPosition + rand(-5, 5)\r\n\t\tcard.pos.y = cardYPositions.hidden\r\n\t\tcard.indexInDeck = index\r\n\r\n\t\t// put it in the dealing position\r\n\t\tlet randOffset = rand(-5, 5)\r\n\t\ttween(card.pos.y, cardYPositions.dealing + randOffset, 0.75, (p) => card.pos.y = p, easings.easeOutQuint)\r\n\r\n\t\tfunction dealTheCards() {\r\n\t\t\t// now, deal them to them places\r\n\t\t\twait(0.25 * card.indexInDeck, () => {\r\n\t\t\t\tfunction getCardXPos(index:number) {\r\n\t\t\t\t\tlet startPoint = 492\r\n\t\t\t\t\treturn (startPoint + cardSpacing) + cardSpacing * (index - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaySfx(\"onecard\", { detune: rand(-25, 25) * card.indexInDeck})\r\n\t\t\t\ttween(card.angle, rand(-1.5, 1.5), 0.25, (p) => card.angle = p, easings.easeOutQuart)\r\n\t\t\t\r\n\t\t\t\t// pos\r\n\t\t\t\ttween(card.pos.x, getCardXPos(card.indexInDeck), 0.25, (p) => card.pos.x = p, easings.easeOutQuart)\r\n\t\t\t\ttween(card.pos.y, cardYPositions.unhovered, 0.25, (p) => card.pos.y = p, easings.easeOutQuart)\r\n\t\t\t\t\r\n\t\t\t\t// turn it over\r\n\t\t\t\ttween(card.scale.x, 0, 0.25, (p) => card.scale.x = p, easings.easeOutQuart).onEnd(() => {\r\n\t\t\t\t\tcard.sprite = typeToSprite(card.type)\r\n\t\t\t\t\t\r\n\t\t\t\t\ttween(card.scale.x, 1, 0.25, (p) => card.scale.x = p, easings.easeOutQuart).onEnd(() => {\r\n\t\t\t\t\t\tcard.area.scale = vec2(1)\r\n\t\t\t\t\t\tcard.trigger(\"dealingOver\")\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// wait\r\n\t\twait(0.75, () => {\r\n\t\t\tdealTheCards()\r\n\t\t})\r\n\t})\r\n}\r\n", "// # by amyspark-ng\r\n\r\nexport function positionSetter() {\r\n\treturn {\r\n\t\tid: \"setterAnimation\",\r\n\t\tdistance: 1,\r\n\t\trequire: [\"pos\"],\r\n\t\tupdate() {\r\n\t\t\tif (this.parent.is(\"setterAnimation\")) return\r\n\t\t\t\r\n\t\t\tif (isKeyDown(\"shift\") && isKeyDown(\"control\")) this.distance = 50\r\n\t\t\telse if (isKeyDown(\"shift\")) this.distance = 5\r\n\t\t\telse if (isKeyDown(\"control\")) this.distance = 10 \r\n\t\t\telse this.distance = 1\r\n\r\n\t\t\tif (isKeyPressedRepeat(\"up\")) {\r\n\t\t\t\tthis.pos.y -= this.distance\r\n\t\t\t\tdebug.log(this.pos)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (isKeyPressedRepeat(\"down\")) {\r\n\t\t\t\tthis.pos.y += this.distance\r\n\t\t\t\tdebug.log(this.pos)\r\n\t\t\t}\r\n\r\n\t\t\tif (isKeyPressedRepeat(\"left\")) {\r\n\t\t\t\tthis.pos.x -= this.distance\r\n\t\t\t\tdebug.log(this.pos)\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (isKeyPressedRepeat(\"right\")) {\r\n\t\t\t\tthis.pos.x += this.distance\r\n\t\t\t\tdebug.log(this.pos)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tadd() {\r\n\t\t\t// this.use(area())\r\n\t\t\t// this.use(drag())\r\n\t\t}\r\n\t}\r\n}", "// # found in kaplay examples\r\n\r\nimport { Color, Vec2 } from \"kaplay\"\r\n\r\nconst DEF_COUNT = 80\r\nconst DEF_GRAVITY = 800\r\nconst DEF_AIR_DRAG = 0.9\r\nconst DEF_VELOCITY = [1000, 4000]\r\nconst DEF_ANGULAR_VELOCITY = [-200, 200]\r\nconst DEF_FADE = 0.3\r\nconst DEF_SPREAD = 60\r\nconst DEF_SPIN = [2, 8]\r\nconst DEF_SATURATION = 0.7\r\nconst DEF_LIGHTNESS = 0.6\r\n\r\ntype confettiOpt = {\r\n\tcount?: number\r\n\tgravity?: number\r\n\tpos: Vec2\r\n\tairDrag?: number\r\n\tvelocity?: number,\r\n\tangularVelocity?: number,\r\n\tcolor?: Color\r\n\theading?: number\r\n\tspread?: number\r\n\tfade?: number\r\n\tspin?: number\r\n\tsaturation?: number\r\n\tlightness?: number\r\n}\r\n\r\nexport function addConfetti(opt:confettiOpt) {\r\n\tconst sample = (s) => typeof s === \"function\" ? s() : s\r\n\tfor (let i = 0; i < (opt.count ?? DEF_COUNT); i++) {\r\n\t\tconst p = add([\r\n\t\t\tpos(sample(opt.pos ?? vec2(0, 0))),\r\n\t\t\tchoose([\r\n\t\t\t\trect(rand(5, 20), rand(5, 20)),\r\n\t\t\t\tcircle(rand(3, 10)),\r\n\t\t\t]),\r\n\t\t\tcolor(sample(opt.color ?? hsl2rgb(rand(0, 1), DEF_SATURATION, DEF_LIGHTNESS))),\r\n\t\t\topacity(1),\r\n\t\t\tlifespan(4),\r\n\t\t\tscale(1),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\trotate(rand(0, 360)),\r\n\t\t])\r\n\t\tconst spin = rand(DEF_SPIN[0], DEF_SPIN[1])\r\n\t\tconst gravity = opt.gravity ?? DEF_GRAVITY\r\n\t\tconst airDrag = opt.airDrag ?? DEF_AIR_DRAG\r\n\t\tconst heading = sample(opt.heading ?? 0) - 90\r\n\t\tconst spread = opt.spread ?? DEF_SPREAD\r\n\t\tconst head = heading + rand(-spread / 2, spread / 2)\r\n\t\tconst fade = opt.fade ?? DEF_FADE\r\n\t\tconst vel = sample(opt.velocity ?? rand(DEF_VELOCITY[0], DEF_VELOCITY[1]))\r\n\t\tlet velX = Math.cos(deg2rad(head)) * vel\r\n\t\tlet velY = Math.sin(deg2rad(head)) * vel\r\n\t\tconst velA = sample(opt.angularVelocity ?? rand(DEF_ANGULAR_VELOCITY[0], DEF_ANGULAR_VELOCITY[1]))\r\n\t\tp.onUpdate(() => {\r\n\t\t\tvelY += gravity * dt()\r\n\t\t\tp.pos.x += velX * dt()\r\n\t\t\tp.pos.y += velY * dt()\r\n\t\t\tp.angle += velA * dt()\r\n\t\t\tp.opacity -= fade * dt()\r\n\t\t\tvelX *= airDrag\r\n\t\t\tvelY *= airDrag\r\n\t\t\tp.scale.x = wave(-1, 1, time() * spin)\r\n\t\t})\r\n\t}\r\n}", "// =========================\r\n// INSIDE HOVER WINDOW COMPONENT\r\n\r\nimport { AreaComp, GameObj } from \"kaplay\"\r\nimport { curDraggin } from \"../plugins/drag\"\r\n\r\n// =========================\r\nexport function insideWindowHover(winParent:GameObj) {\r\n\t\r\n\t// doesn't take in account mouse animations, do it by yourself in the hover function!!\r\n\treturn {\r\n\t\tid: \"insideHover\",\r\n\t\trequire: [\"area\"],\r\n\t\tisBeingHovered: false,\r\n\t\r\n\t\tstartHoverAnim: null,\r\n\t\tendHoverAnim: null,\r\n\r\n\t\tstartHoverFunction: null,\r\n\t\tendHoverFunction: null,\r\n\t\twinParent: winParent,\r\n\r\n\t\tadd() {\r\n\t\t\tthis.startHoverFunction = function() {\r\n\t\t\t\tif (this.isBeingHovered == false) {\r\n\t\t\t\t\tthis.startHoverAnim()\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.trigger(\"insideHoverStart\")\r\n\t\t\t\t\tthis.isBeingHovered = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.endHoverFunction = function () {\r\n\t\t\t\tif (this.isBeingHovered == true) {\r\n\t\t\t\t\tthis.endHoverAnim()\r\n\r\n\t\t\t\t\tthis.trigger(\"insideHoverEnd\")\r\n\t\t\t\t\tthis.isBeingHovered = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onHover(() => {\r\n\t\t\t\tif (curDraggin) return\r\n\t\t\t\tif (this.winParent.active == false) return\r\n\t\t\t\t// only check for these conditions here\r\n\t\t\t\t// if (allObjWindows.isHoveringAWindow == false && allObjWindows.isDraggingAWindow == false) {\r\n\t\t\t\t\tthis.startHoverFunction()\r\n\t\t\t\t// }\r\n\t\t\t})\r\n\r\n\t\t\tthis.onHoverEnd(() => {\r\n\t\t\t\tif (this.dragging == true) return\r\n\t\t\t\tif (this.winParent.active == false) return\r\n\t\t\t\tthis.endHoverFunction()\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tstartingHover(action: () => void) {\r\n\t\t\tthis.startHoverAnim = action\r\n\t\t\t// return this.on(\"outsideHoverStart\")\r\n\t\t},\r\n\r\n\t\tendingHover(action: () => void) {\r\n\t\t\tthis.endHoverAnim = action\r\n\t\t\t// return this.on(\"outsideHoverEnd\")\r\n\t\t}\r\n\t}\r\n}", "import { GameState, scoreManager } from \"../../../gamestate\";\r\nimport { ROOT } from \"../../../main\";\r\nimport { playSfx, sfxHandlers } from \"../../../sound\";\r\nimport { addTooltip } from \"../../additives\";\r\nimport { insideWindowHover } from \"../../hovers/insideWindowHover\";\r\nimport { positionSetter } from \"../../plugins/positionSetter\";\r\nimport { blendColors, bop, formatNumber, getPositionOfSide, getRandomDirection, insertAtStart, parseAnimation } from \"../../utils\";\r\n\r\nexport let upgradeInfo = {\r\n\t\"k_0\": { value: 2, price: 500 },\r\n\t\"k_1\": { value: 4, price: 5_000 }, // TODO: look into this, between first and second there's a 5x gap, i think that's good\r\n\t\"k_2\": { value: 8, price: 10_000 },\r\n\t// ending\r\n\t\"k_3\": { value: 16, price: 150_000,},\r\n\t\"k_4\": { value: 32, price: 600_000,},\r\n\t\"k_5\": { value: 64, price: 750_000,},\r\n\t// freq\r\n\t\"c_0\": { freq: 10 }, // 10 seconds\r\n\t\"c_1\": { freq: 5, price: 250_000 }, // 5 seconds\r\n\t\"c_2\": { freq: 1, price: 500_000 }, // 1 second\r\n\t// cursor values\r\n\t\"c_3\": { value: 16, price: 50_000 }, \r\n\t\"c_4\": { value: 32, price: 100_000 },\r\n\t\"c_5\": { value: 64, price: 500_000 },\r\n}\r\n\r\nexport function isUpgradeBought(id:string):boolean {\r\n\treturn (GameState.upgradesBought.includes(id))\r\n}\r\n\r\nexport function addUpgrades(elementParent) {\r\n\tlet winParent = elementParent.parent;\r\n\t\r\n\tlet initialPos = vec2(-27.5, -31.5)\r\n\tlet desiredPos = vec2(initialPos.x, initialPos.y)\r\n\tlet spacing = vec2(55)\r\n\r\n\tfor (let i = 0; i < 6; i++) {\r\n\t\t// crazy grid placement\r\n\t\tif (i == 3) {desiredPos.y += spacing.y; desiredPos.x = initialPos.x}\r\n\t\tdesiredPos.x += spacing.x\r\n\t\t\r\n\t\tlet progressSound = null\r\n\t\t\r\n\t\tlet downEvent = null\r\n\t\t\r\n\t\tlet elementColor = elementParent.is(\"clickersElement\") ? rgb(49, 156, 222) : rgb(49, 222, 58)\r\n\t\tlet newColor = blendColors(elementColor.lighten(310), elementColor, map(i, 0, 6, 0.5, 1))\r\n\t\t\r\n\t\tlet upgradeObj = elementParent.add([\r\n\t\t\tsprite(\"upgrade\"),\r\n\t\t\tpos(desiredPos),\r\n\t\t\tcolor(newColor),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tscale(1),\r\n\t\t\tz(winParent.z + 1),\r\n\t\t\tarea({ scale: vec2(1.15, 1.15) }),\r\n\t\t\toutline(5, BLACK),\r\n\t\t\tinsideWindowHover(elementParent.parent),\r\n\t\t\t\"upgrade\",\r\n\t\t\t{\r\n\t\t\t\ttype: elementParent.is(\"clickersElement\") ? \"k_\" : \"c_\",\r\n\t\t\t\tidx: i,\r\n\t\t\t\t// is setted below\r\n\t\t\t\tvalue: null, \r\n\t\t\t\tfreq: null, \r\n\t\t\t\tid: \"\",\r\n\t\t\t\tprice: 0,\r\n\t\t\t\t\r\n\t\t\t\tboughtProgress: 0,\r\n\t\t\t\t\r\n\t\t\t\tmanageBlinkText(texty:string = \"missing a text there buddy\") {\r\n\t\t\t\t\tlet thisUpgrade = this\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction addT() {\r\n\t\t\t\t\t\tlet stacksText = thisUpgrade.parent.get(\"stacksText\")[0]\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// blinking\r\n\t\t\t\t\t\tlet blinkingText = elementParent.add([\r\n\t\t\t\t\t\t\ttext(\"+0\", { align: \"left\", size: stacksText.textSize + 4 }),\r\n\t\t\t\t\t\t\tpos(),\r\n\t\t\t\t\t\t\tcolor(BLACK),\r\n\t\t\t\t\t\t\tanchor(\"left\"),\r\n\t\t\t\t\t\t\tlayer(\"windows\"),\r\n\t\t\t\t\t\t\topacity(),\r\n\t\t\t\t\t\t\tpositionSetter(),\r\n\t\t\t\t\t\t\t\"blinkText\",\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tupgradeId: thisUpgrade.id,\r\n\t\t\t\t\t\t\t\tupdate() {\r\n\t\t\t\t\t\t\t\t\tthis.text = texty\r\n\t\t\t\t\t\t\t\t\tthis.opacity = wave(0.25, 1, time() * 8)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t])\r\n\t\r\n\t\t\t\t\t\t// is a regular upgraade\r\n\t\t\t\t\t\tif (thisUpgrade.freq == null) {\r\n\t\t\t\t\t\t\tblinkingText.pos.x = -56\r\n\t\t\t\t\t\t\tblinkingText.pos.y = stacksText.pos.y - 15\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// frequency\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tblinkingText.pos.x = -56\r\n\t\t\t\t\t\t\tblinkingText.pos.y = 56\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfunction end() {\r\n\t\t\t\t\t\telementParent.get(\"blinkText\", { recursive: true }).filter((t) => t.upgradeId == thisUpgrade.id).forEach((t) => t.destroy())\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn { addT, end }\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdropBuy() {\r\n\t\t\t\t\ttween(this.scale, this.isHovering() ? vec2(1.1) : vec2(1), 0.15, (p) => this.scale = p, easings.easeOutQuad)\r\n\t\t\t\t\ttween(this.boughtProgress, 0, 0.15, (p) => this.boughtProgress = p, easings.easeOutQuad)\r\n\t\t\t\t\tthis.trigger(\"dropBuy\")\r\n\t\t\t\t\tdownEvent?.cancel()\r\n\t\t\t\t\tdownEvent = null\r\n\t\t\t\t},\r\n\r\n\t\t\t\tbuy() {\r\n\t\t\t\t\tthis.tooltip?.end()\r\n\t\t\t\t\t\r\n\t\t\t\t\tGameState.upgradesBought.push(this.id)\r\n\t\t\t\t\tplaySfx(\"kaching\", { detune: 25 * this.idx })\r\n\t\t\t\t\ttween(this.scale, vec2(1.1), 0.15, (p) => this.scale = p, easings.easeOutQuad)\r\n\t\t\t\t\r\n\t\t\t\t\tif (this.type == \"k_\") {\r\n\t\t\t\t\t\tif (GameState.clicksUpgradesValue == 1) GameState.clicksUpgradesValue += this.value - 1\r\n\t\t\t\t\t\telse GameState.clicksUpgradesValue += this.value \r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if (this.type == \"c_\") {\r\n\t\t\t\t\t\tif (this.value != null) {\r\n\t\t\t\t\t\t\tif (GameState.cursorsUpgradesValue == 1) GameState.cursorsUpgradesValue += this.value - 1\r\n\t\t\t\t\t\t\telse GameState.cursorsUpgradesValue += this.value \r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if (this.freq != null) GameState.timeUntilAutoLoopEnds = this.freq\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tscoreManager.subTweenScore(this.price)\r\n\t\t\t\t\tROOT.trigger(\"buy\", { element: \"upgrade\", id: this.id, price: this.price })\r\n\t\t\t\t\tthis.trigger(\"buy\")\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdraw() {\r\n\t\t\t\t\tdrawText({\r\n\t\t\t\t\t\ttext: this.freq != null ? `${this.freq}s` : `x${this.value}`,\r\n\t\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\t\tfont: \"lambda\",\r\n\t\t\t\t\t\tsize: this.height / 2,\r\n\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (isUpgradeBought(upgradeObj.id)) return\r\n\t\t\t\t\t// draw the bought progress bar\r\n\t\t\t\t\tdrawRect({\r\n\t\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\t\theight: map(this.boughtProgress, 0, 100, this.height, 0),\r\n\t\t\t\t\t\tanchor: \"bot\",\r\n\t\t\t\t\t\tradius: 10,\r\n\t\t\t\t\t\tcolor: BLACK,\r\n\t\t\t\t\t\topacity: map(this.boughtProgress, 0, 100, 0.5, 0.05),\r\n\t\t\t\t\t\tpos: vec2(0, this.height / 2),\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// draw lock\r\n\t\t\t\t\tdrawSprite({\r\n\t\t\t\t\t\tsprite: \"upgradelock\",\r\n\t\t\t\t\t\tpos: vec2((upgradeObj.width / 2), (-upgradeObj.height / 2) + 5),\r\n\t\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\t\tscale: vec2(0.7),\r\n\t\t\t\t\t\tcolor: GameState.score >= this.price ? GREEN.lighten(100) : RED.lighten(100),\r\n\t\t\t\t\t\topacity: map(this.boughtProgress, 0, 100, 1, 0.10),\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinspect() {\r\n\t\t\t\t\treturn `upgradeId: ${this.id}`\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t])\r\n\r\n\t\tconst addedPosition = upgradeObj.pos\r\n\t\t\r\n\t\t// sets info like id price and value/freq\r\n\t\tupgradeObj.id = upgradeObj.type + upgradeObj.idx\r\n\t\tupgradeObj.price = upgradeInfo[upgradeObj.id].price\r\n\t\t\r\n\t\tif (upgradeObj.type == \"k_\") upgradeObj.value = upgradeInfo[upgradeObj.id].value\r\n\t\telse if (upgradeObj.type == \"c_\") {\r\n\t\t\tif (upgradeObj.idx > -1 && upgradeObj.idx < 3) upgradeObj.freq = upgradeInfo[upgradeObj.id].freq\r\n\t\t\telse upgradeObj.value = upgradeInfo[upgradeObj.id].value\r\n\t\t}\r\n\r\n\t\tupgradeObj.outline.color = upgradeObj.color.darken(10)\r\n\r\n\t\tlet upgradeTooltip = null\r\n\r\n\t\tconst addPriceTooltip = () => {\r\n\t\t\tlet tooltip = addTooltip(upgradeObj, {\r\n\t\t\t\ttext: `${formatNumber(upgradeObj.price, { price: true, fixAmount: 0 })}`,\r\n\t\t\t\ttextSize: upgradeObj.height / 2,\r\n\t\t\t\tdirection: \"down\",\r\n\t\t\t\tlerpValue: 0.95,\r\n\t\t\t\ttype: \"price\",\r\n\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\tz: winParent.z\r\n\t\t\t})\r\n\r\n\t\t\ttooltip.tooltipText.onUpdate(() => {\r\n\t\t\t\tGameState.score >= upgradeObj.price ? tooltip.tooltipText.color = GREEN : tooltip.tooltipText.color = RED\r\n\t\t\t})\r\n\r\n\t\t\ttooltip.tooltipBg.z += 1\r\n\t\t\t\r\n\t\t\treturn tooltip;\r\n\t\t}\r\n\t\t\r\n\t\tupgradeObj.startingHover(() => {\r\n\t\t\tupgradeObj.parent.endHoverFunction()\r\n\t\t\t\r\n\t\t\t// animation\r\n\t\t\ttween(upgradeObj.parent.opacity, 0.9, 0.15, (p) => upgradeObj.parent.opacity = p, easings.easeOutQuad)\r\n\t\t\ttween(upgradeObj.scale, vec2(1.1), 0.15, (p) => upgradeObj.scale = p, easings.easeOutQuad)\r\n\t\t\r\n\t\t\t// tooltips\r\n\t\t\tlet textInBlink = upgradeObj.value != null ? `+${upgradeObj.value}` : `Clicks every ${upgradeObj.freq} ${upgradeObj.freq > 1 ? \"seconds\" : \"second\"}`;\r\n\t\t\t\r\n\t\t\tif (!isUpgradeBought(upgradeObj.id)) {\r\n\t\t\t\tif (upgradeObj.tooltip == null) {\r\n\t\t\t\t\tupgradeTooltip = addPriceTooltip()\r\n\t\t\t\t\tupgradeObj.manageBlinkText(textInBlink).addT()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tupgradeObj.endingHover(() => {\r\n\t\t\tupgradeObj.parent.startHoverFunction()\r\n\t\t\t\r\n\t\t\ttween(upgradeObj.parent.opacity, 1, 0.15, (p) => upgradeObj.parent.opacity = p, easings.easeOutQuad)\r\n\r\n\t\t\tif (!isUpgradeBought(upgradeObj.id) && upgradeObj.boughtProgress > 0 && GameState.score >= upgradeObj.price) upgradeObj.dropBuy()\r\n\t\t\ttween(upgradeObj.scale, vec2(1), 0.15, (p) => upgradeObj.scale = p, easings.easeOutQuad)\r\n\t\t\t\r\n\t\t\tif (upgradeObj.tooltip != null) {\r\n\t\t\t\tupgradeObj.tooltip?.end()\r\n\t\t\t\tupgradeObj.manageBlinkText().end()\r\n\t\t\t}\r\n\r\n\t\t\t// cursor animation is managed by the store element in that case\r\n\t\t})\r\n\t\t\r\n\t\tupgradeObj.onClick(() => {\r\n\t\t\tif (!winParent.active) return\r\n\r\n\t\t\tif (isUpgradeBought(upgradeObj.id)) {\r\n\t\t\t\tbop(upgradeObj)\r\n\t\t\t\tupgradeObj.trigger(\"dummyClick\")\r\n\r\n\t\t\t\t// add a little particle silly\r\n\t\t\t\tlet sillyParticle = elementParent.add([\r\n\t\t\t\t\tsprite(\"cursors\"),\r\n\t\t\t\t\topacity(),\r\n\t\t\t\t\tpos(upgradeObj.pos.x, upgradeObj.pos.y - upgradeObj.height / 2 + 5),\r\n\t\t\t\t\tanchor(\"center\"),\r\n\t\t\t\t\tz(upgradeObj.z - 1),\r\n\t\t\t\t\tscale(rand(0.25, 0.5)),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupdate() {\r\n\t\t\t\t\t\t\tthis.pos.y -= 1.5\r\n\t\t\t\t\t\t\tthis.pos.x = wave(upgradeObj.pos.x - 5, upgradeObj.pos.x + 5, time() * 5)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (this.pos.y < getPositionOfSide(upgradeObj).top) this.z = upgradeObj.z + 1\r\n\t\t\t\t\t\t\telse this.z = upgradeObj.z - 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t])\r\n\r\n\t\t\t\tsillyParticle.fadeIn(0.1).onEnd(() => sillyParticle.fadeOut(0.25).onEnd(() => sillyParticle.destroy()))\r\n\t\t\t\t\r\n\t\t\t\tif (upgradeObj.type == \"k_\") parseAnimation(sillyParticle, \"cursors.cursor\")\r\n\t\t\t\telse if (upgradeObj.type == \"c_\") parseAnimation(sillyParticle, \"cursors.point\")\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// hasn't bought it\r\n\t\t\telse {\r\n\t\t\t\tif (upgradeObj.id == \"c_2\" && !isUpgradeBought(\"c_1\")) {\r\n\t\t\t\t\t// remove all tooltips that are not buy previous one\r\n\t\t\t\t\tupgradeObj.tooltip.end()\r\n\r\n\t\t\t\t\taddTooltip(upgradeObj, {\r\n\t\t\t\t\t\ttext: \"You have to buy the previous one\",\r\n\t\t\t\t\t\ttextSize: upgradeObj.height / 2,\r\n\t\t\t\t\t\tdirection: \"down\",\r\n\t\t\t\t\t\tlerpValue: 0.65,\r\n\t\t\t\t\t\ttype: \"store\",\r\n\t\t\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\t\t\tz: winParent.z\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tupgradeObj.trigger(\"dummyClick\")\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn // end the event\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\telse if (GameState.score < upgradeObj.price) {\r\n\t\t\t\t\tupgradeObj.trigger(\"notEnoughMoney\")\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (GameState.score >= upgradeObj.price) {\r\n\t\t\t\t\tprogressSound?.stop()\r\n\t\t\t\t\tprogressSound = playSfx(\"progress\")\t\t\r\n\r\n\t\t\t\t\t// down event\r\n\t\t\t\t\tdownEvent = upgradeObj.onMouseDown(() => {\r\n\t\t\t\t\t\tif (isUpgradeBought(upgradeObj.id)) return\r\n\t\t\t\t\t\tif (upgradeObj.boughtProgress >= 5) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (upgradeObj.tooltip.type == \"storeholddowntobuy\") {\r\n\t\t\t\t\t\t\t\tupgradeObj.tooltip.end()\r\n\t\t\t\t\t\t\t\taddPriceTooltip()\r\n\t\t\t\t\t\t\t\t// there's a tutorial tooltip, get rid of it\r\n\t\r\n\t\t\t\t\t\t\t\tprogressSound?.stop()\r\n\t\t\t\t\t\t\t\tprogressSound = playSfx(\"progress\", { detune: upgradeObj.boughtProgress })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (upgradeObj.boughtProgress < 100) {\r\n\t\t\t\t\t\t\tupgradeObj.boughtProgress += 2 // time to hold\r\n\t\t\t\t\t\t\tupgradeObj.scale.x = map(upgradeObj.boughtProgress, 0, 100, 1.1, 0.85)\r\n\t\t\t\t\t\t\tupgradeObj.scale.y = map(upgradeObj.boughtProgress, 0, 100, 1.1, 0.85)\r\n\t\t\t\t\t\t\tprogressSound.detune = (upgradeObj.boughtProgress * upgradeObj.idx / 2) + 1\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tif (upgradeObj.boughtProgress >= 100) {\r\n\t\t\t\t\t\t\tupgradeObj.buy()\r\n\t\t\t\t\t\t\tupgradeObj.manageBlinkText().end()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tupgradeObj.onMouseRelease(() => {\r\n\t\t\tif (!winParent.active) return\r\n\t\t\r\n\t\t\tif (isUpgradeBought(upgradeObj.id)) return\r\n\t\t\tif (!upgradeObj.isHovering()) return\r\n\t\t\tupgradeObj.dropBuy()\r\n\r\n\t\t\tif (GameState.score >= upgradeObj.price) {\r\n\t\t\t\t// this is what happens when you click several times but you're not buying!!\r\n\t\t\t\t// you're confused!!!!!\r\n\r\n\t\t\t\tif (upgradeObj.boughtProgress < 1) {\r\n\t\t\t\t\tupgradeObj.tooltip?.end()\r\n\r\n\t\t\t\t\tlet tutorialTooltip = addTooltip(upgradeObj, {\r\n\t\t\t\t\t\ttext: \"Hold down to buy!\",\r\n\t\t\t\t\t\tlerpValue: 0.75,\r\n\t\t\t\t\t\ttype: \"storeholddowntobuy\",\r\n\t\t\t\t\t\tdirection: \"down\",\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupgradeObj.trigger(\"dummyClick\")\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tupgradeObj.on(\"notEnoughMoney\", () => {\r\n\t\t\t// opts.pos is the position it was added to\r\n\t\t\tconst direction = getRandomDirection(addedPosition, false, 1.25)\r\n\t\t\ttween(direction, addedPosition, 0.25, (p) => upgradeObj.pos = p, easings.easeOutQuint)\r\n\t\t\ttween(choose([-15, 15]), 0, 0.25, (p) => upgradeTooltip.tooltipText.angle = p, easings.easeOutQuint)\r\n\t\t\tplaySfx(\"wrong\", { detune: rand(25, 75) })\r\n\t\t})\r\n\r\n\t\tupgradeObj.on(\"dropBuy\", () => {\r\n\t\t\tif (progressSound != null || progressSound != undefined) {\r\n\t\t\t\ttween(progressSound.volume, 0, 0.35, (p) => progressSound.volume = p).onEnd(() => {\r\n\t\t\t\t\tprogressSound.stop()\r\n\t\t\t\t})\r\n\t\t\t\tsfxHandlers.delete(progressSound)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tupgradeObj.on(\"dummyClick\", () => {\r\n\t\t\ttween(choose([-15, 15]), 0, 0.15, (p) => upgradeObj.angle = p, easings.easeOutQuint)\r\n\t\t\tplaySfx(\"clickButton\", { detune: rand(-25, 25) })\r\n\t\t})\r\n\r\n\t\t// draw dumb shadow\r\n\t\tlet drawShadow = elementParent.onDraw(() => {\r\n\t\t\tdrawSprite({\r\n\t\t\t\tsprite: upgradeObj.sprite,\r\n\t\t\t\topacity: 0.25,\r\n\t\t\t\tpos: vec2(upgradeObj.pos.x, upgradeObj.pos.y + 2),\r\n\t\t\t\tanchor: upgradeObj.anchor,\r\n\t\t\t\tcolor: BLACK,\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n}", "import { GameState } from \"../../gamestate\";\r\nimport { waver } from \".././plugins/wave\";\r\nimport { musicHandler, playMusic, playSfx, scratchSong } from \"../../sound\";\r\nimport { isAchievementUnlocked } from \"../unlockables/achievements\";\r\nimport { bop, formatTime } from \"../utils\";\r\n\r\nexport let songs = {\r\n\t\"clicker.wav\": { name: \"clicker.wav\", idx: 0, speed: 2.5, cover: \"wav\", duration: 61},\r\n\t\"menu.wav\": { name: \"menu.wav\", idx: 1, speed: 1.6, cover: \"wav\", duration: 36 },\r\n\t\"whatttt.wav\": { name: \"whatttt.wav\", idx: 2, speed: 2, cover: \"wav\", duration: 51},\r\n\t\"simple.wav\": { name: \"simple.wav\", idx: 3, speed: 1.3, cover: \"wav\", duration: 99},\r\n\t\"jazz.wav\": { name: \"jazz.wav\", idx: 4, speed: 2.1, cover: \"wav\", duration: 43},\r\n\t\"sweet.wav\": { name: \"sweet.wav\", idx: 5, speed: 2.5, cover: \"wav\", duration: 46},\r\n\t\"ok_instrumental\": { name: \"ok (Inst)\", idx: 6, speed: 2, cover: \"ok\", duration: 102},\r\n\t\"magic\": { name: \"magic.\", idx: 7, speed: 1, cover: \"bb1\", duration: 46},\r\n\t\"watchout\": { name: \"Watch out!\", idx: 8, speed: 2.4, cover: \"bb2\", duration: 49,},\r\n\t\"catnip\": { name: \"catnip\", idx: 9, speed: 2.1, cover: \"cat\", duration: 67},\r\n\t\"project_23\": { name: \"Project_23\", idx: 10, speed: 2.1, cover: \"bb3\", duration: 45},\r\n}\r\n\r\nexport let songsListened = [];\r\nexport let currentSongIdx = 0\r\n\r\nexport let progressBar;\r\nexport let timeText;\r\n\r\n// don't mess up with timeSinceSkip, don't reset when window enter\r\nexport let timeSinceSkip = 0;\r\nlet skipping = false;\r\n\r\n// important don't delete\r\nexport function setTimeSinceSkip(value = 0) {\r\n\ttimeSinceSkip = value\r\n}\r\n\r\n// such a nitpick! :/\r\nlet angleOfDisc = 0\r\nexport function musicWinContent(winParent) {\r\n\tcurrentSongIdx = GameState.settings.music.favoriteIdx == null ? 0 : GameState.settings.music.favoriteIdx\r\n\t\r\n\tlet currentSong = songs[Object.keys(songs)[currentSongIdx]]\r\n\r\n\tfunction checkForSongListen(songIdx) {\r\n\t\tif (songsListened.includes(songIdx) == false) songsListened.push(songIdx)\r\n\t}\r\n\r\n\tif (!isAchievementUnlocked(\"allsongs\")) {\r\n\t\tcheckForSongListen(currentSongIdx)\r\n\t}\r\n\r\n\tlet disc = winParent.add([\r\n\t\tsprite(\"discs\", {\r\n\t\t\tanim: `${songs[Object.keys(songs)[currentSongIdx]].cover}`\r\n\t\t}),\r\n\t\tpos(-150, -20),\r\n\t\trotate(angleOfDisc),\r\n\t\tanchor(\"center\"),\r\n\t\tscale(1),\r\n\t\tarea(),\r\n\t\t\"bpmChange\",\r\n\t\t\"pauseButton\",\r\n\t\t\"musicButton\",\r\n\t\t\"windowButton\",\r\n\t\t{\r\n\t\t\tverPosition: -20,\r\n\t\t\tspinSpeed: musicHandler.paused ? 0 : songs[Object.keys(songs)[currentSongIdx]].speed,\r\n\t\t\tupdate() {\r\n\t\t\t\tif (musicHandler.winding || skipping) return\r\n\t\t\t\tthis.angle += this.spinSpeed\r\n\t\t\t\tif (Math.floor(this.angle) % 360 == 0) this.angle = 0\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet nowPlaying = winParent.add([\r\n\t\tpos(-50, -25),\r\n\t\ttext(Object.keys(songs)[0], {\r\n\t\t\tsize: 20,\r\n\t\t\tstyles: {\r\n\t\t\t\t\"small\": {\r\n\t\t\t\t\tscale: vec2(0.8),\r\n\t\t\t\t\tpos: vec2(0, 4)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tanchor(\"left\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = `${songs[Object.keys(songs)[currentSongIdx]].idx + 1}. ${songs[Object.keys(songs)[currentSongIdx]].name} ${musicHandler.paused && !musicHandler.winding? \"(PAUSED)\" : \"\"}`\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet theOneBehind = winParent.add([\r\n\t\trect(winParent.width - 50, 10, { radius: 20 }),\r\n\t\tpos(0, 25),\r\n\t\tarea(),\r\n\t\tcolor(),\r\n\t\tarea({ scale: vec2(1, 1.25) }),\r\n\t\topacity(1),\r\n\t\tanchor(\"center\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.color = progressBar.color.darken(150)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\ttimeText = winParent.add([\r\n\t\ttext(\"0:00\", {\r\n\t\t\tsize: 20,\r\n\t\t}),\r\n\t\tpos(-120, 50),\r\n\t\tanchor(\"center\"),\r\n\t\t\"bpmChange\",\r\n\t\t{\r\n\t\t\tverPosition: 50,\r\n\t\t\tupdate() {\r\n\t\t\t\tlet time = `${formatTime(musicHandler.currentTime, false)}/${formatTime(musicHandler.totalTime === undefined ? musicHandler.duration() : musicHandler.totalTime, false)}`\r\n\t\t\t\tthis.text = time;\r\n\t\t\t\tif (!musicHandler.winding) musicHandler.currentTime = map(progressBar.width, 0, theOneBehind.width, 0, musicHandler.duration())\r\n\t\t\t\tif (!musicHandler.winding) musicHandler.totalTime = songs[Object.keys(songs)[currentSongIdx]].duration\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\tprogressBar = winParent.add([\r\n\t\trect(1, 10, { radius: 10 }),\r\n\t\tpos(theOneBehind.pos.x - theOneBehind.width / 2, theOneBehind.pos.y),\r\n\t\tcolor(WHITE),\r\n\t\tanchor(\"left\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (musicHandler.winding) return\r\n\t\t\t\tthis.width = musicHandler.time() / musicHandler.duration() * theOneBehind.width\r\n\t\t\t},\r\n\r\n\t\t\tdraw() {\r\n\t\t\t\tdrawCircle({\r\n\t\t\t\t\tpos: vec2(this.width, 0),\r\n\t\t\t\t\tradius: 8,\r\n\t\t\t\t\tcolor: this.color,\r\n\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\topacity: this.opacity\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\t// theOneBehind.color = progressBar.color\r\n\r\n\tlet backButton = winParent.add([\r\n\t\ttext(\"<\", {\r\n\t\t\tsize: 40\r\n\t\t}),\r\n\t\tpos(-30, 60),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\t\"musicButton\",\r\n\t\t\"windowButton\",\r\n\t\t\"backButton\",\r\n\t])\r\n\r\n\tlet pauseButton = winParent.add([\r\n\t\ttext(\"\", {\r\n\t\t\tsize: 40\r\n\t\t}),\r\n\t\tpos(15, 60),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\t\"musicButton\",\r\n\t\t\"windowButton\",\r\n\t\t\"pauseButton\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (musicHandler.paused && !musicHandler.winding) this.text = \">\"\r\n\t\t\t\telse this.text = \"||\"\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet skipButton = winParent.add([\r\n\t\ttext(\">\", {\r\n\t\t\tsize: 40\r\n\t\t}),\r\n\t\tpos(60, 60),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\t\"musicButton\",\r\n\t\t\"windowButton\",\r\n\t\t\"skipButton\",\r\n\t])\r\n\r\n\tfunction backButtonAction() {\r\n\t\t// has been over 2 seconds so you might want to go back to the start of the song\r\n\t\tif (musicHandler.currentTime > 2) {\r\n\t\t\tmusicHandler.seek(0)\r\n\t\t\tmusicHandler.winding = true\r\n\t\t}\r\n\t\t\r\n\t\telse {\r\n\t\t\tcurrentSongIdx--\r\n\t\t\tif (currentSongIdx < 0) currentSongIdx = Object.keys(songs).length - 1\r\n\t\t\tcurrentSong = songs[Object.keys(songs)[currentSongIdx]]\r\n\t\t}\r\n\r\n\t\tplaySfx(\"clickButton\", {detune: rand(-150, 50)})\r\n\t\tbop(backButton)\r\n\t}\r\n\r\n\tfunction skipButtonAction() {\r\n\t\tcurrentSongIdx++\r\n\t\tif (currentSongIdx >= Object.keys(songs).length) currentSongIdx = 0\r\n\t\tcurrentSong = songs[Object.keys(songs)[currentSongIdx]]\r\n\r\n\t\tplaySfx(\"clickButton\", {detune: rand(-50, 150)})\r\n\t\tbop(skipButton)\r\n\t}\r\n\r\n\tfunction pauseButtonAction() {\r\n\t\tif (musicHandler.winding) return\r\n\t\tmusicHandler.paused = !musicHandler.paused\r\n\r\n\t\t// ^ only manages pause, do the other stuff below\r\n\t\tpauseButton.text = musicHandler.paused ? \">\" : \"||\"\r\n\t\tget(\"bpmChange\", { recursive: true }).forEach(bpmChange => {\r\n\t\t\tmusicHandler.paused ? bpmChange.stopWave() : bpmChange.startWave()\r\n\t\t})\r\n\t\ttween(disc.spinSpeed, musicHandler.paused ? 0 : songs[Object.keys(songs)[currentSongIdx]].speed, 1, (p) => disc.spinSpeed = p, easings.easeOutQuint)\r\n\t\t\r\n\t\tplaySfx(\"clickButton\", {detune: rand(-100, 100)})\r\n\t\tbop(pauseButton)\r\n\t}\r\n\r\n\tfunction generalBackSkipButtonAction(action) {\r\n\t\tif (skipping == false) {\r\n\t\t\tskipping = true\r\n\t\t\tget(\"bpmChange\", { recursive: true }).forEach(element => { element.stopWave() });\r\n\t\t}\r\n\t\tscratchSong()\r\n\t\ttween(progressBar.width, 0, 0.5, (p) => progressBar.width = p, easings.easeOutQuint)\r\n\t\t\r\n\t\tmusicHandler.currentTime = musicHandler.time()\r\n\t\tmusicHandler.totalTime = musicHandler.duration()\r\n\t\ttween(musicHandler.currentTime, 0, 0.5, (p) => musicHandler.currentTime = p, easings.easeOutQuint)\r\n\t\ttween(musicHandler.totalTime, songs[Object.keys(songs)[currentSongIdx]].duration, 0.5, (p) => musicHandler.totalTime = p, easings.easeOutQuint)\r\n\t\t\r\n\t\t// is a different song\r\n\t\tlet idxOfNewSong = (action == 0 ? currentSongIdx + 1 : currentSongIdx - 1) // that's crazy\r\n\t\tif (idxOfNewSong < 0) idxOfNewSong = Object.keys(songs).length - 1\r\n\t\tif (idxOfNewSong >= Object.keys(songs).length) idxOfNewSong = 0\r\n\r\n\t\tif (songs[Object.keys(songs)[idxOfNewSong]].cover != songs[Object.keys(songs)[currentSongIdx]].cover) {\r\n\t\t\ttween(disc.angle, 0, 0.5, (p) => disc.angle = p, easings.easeOutQuint)\r\n\t\t\t// goes back\r\n\t\t\tif (action == 0) tween(1, -1, 0.5, (p) => disc.scale.x = p, easings.easeOutQuint)\r\n\t\t\t// goes skip\r\n\t\t\telse if (action == 1) tween(-1, 1, 0.5, (p) => disc.scale.x = p, easings.easeOutQuint)\r\n\t\t}\r\n\t\r\n\t\telse {\r\n\t\t\tif (action == 0) tween(disc.angle, disc.angle - rand(75, 100), 0.5, (p) => disc.angle = p, easings.easeOutQuint)\r\n\t\t\telse tween(disc.angle, disc.angle + rand(75, 100), 0.5, (p) => disc.angle = p, easings.easeOutQuint)\r\n\t\t}\r\n\t\t\r\n\t\tdisc.play(songs[Object.keys(songs)[currentSongIdx]].cover)\r\n\t\tGameState.settings.music.favoriteIdx = currentSongIdx\r\n\t\ttimeSinceSkip = 0\r\n\r\n\t\tif (!isAchievementUnlocked(\"allsongs\")) {\r\n\t\t\tcheckForSongListen(currentSongIdx)\r\n\t\t}\r\n\r\n\t\twait(1, () => {\r\n\t\t\tif (timeSinceSkip > 1) {\r\n\t\t\t\tplayMusic(Object.keys(songs)[currentSongIdx])\r\n\t\t\t\tskipping = false\r\n\t\t\t\tmusicHandler.winding = false\r\n\r\n\t\t\t\tget(\"bpmChange\", { recursive: true }).forEach(element => { musicHandler.paused ? true : element.startWave() });\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// each tim you click it waits one seonc, if the time since the skip is greater than 1 it plays the song\r\n\t// if the time since the skip is less than 1 it does nothing\r\n\tget(\"musicButton\", { recursive: true }).forEach(mBtn => mBtn.onClick(() => {\r\n\t\tif (mBtn.is(\"backButton\") || mBtn.is(\"skipButton\")) {\r\n\t\t\tlet action;\r\n\t\t\tif (mBtn.is(\"backButton\")) {backButtonAction(); action = 0}\r\n\t\t\telse if (mBtn.is(\"skipButton\")) {skipButtonAction(); action = 1}\r\n\t\t\t\r\n\t\t\tgeneralBackSkipButtonAction(action) // goes after\r\n\t\t}\r\n\r\n\t\telse if (mBtn.is(\"pauseButton\")) {\r\n\t\t\tpauseButtonAction()\r\n\t\t}\r\n\t}))\r\n\t\r\n\tget(\"bpmChange\", { recursive: true }).forEach(bpmChange => {\r\n\t\tif (!bpmChange.is(\"wave\")) bpmChange.use(waver({ \r\n\t\t\tmaxAmplitude: 5,\r\n\t\t\twave_speed: currentSong.speed,\r\n\t\t\twave_tweenSpeed: 0.2\r\n\t\t}))\r\n\r\n\t\tif (!musicHandler.paused ) bpmChange.startWave()\r\n\t})\r\n\r\n\tonUpdate(\"bpmChange\", (bpmChangeObj) => {\r\n\t\tbpmChangeObj.wave_speed = currentSong.speed\r\n\t})\r\n\t\r\n\t// support for keys let's gooooo\r\n\twinParent.onKeyPress((key) => {\r\n\t\tlet action;\r\n\t\tif (key == \"left\") {backButtonAction(); action = 0}\r\n\t\telse if (key == \"right\") {skipButtonAction(); action = 1}\r\n\t\tif (key == \"left\" || key == \"right\") generalBackSkipButtonAction(action)\r\n\r\n\t\telse if (key == \"up\") pauseButtonAction()\r\n\t})\r\n\r\n\twinParent.on(\"close\", () => {\r\n\t\tangleOfDisc = disc.angle\r\n\t})\r\n\r\n\t// fuck my small penis life\r\n\ttheOneBehind.onClick(() => {\r\n\t\tif (!winParent.active) return\r\n\t\t\r\n\t\tlet leftSideOfTheOneBehind = theOneBehind.screenPos().x - theOneBehind.width * 0.5\r\n\t\tlet rightSideOfTheOneBehind = theOneBehind.screenPos().x + theOneBehind.width * 0.5\r\n\r\n\t\tlet mappedSeconds = map(mousePos().x, leftSideOfTheOneBehind, rightSideOfTheOneBehind, 0, musicHandler.duration())\r\n\t\tmappedSeconds = clamp(mappedSeconds, 0, musicHandler.duration())\r\n\r\n\t\tif (!skipping) {\r\n\t\t\tmusicHandler.winding = true\r\n\t\t\tmusicHandler.seek(mappedSeconds)\r\n\r\n\t\t\tlet mappedWidth = map(mappedSeconds, 0, currentSong.duration, 0, theOneBehind.width)\r\n\t\t\ttween(progressBar.width, mappedWidth, 0.2, p => progressBar.width = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\tmusicHandler.winding = false\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn;\r\n}", "", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by C\u00E9dric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));", "import CryptoJS from \"crypto-js\";\nimport type { NGIOComponent, NGIOData, NGIOParams } from \"./types/components\";\nimport type { Response } from \"./types/objectModels\";\n\nexport class NewgroundsClient {\n    private _appID: string;\n    private _cipher: string;\n    private _sessionID: string | null;\n\n    constructor(appID: string, cipher: string) {\n        this._appID = appID;\n        this._cipher = cipher;\n\n        const url = new URL(globalThis.location.href);\n        this._sessionID = url.searchParams.get(\"ngio_session_id\") ?? null;\n\n        if (!this._sessionID) {\n            const startSession = async () => {\n                const sessionStarted = await this.call(\"App.startSession\");\n                this._sessionID = sessionStarted.result.data.session.id;\n            };\n\n            startSession();\n        }\n    }\n\n    private encryptCall(call) {\n        if (!this._cipher) return call;\n\n        const aesKey = CryptoJS.enc.Base64.parse(this._cipher);\n        const iv = CryptoJS.lib.WordArray.random(16);\n        const encrypted = CryptoJS.AES.encrypt(JSON.stringify(call), aesKey, { iv });\n        const secure = CryptoJS.enc.Base64.stringify(iv.concat(encrypted.ciphertext));\n\n        call.secure = secure;\n        call.parameters = null;\n\n        return call;\n    }\n\n    async call<C extends NGIOComponent>(\n        component: C,\n        parameters?: NGIOParams[C],\n    ): Promise<Response<NGIOData[C]>> {\n        const call = this.encryptCall({ component, parameters });\n\n        const input = {\n            app_id: this._appID,\n            session_id: this._sessionID,\n            call,\n        };\n\n        const formData = new FormData();\n        formData.append(\"input\", JSON.stringify(input));\n\n        const url = \"https://newgrounds.io/gateway_v3.php\";\n\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                body: formData,\n                mode: \"cors\",\n            });\n\n            if (response.ok) {\n                const jsonResponse = await response.json();\n                console.log(jsonResponse);\n                return jsonResponse;\n            } else {\n                throw new Error(\"Network response was not ok.\");\n            }\n        } catch (error) {\n            console.error(\"Fetch Error:\", error);\n            throw error;\n        }\n    }\n}\n", "import { NewgroundsClient } from \"./client\";\n\nexport let client: NewgroundsClient | null = null;\n\nexport const getClient = (): NewgroundsClient => {\n    if (!client) {\n        throw new Error(\"Client not initialized\");\n    }\n\n    return client;\n};\n\nexport const setClient = (newClient: NewgroundsClient) => {\n    client = newClient;\n};\n", "import { getClient } from \"../helpers\";\n\nexport const clearSlot = async (id: number) => {\n    const slotResponse = await getClient().call(\"CloudSave.clearSlot\", { id });\n\n    return slotResponse.result.data.slot;\n};\n\nexport const getCloudData = async (id: number) => {\n    const slot = await getClient().call(\"CloudSave.loadSlot\", { id });\n    const slotUrl = slot.result.data.slot.url;\n\n    if (!slotUrl) return \"\";\n\n    try {\n        const slotData = await fetch(slotUrl, {\n            method: \"GET\",\n            mode: \"cors\",\n        });\n\n        return await slotData.text();\n    } catch (error) {\n        console.error(\"Fetch Error:\", error);\n        throw error;\n    }\n};\n\nexport const setCloudData = async (id: number, data: string) => {\n    const slotResponse = await getClient().call(\"CloudSave.setData\", { id, data });\n\n    return slotResponse.result.data.slot;\n};\n", "import { NewgroundsClient } from \"../client\";\nimport { getClient, setClient } from \"../helpers\";\nimport { User } from \"../types/objectModels\";\n\nexport function connect(appID: string, encKey: string) {\n    const client = new NewgroundsClient(appID, encKey);\n\n    setClient(client);\n\n    return client;\n}\n\nexport const login = async () => {\n    const checkedSession = await getClient().call(\"App.checkSession\");\n\n    return new Promise<User>((resolve, reject) => {\n        if (checkedSession?.result?.data?.session?.user) {\n            resolve(checkedSession.result.data.session.user);\n        } else {\n            const passportUrl = checkedSession.result.data.session.passport_url;\n\n            globalThis.open(passportUrl, \"Newgrounds Passport\", \"height=600,width=800\");\n\n            const checkInterval = setInterval(async () => {\n                const checkedSession = await getClient().call(\"App.checkSession\");\n\n                if (checkedSession?.result?.data?.session?.user) {\n                    console.log(\"User logged in!\");\n                    clearInterval(checkInterval);\n                    resolve(checkedSession.result.data.session.user);\n                }\n            }, 6000);\n        }\n    });\n};\n", "import { getClient } from \"../helpers\";\n\nexport const unlockMedal = async (id: number) => {\n    const medalUnlock = await getClient().call(\"Medal.unlock\", { id });\n\n    return medalUnlock.result.data.medal.unlocked;\n};\n", "import { getClient } from \"../helpers\";\nimport { ScoreBoardGetScoresParams } from \"../types/components\";\n\nexport const getScores = async (id: number, opt: ScoreBoardGetScoresParams) => {\n    const { id: _, ...parsedOpt } = opt;\n\n    const scores = await getClient()\n        .call(\"ScoreBoard.getScores\", {\n            id,\n            ...parsedOpt,\n        });\n\n    return scores.result?.data?.scores;\n};\n\nexport const postScore = async (id: number, value: number) => {\n    const scores = await getClient().call(\"ScoreBoard.postScore\", { id, value });\n\n    return scores.result?.data?.score;\n};\n", "import { getClient } from \"../helpers\";\n\nexport const getUsername = async () => {\n    const session = await getClient().call(\"App.checkSession\");\n\n    return session?.result?.data?.session?.user?.name;\n};\n\nexport const getVersion = async () => {\n    const version = await getClient().call(\"App.getCurrentVersion\");\n\n    return version?.result?.data?.current_version;\n};\n\nexport const isSupporter = async () => {\n    const session = await getClient().call(\"App.checkSession\");\n\n    return session?.result?.data?.session?.user?.supporter;\n};\n", "import { NewgroundsClient } from \"./client.js\";\nimport { getCloudData, setCloudData } from \"./helpers/cloud.js\";\nimport { connect, login } from \"./helpers/connect.js\";\nimport { unlockMedal } from \"./helpers/medal.js\";\nimport { getScores, postScore } from \"./helpers/scoreboard.js\";\nimport { getUsername, getVersion, isSupporter } from \"./helpers/util.js\";\nimport { NewgroundsJS } from \"./types.js\";\n\nconst newgrounds: NewgroundsJS = {\n    connect,\n    login,\n    unlockMedal,\n    getScores,\n    postScore,\n    getUsername,\n    getVersion,\n    isSupporter,\n    getCloudData,\n    setCloudData,\n    NewgroundsClient,\n};\n\nfunction capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfor (const key in newgrounds) {\n    globalThis[capitalizeFirstLetter(key)] = newgrounds[key];\n}\n\nexport {\n    connect,\n    getCloudData,\n    getScores,\n    getUsername,\n    getVersion,\n    isSupporter,\n    login,\n    NewgroundsClient,\n    postScore,\n    setCloudData,\n    unlockMedal,\n};\n\nexport default newgrounds;\n", "{\r\n\t\"API_ID\": \"58772:iSJtdnjI\",\r\n\t\"ENCRIPTION_KEY\": \"tU8YymrSEPrn1PmsJtxd0w==\",\r\n\t\"LEADERBOARD_ID\": 14075\r\n}\r\n", "import ng, { User } from \"newgrounds.js\";\r\nimport * as env from \"./env.json\"\r\nimport { ngScene } from \"./game/scenes/ngScene\";\r\n\r\nexport let ngEnabled:boolean;\r\nexport let ngUser:User | void;\r\n\r\nexport async function newgroundsManagement() {\r\n\tlet connectionToNg = ng.connect(env.API_ID, env.ENCRIPTION_KEY);\r\n}\r\n\r\nexport async function newgroundsSceneContent() {\r\n\tdebug.log(\"you don't seem to be signed in, would you like to?\")\r\n\r\n\tonKeyPress(\"enter\", async () => {\r\n\t\tngUser = await ng.login().then(null)\r\n\t\t\r\n\t\tif (await ng.getUsername() != null) {\r\n\t\t\tngEnabled = true\r\n\t\t\tdebug.log(\"You logged in! Youhoo!!!\")\r\n\t\t\twait(1, () => {\r\n\t\t\t\tgo(\"gamescene\")\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tdebug.log(\"something went wrong im sorry...\")\r\n\t\t}\r\n\t})\r\n\r\n\tonKeyPress(\"escape\", async () => {\r\n\t\t// so sad\r\n\t\twait(1, () => {\r\n\t\t\tgo(\"gamescene\")\r\n\t\t})\r\n\t})\r\n}", "import { GameState, scoreManager } from '../../gamestate';\r\nimport { windowKey } from '../windows/windows-api/windowManaging';\r\nimport { addToast, toastQueue } from '../additives';\r\nimport { addConfetti } from '.././plugins/confetti';\r\nimport { addUpgrades, upgradeInfo } from '../windows/store/upgrades';\r\nimport { songs, songsListened } from '../windows/musicWindow';\r\nimport { isWindowUnlocked, unlockableWindows, unlockWindow } from './unlockablewindows';\r\nimport { playSfx } from '../../sound';\r\nimport { ROOT } from '../../main';\r\nimport ng from 'newgrounds.js';\r\nimport { newgroundsManagement, ngEnabled } from '../../newgrounds';\r\n\r\ntype achievementOpt = {\r\n\t/**\r\n\t * The id the achievement will have, (eg: 100score)\r\n\t */\r\n\tid: string,\r\n\t/**\r\n\t * The id the achievement has on newgrounds (remember to pass it as a number don't mess it up this time)\r\n\t*/\r\n\tngId?: number, // IS OPTIONAL WHILE I ADD THEM\r\n\t/**\r\n\t * The name/funny pun the achievement will have\r\n\t */\r\n\ttitle: string,\r\n\t/**\r\n\t * The actual condition you have to do to get this achievement\r\n\t */\r\n\tdescription: string,\r\n\t/**\r\n\t * The sprite the icon will have (eg: medals.100score)\r\n\t * Always will be `medals.${idOfAchievement}`\r\n\t*/\r\n\ticon: string,\r\n\t/**\r\n\t * This means the achievement is secret, and will only show it's description title and icon if the condition is met\r\n\t */\r\n\tsecretCondition?: () => boolean;\r\n\t/**\r\n\t * How much time (in seconds) after the achievement was unlocked for\r\n\t * The toast to appear\r\n\t*/\r\n\ttimeAfter?: number,\r\n\t/**\r\n\t * How long will the toast be for before dissapearing\r\n\t */\r\n\tduration?: number,\r\n\t/**\r\n\t * The condition in \"code\", if it doesn't have one it has to be unlocked manually\r\n\t * By doing unlockAchievement()\r\n\t * @returns Wheter the condition for it it's true or false\r\n\t */\r\n\tcondition?: () => boolean,\r\n}\r\n\r\nclass Achievement {\r\n\tid:string;\r\n\tngId?:number;\r\n\ttitle: string;\r\n\tdescription: string;\r\n\ticon: string;\r\n\ttimeAfter: number;\r\n\tvisible: { secret: boolean, condition: () => boolean };\r\n\tduration: number;\r\n\tcondition: () => boolean;\r\n\tsecretCondition: () => boolean;\r\n\r\n\tconstructor(public opts: achievementOpt) {\r\n\t\tthis.id = opts.id\r\n\t\tthis.ngId = opts.ngId\r\n\r\n\t\tthis.title = opts.title\r\n\t\tthis.description = opts.description\r\n\t\tthis.icon = opts.icon\r\n\t\tthis.timeAfter = opts.timeAfter || 0\r\n\t\tthis.duration = opts.duration || 3\r\n\t\tthis.condition = opts.condition || null\r\n\t\tthis.secretCondition = opts.secretCondition || null\r\n\t}\r\n}\r\n\r\nexport let fullUpgradeValues = {\r\n\tclicks: () => {\r\n\t\tlet sum = 0\r\n\t\tObject.keys(upgradeInfo).forEach(key => {\r\n\t\t\tif (key.includes(\"k_\")) {\r\n\t\t\t\tsum += upgradeInfo[key].value\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn sum;\r\n\t},\r\n\tcursors: () => {\r\n\t\tlet sum = 0\r\n\t\tObject.keys(upgradeInfo).forEach(key => {\r\n\t\t\t// if the key includes C_ (is a cursor) and the freq is null (is not a frequency upgrade)\r\n\t\t\tif (key.includes(\"c_\") && upgradeInfo[key].freq == null) {\r\n\t\t\t\tsum += upgradeInfo[key].value\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn sum;\r\n\t}\r\n}\r\n\r\nexport let achievements:Achievement[]\r\n\r\nachievements = [\r\n\t/* TODO: Missing types of achievements\r\n\t\t- Score per second\r\n\t\t- Score forfeited on ascending\r\n\t\t- Score gained by tapping\r\n\t\t- Score gained by cursors\r\n\t*/\r\n\t// #region SCORE ACHIEVEMENTS =====================\r\n\tnew Achievement({\r\n\t\tid: \"100score\",\r\n\t\ttitle: \"It starts...\",\r\n\t\tdescription: \"Get 100 of score\",\r\n\t\ticon: \"upgrades.k_0\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 100,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"500score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 500 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 500,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"1000score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 1.000 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 1000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"5000score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 5.000 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 5000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"10000score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 10.000 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 10000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"25000score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 25.000 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 25000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"50000score\",\r\n\t\ttitle: \"Wake and click\",\r\n\t\tdescription: \"Get 50.000 of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 50000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"millionscore\",\r\n\t\ttitle: \"That's crazy\",\r\n\t\tdescription: \"Get 1 million of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tcondition: () => GameState.scoreAllTime >= 1_000_000,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"1sextillionscore\",\r\n\t\ttitle: \"Getting scientific\",\r\n\t\tdescription: \"Get 1 sextillion of score\",\r\n\t\ticon: \"upgrades.k_1\",\r\n\t\tduration: 4,\r\n\t\tcondition: () => GameState.scoreAllTime >= scoreManager.scientificENOT,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"1000clicks\",\r\n\t\ttitle: \"One hell of a clicker\",\r\n\t\tdescription: \"Click 1.000 times\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.stats.timesClicked >= 1000,\r\n\t}),\r\n\t// #endregion SCORE ACHIEVEMENTS ====================\r\n\r\n\t// #region CLICKER/CURSOR ACHIEVEMENTS ==================\r\n\t// ### CLICKERS\r\n\tnew Achievement({\r\n\t\tid: \"10clickers\",\r\n\t\ttitle: \"Getting clickery\",\r\n\t\tdescription: \"Have 10 clickers\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.clickers >= 10,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"20clickers\",\r\n\t\ttitle: \"Getting clickery\",\r\n\t\tdescription: \"Have 20 clickers\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.clickers >= 20,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"30clickers\",\r\n\t\ttitle: \"Getting clickery\",\r\n\t\tdescription: \"Have 30 clickers\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.clickers >= 30,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"40clickers\",\r\n\t\ttitle: \"Getting clickery\",\r\n\t\tdescription: \"Have 40 clickers\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.clickers >= 40,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"50clickers\",\r\n\t\ttitle: \"Getting clickery\",\r\n\t\tdescription: \"Have 50 clickers\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.clickers >= 50,\r\n\t}),\r\n\t\r\n\t// ### CURSORS\r\n\tnew Achievement({\r\n\t\tid: \"10cursors\",\r\n\t\ttitle: \"Getting cursory\",\r\n\t\tdescription: \"Have 10 cursors\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.cursors >= 10,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"20cursors\",\r\n\t\ttitle: \"Getting cursory\",\r\n\t\tdescription: \"Have 20 cursors\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.cursors >= 20,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"30cursors\",\r\n\t\ttitle: \"Getting cursory\",\r\n\t\tdescription: \"Have 30 cursors\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.cursors >= 30,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"40cursors\",\r\n\t\ttitle: \"Getting cursory\",\r\n\t\tdescription: \"Have 40 cursors\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.cursors >= 40,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"50cursors\",\r\n\t\ttitle: \"Getting cursory\",\r\n\t\tdescription: \"Have 50 cursors\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => GameState.cursors >= 50,\r\n\t}),\r\n\t//#endregion CLICKERS/CURSORS ACHIEVEMENTS =================\r\n\r\n\t// #region SCORE PER SECOND ACHIEVEMENTS ==================\r\n\tnew Achievement({\r\n\t\tid: \"10scorepersecond\",\r\n\t\ttitle: \"Very fast score\",\r\n\t\tdescription: \"Get to 10 score per second\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\tcondition: () => scoreManager.autoScorePerSecond() >= 10,\r\n\t}),\r\n\t//#endregion SCORE PER SECOND ACHIEVEMENTS =================\r\n\r\n\tnew Achievement({\r\n\t\tid: \"allclickupgrades\",\r\n\t\ttitle: \"Very clickery score\",\r\n\t\tdescription: \"Buy all the click upgrades\",\r\n\t\ticon: \"icon_store\",\r\n\t\ttimeAfter: 1,\r\n\t\tcondition: () => GameState.clicksUpgradesValue >= fullUpgradeValues.clicks(),\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"allupgrades\",\r\n\t\ttitle: \"Very very score\",\r\n\t\tdescription: \"Buy all the available upgrades\",\r\n\t\ticon: \"icon_store\",\r\n\t\ttimeAfter: 1,\r\n\t\tcondition: () => GameState.clicksUpgradesValue >= fullUpgradeValues.clicks() && GameState.cursorsUpgradesValue >= fullUpgradeValues.cursors(),\r\n\t}),\r\n\r\n\t// #region POWERUP ACHIEVEMENTS =====================\r\n\tnew Achievement({\r\n\t\tid: \"click1powerup\",\r\n\t\ttitle: \"What?! Help me!\",\r\n\t\tdescription: \"Click 1 powerup\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\ttimeAfter: 0.5,\r\n\t\tcondition: () => GameState.stats.powerupsClicked >= 1,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"click5powerup\",\r\n\t\ttitle: \"What?! Help me!\",\r\n\t\tdescription: \"Click 5 powerup\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\ttimeAfter: 0.5,\r\n\t\tcondition: () => GameState.stats.powerupsClicked >= 5,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"click10powerup\",\r\n\t\ttitle: \"What?! Help me!\",\r\n\t\tdescription: \"Click 10 powerup\",\r\n\t\ticon: \"cursors.cursor\",\r\n\t\ttimeAfter: 0.5,\r\n\t\tcondition: () => GameState.stats.powerupsClicked >= 10,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"buy10powerup\",\r\n\t\ttitle: \"Scrooge McDuck\",\r\n\t\tdescription: \"Buy 10 powerup\",\r\n\t\ticon: \"icon_store\",\r\n\t\ttimeAfter: 1,\r\n\t\tcondition: () => GameState.stats.powerupsBought >= 10,\r\n\t}),\r\n\t// #endregion POWERUP ACHIEVEMENTS ====================\r\n\r\n\t// #region ASCENSION ACHIEVEMENTS =====================\r\n\tnew Achievement({\r\n\t\tid: \"ascend1time\",\r\n\t\ttitle: \"Oh. So you've met him?\",\r\n\t\tdescription: \"Ascend for the first time\",\r\n\t\ticon: \"icon_ascend\",\r\n\t\tsecretCondition: () => GameState.stats.timesAscended >= 1\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"ascend5time\",\r\n\t\ttitle: \"He's funny, isn't he?\",\r\n\t\tdescription: \"Ascend for the fifth time\",\r\n\t\ticon: \"icon_ascend\",\r\n\t\tcondition: () => GameState.stats.timesAscended >= 5,\r\n\t\tsecretCondition: () => GameState.stats.timesAscended >= 1,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"ascend10time\",\r\n\t\ttitle: \"I am the clickery...\",\r\n\t\tdescription: \"Ascend for the tenth time\",\r\n\t\ticon: \"icon_ascend\",\r\n\t\tcondition: () => GameState.stats.timesAscended >= 10,\r\n\t\tsecretCondition: () => GameState.stats.timesAscended >= 1,\r\n\t}),\r\n\t// #endregion ASCENSION ACHIEVEMENTS =====================\r\n\r\n\t// #region EXTRA ACHIEVEMENTS =====================\r\n\tnew Achievement({\r\n\t\tid: \"maxedcombo\",\r\n\t\ttitle: \"OVERDRIVE!!!\",\r\n\t\tdescription: \"Max your combo for the first time, FULL COMBO!!\",\r\n\t\ticon: \"hexagon\",\r\n\t\ttimeAfter: 2,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"allwindowsontaskbar\",\r\n\t\ttitle: \"CPU Usage too high!!\",\r\n\t\tdescription: \"Open all windows in your taskbar at the same time\",\r\n\t\ticon: \"icon_extra.open_default\",\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"panderitomode\",\r\n\t\ttitle: \"Hmmmmmmmm panderitos...\",\r\n\t\tdescription: \"Spell panderito\",\r\n\t\ticon: \"panderito\",\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"tapachievementslot\",\r\n\t\ttitle: \"That was easy right?\",\r\n\t\tdescription: \"Tap this achivement's slot\",\r\n\t\ticon: \"cursors.point\",\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"gnome\",\r\n\t\ttitle: \"HOLY SHIT GUYS DID YOU SEE THAT???\",\r\n\t\tdescription: \"WHAT THE FUCK WAS THAT DID WE GET THAT ON CAMERA??????!!\",\r\n\t\ticon: \"gnome\",\r\n\t\ttimeAfter: 1.5,\r\n\t\tduration: 5,\r\n\t\tsecretCondition: () => GameState.stats.timesGnomed >= 1,\r\n\t}),\r\n\r\n\tnew Achievement({\r\n\t\tid: \"allsongs\",\r\n\t\ttitle: \"Big fan\",\r\n\t\tdescription: \"Listen to all the songs at least once\",\r\n\t\ticon: \"icon_music\",\r\n\t\tcondition: () => songsListened.length == Object.keys(songs).length\r\n\t}),\r\n\t// #endregion EXTRA ACHIEVEMENTS =====================\r\n\tnew Achievement({\r\n\t\tid: \"allAchievements\",\r\n\t\ttitle: \"CONGRATS!!!!\",\r\n\t\tdescription: \"Complete all achievements, congratulations!!\",\r\n\t\ticon: \"osaka\",\r\n\t\tcondition: () => GameState.unlockedAchievements.length == achievements.length - 1\r\n\t}),\r\n]\r\n\r\n// TODO: Find a working api for the secret achievements\r\n// TODO: Find a way to make that achievementId type\r\nexport function getAchievement(achievementId:string) {\r\n\treturn achievements.filter(achievementObject => achievementObject.id == achievementId)[0]\r\n}\r\n\r\nexport function isAchievementUnlocked(achievementName:string) {\r\n\treturn GameState.unlockedAchievements.includes(achievementName)\r\n}\r\n\r\nexport let achievementsInfo = {\r\n\tids: achievements.map(achievement => achievement.id),\r\n\tobjects: achievements.map(achievement => achievement),\r\n}\r\n\r\n// the ones that don't have a condition is because they're unlocked at rare cases\r\nexport function checkForUnlockable() {\r\n\tachievements.forEach(achievement => {\r\n\t\tif (achievement.condition != null && !isAchievementUnlocked(achievement.id)) {\r\n\t\t\tif (achievement.condition()) {\r\n\t\t\t\tunlockAchievement(achievement.id)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// checks for windows\r\n\tObject.keys(unlockableWindows).forEach(window => {\r\n\t\tif (!isWindowUnlocked(window as windowKey)) {\r\n\t\t\tif (unlockableWindows[window].condition()) {\r\n\t\t\t\tunlockWindow(window as windowKey)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport function unlockAchievement(id:string) {\r\n\tif (isAchievementUnlocked(id)) return\r\n\t\r\n\tGameState.unlockedAchievements.push(id)\r\n\r\n\tlet achievement = getAchievement(id)\r\n\t\r\n\twait(achievement.timeAfter || 0, () => {\r\n\r\n\t\taddToast({\r\n\t\t\ticon: achievement.icon,\r\n\t\t\ttitle: achievement.title,\r\n\t\t\tbody: achievement.description,\r\n\t\t\tduration: achievement.duration,\r\n\t\t\ttype: \"achievement\",\r\n\t\t})\r\n\r\n\t\tif (id == \"allachievements\") {\r\n\t\t\taddConfetti({ pos: mousePos() })\r\n\t\t}\r\n\r\n\t\tROOT.trigger(\"achivementUnlock\", id)\r\n\t})\r\n\r\n\tif (ngEnabled == true) {\r\n\t\tif (achievement.ngId) ng.unlockMedal(achievement.ngId)\r\n\t}\r\n}\r\n", "import { TextCompOpt, Vec2 } from \"kaplay\"\r\nimport { waver } from \"./plugins/wave\";\r\nimport { playSfx } from \"../sound\";\r\nimport { GameState, scoreManager } from \"../gamestate\";\r\nimport { bop, formatNumber, getPosInGrid, getPositionOfSide, parseAnimation, randomPos } from \"./utils\";\r\nimport { positionSetter } from \"./plugins/positionSetter\";\r\nimport { checkForUnlockable } from \"./unlockables/achievements\";\r\n\r\nclass Powerup {\r\n\tsprite: string;\r\n\t\r\n\t/**\r\n\t * Time that its left for it to be removed, if it's null it means it's not active\r\n\t */\r\n\tremovalTime: null | number;\r\n\t/**\r\n\t * Time it's running to check for max time and then chance\r\n\t */\r\n\trunningTime: number;\r\n\t/**\r\n\t * Time it takes to rethink chance\r\n\t */\r\n\tmaxTime: number;\r\n\t/**\r\n\t * Chance it has of appearing when maxTime is ran (from 0 to 1)\r\n\t */\r\n\tchance: number;\r\n\t/**\r\n\t * The multiplier the powerup is currently running\r\n\t */\r\n\tmultiplier: number;\r\n\r\n\tconstructor(sprite:string, maxTime: number, chance: number, runningTime?:number, multiplier?:number) {\r\n\t\tthis.sprite = sprite;\r\n\t\tthis.maxTime = maxTime;\r\n\t\tthis.chance = chance;\r\n\t\tthis.runningTime = runningTime || 0\r\n\t\tthis.multiplier = multiplier || 1\r\n\t}\r\n}\r\n\r\nexport let powerupTypes = {\r\n\t/**\r\n\t * Makes clicks more powerful\r\n\t */\r\n\t\"clicks\": new Powerup(\"cursors.cursor\", 35, 0.15),\r\n\t/**\r\n\t * Makes cursors more powerful\r\n\t */\r\n\t\"cursors\": new Powerup(\"cursors.point\", 30, 0.2),\r\n\t/**\r\n\t * Gives you the score you would have gotten in X amount of time\r\n\t */\r\n\t\"time\": new Powerup(\"cursors.wait\", 45, 0.25),\r\n\t/**\r\n\t * Increses production\r\n\t */\r\n\t\"awesome\": new Powerup(\"cursors.time\", 60, 0.30),\r\n\t/**\r\n\t * Gives discounts for clickers and cursors\r\n\t */\r\n\t\"store\": new Powerup(\"icon_store\", 60, 0.5),\r\n\t/**\r\n\t * Is just silly, very silly\r\n\t */\r\n\t\"blab\": new Powerup(\"panderito\", 10, 0.4),\r\n}\r\n\r\nlet blabPhrases = [\r\n\t\"Test powerup\",\r\n\t\"lol!\",\r\n\t\"Why did you click me?\",\r\n\t\"IT HAD A FAMILY!!!......\",\r\n\t\"Clicking since 1999\",\r\n\t\"Hexagoning since march 2024\",\r\n\t\"Also try Cookie Clicker!\",\r\n\t\"Orteil don't sue me\",\r\n\t\"Area of an hexagon:\\nA = (p * 2) / 2\",\r\n\t\"Did you know?\\nYou can drag the buttons in your taskbar around!\",\r\n\t\"Did you know?\\nYou can drag the buttons in the extra window\\nto your taskbar!\",\r\n\t\"Did you know?\\nYou can hold your mouse when buying!\",\r\n\t\"Did you know?\\nYou can hold shift to bulk-buy 10x things!\",\r\n\t\"Did you know?\\nYou can click the big hexagon several times\\nto start a combo!\",\r\n]\r\n\r\nexport type powerupName = keyof typeof powerupTypes | \"random\";\r\n\r\ntype powerupOpt = {\r\n\ttype: powerupName;\r\n\tpos?: Vec2,\r\n\tmultiplier?: number,\r\n\ttime?: number,\r\n\tnatural?: boolean,\r\n}\r\n\r\nlet timerSpacing = 65\r\nfunction getTimerXPos(index:number) : number {\r\n\tlet initialPos = vec2(width() + timerSpacing / 2)\r\n\treturn getPosInGrid(initialPos, 0, -index - 1, vec2(timerSpacing, 0)).x\r\n}\r\n\r\nfunction addTimer(opts:{ sprite: string, type: string }) {\r\n\tlet timerObj = add([\r\n\t\trect(60, 60),\r\n\t\tcolor(WHITE),\r\n\t\toutline(3, BLACK),\r\n\t\tpos(0, 40),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(1),\r\n\t\tscale(),\r\n\t\trotate(0),\r\n\t\tlayer(\"ui\"),\r\n\t\tarea(),\r\n\t\t\"putimer\",\r\n\t\t`${opts.type}_putimer`,\r\n\t\t{\r\n\t\t\tindex: get(\"putimer\").length,\r\n\t\t\tupdateTime() {\r\n\t\t\t\ttween(vec2(1), vec2(1.1), 0.32, (p) => this.scale = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\t\ttween(this.scale, vec2(1), 0.32, (p) => this.scale = p, easings.easeOutElastic)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tend() {\r\n\t\t\t\tthis.tags.forEach(tag => this.unuse(tag));\r\n\t\t\t\ttween(this.pos.y, this.pos.y - 40, 0.32, (p) => this.pos.y = p, easings.easeOutQuint)\r\n\t\t\t\ttween(1, 0, 0.32, (p) => this.opacity = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\t\tdestroy(this)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// gets all timers that have an index greater than the current one (the ones to the left)\r\n\t\t\t\tget(\"putimer\").filter(pt => pt.index > this.index).forEach(element => {\r\n\t\t\t\t\t// decreases the index (moves it to the right)\r\n\t\t\t\t\telement.index--\r\n\t\t\t\t\t// moves them accordingly\r\n\t\t\t\t\ttween(element.pos.x, getTimerXPos(element.index), 0.32, (p) => element.pos.x = p, easings.easeOutQuint)\r\n\t\t\t\t});\r\n\t\t\t\t// # holy shit im a genius\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\ttween(30, 40, 0.32, (p) => timerObj.pos.y = p, easings.easeOutQuint)\r\n\ttween(90, 0, 0.32, (p) => timerObj.angle = p, easings.easeOutQuint)\r\n\r\n\ttimerObj.pos.x = getTimerXPos(timerObj.index)\r\n\r\n\t// add the text object\r\n\ttimerObj.add([\r\n\t\ttext(\"\", { font: \"lambdao\", size: timerObj.height / 2 }),\r\n\t\tpos(0, timerObj.height / 2 + 15),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(),\r\n\t\tz(3),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.opacity = timerObj.opacity\r\n\t\t\t\t\r\n\t\t\t\tif (powerupTypes[opts.type].removalTime == null) return\r\n\t\t\t\tthis.text = `${powerupTypes[opts.type].removalTime.toFixed(0)}s\\n`\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\ttimerObj.onClick(() => {\r\n\t\tif (get(`poweruplog_${opts.type}`).length == 0) {\r\n\t\t\tbop(timerObj)\r\n\t\t\taddPowerupLog(opts.type as powerupName)\r\n\t\t}\r\n\t})\r\n\r\n\tlet icon = timerObj.add([\r\n\t\tsprite(\"white_noise\"),\r\n\t\tanchor(\"center\"),\r\n\t\tz(1),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.opacity = timerObj.opacity\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tparseAnimation(icon, opts.sprite)\r\n\r\n\ticon.width = 50\r\n\ticon.height = 50\r\n\r\n\tlet maxTime = powerupTypes[opts.type].removalTime\r\n\r\n\tlet round = timerObj.add([\r\n\t\tz(2),\r\n\t\t{\r\n\t\t\tdraw() {\r\n\t\t\t\tdrawRect({\r\n\t\t\t\t\twidth: timerObj.width - timerObj.outline.width,\r\n\t\t\t\t\theight: map(powerupTypes[opts.type].removalTime, 0, maxTime, 0, timerObj.height - timerObj.outline.width),\r\n\t\t\t\t\tcolor: YELLOW,\r\n\t\t\t\t\tanchor: \"bot\",\r\n\t\t\t\t\tpos: vec2(0, timerObj.height / 2),\r\n\t\t\t\t\topacity: 0.25,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n}\r\n\r\nexport function addPowerupLog(powerupType:powerupName) {\r\n\tfunction getPosForPowerupLog(index:number) {\r\n\t\treturn getPosInGrid(vec2(center().x, height() - 100), -index, 0, vec2(300, 100))\r\n\t}\r\n\t\r\n\tlet powerupTime = powerupTypes[powerupType].removalTime\r\n\tlet textInText = \"\"\r\n\r\n\tif (powerupType == \"blab\") textInText = choose(blabPhrases)\r\n\r\n\tconst bgOpacity = 0.95\r\n\tlet bg = add([\r\n\t\trect(0, 0, { radius: 0 }),\r\n\t\tpos(center().x, height() - 100),\r\n\t\tcolor(BLACK.lighten(2)),\r\n\t\tpositionSetter(),\r\n\t\tanchor(\"center\"),\r\n\t\tlayer(\"powerups\"),\r\n\t\topacity(bgOpacity),\r\n\t\tz(1),\r\n\t\t\"poweruplog\",\r\n\t\t`poweruplog_${powerupType}`,\r\n\t])\r\n\r\n\tlet textInBgOpts = { size: 25, align: \"center\", width: 300 }\r\n\tlet textInBg = bg.add([\r\n\t\ttext(\"\", textInBgOpts as TextCompOpt),\r\n\t\tpos(0, 0),\r\n\t\tanchor(\"center\"),\r\n\t\tarea(),\r\n\t\topacity(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (powerupTypes[powerupType].removalTime == null) {powerupTime = 0; return}\r\n\t\t\t\tpowerupTime = Math.round(powerupTypes[powerupType].removalTime)\r\n\t\t\t\tlet powerupMultiplier = powerupTypes[powerupType].multiplier\r\n\r\n\t\t\t\tif (powerupType == \"clicks\") textInText = `Click production increased x${powerupMultiplier} for ${powerupTime} secs`\r\n\t\t\t\telse if (powerupType == \"cursors\") textInText = `Cursors production increased x${powerupMultiplier} for ${powerupTime} secs`\r\n\t\t\t\telse if (powerupType == \"time\") {\r\n\t\t\t\t\ttextInText = `+${formatNumber(Math.round(scoreManager.autoScorePerSecond()) * powerupTime)}, the score you would have gained in ${powerupTime} secs`\r\n\t\t\t\t}\r\n\t\t\t\telse if (powerupType == \"awesome\") textInText = `Score production increased by x${powerupMultiplier} for ${powerupTime}, AWESOME!!`\r\n\t\t\t\telse if (powerupType == \"store\") textInText = `Store prices have a discount of ${Math.round(powerupMultiplier * 100)}% for ${powerupTime} secs, get em' now!`\r\n\t\t\t\telse if (powerupType == \"blab\") textInText = textInText\r\n\t\t\t\t\r\n\t\t\t\telse throw new Error(\"powerup type doesn't exist\");\r\n\r\n\t\t\t\tthis.text = textInText\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet icon = bg.add([\r\n\t\tsprite(\"white_noise\"),\r\n\t\tpos(-bg.width / 2, -bg.height / 2),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.opacity = bg.opacity\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tparseAnimation(icon, powerupTypes[powerupType].sprite)\r\n\ticon.width = 35\r\n\ticon.height = 35\r\n\r\n\tlet index = get(\"poweruplog\").length - 1\r\n\tlet destinedPos = getPosForPowerupLog(index)\r\n\r\n\tbg.onUpdate(() => {\r\n\t\tlet radius = 5\r\n\t\tlet width = 315\r\n\t\tlet height = formatText({ text: textInText, ...textInBgOpts as TextCompOpt }).height + 15\r\n\t\t\r\n\t\tbg.height = lerp(bg.height, height, 0.5)\r\n\t\tbg.width = lerp(bg.width, width, 0.5)\r\n\t\tbg.radius = lerp(bg.radius, radius, 0.5)\r\n\t})\r\n\r\n\ttween(0, bgOpacity, 0.5, (p) => bg.opacity = p, easings.easeOutQuad)\r\n\ttween(height() + bg.height, destinedPos.y, 0.5, (p) => bg.pos.y = p, easings.easeOutQuad)\r\n\r\n\twait(3.5, () => {\r\n\t\ttween(bg.pos.y, bg.pos.y - bg.height, 0.5, (p) => bg.pos.y = p, easings.easeOutQuad)\r\n\t\tbg.fadeOut(0.5).onEnd(() => destroy(bg))\r\n\t\ttween(textInBg.opacity, 0, 0.5, (p) => textInBg.opacity = p, easings.easeOutQuad)\r\n\t\tbg.unuse(\"poweruplog\")\r\n\t})\r\n}\r\n\r\nexport let allPowerupsInfo = {\r\n\tisHoveringAPowerup: false,\r\n\tcanSpawnPowerups: false,\r\n}\r\n\r\nexport function spawnPowerup(opts?:powerupOpt) {\r\n\tif (allPowerupsInfo.canSpawnPowerups == false) return\r\n\tif (opts == undefined) opts = {} as powerupOpt \r\n\r\n\tfunction getRandomPowerup() {\r\n\t\t// this doesn't include random of course\r\n\t\tlet list = Object.keys(powerupTypes)\r\n\t\t\r\n\t\tif (Math.round(scoreManager.autoScorePerSecond()) < 1) list.splice(list.indexOf(\"time\"), 1)\r\n\t\tif (opts.natural == false) list.splice(list.indexOf(\"awesome\"), 1) \r\n\t\t\r\n\t\tlet element = choose(list) as powerupName\r\n\t\tif (chance(0.2) && opts.natural == false) element = \"blab\"\r\n\t\t\r\n\t\treturn element;\r\n\t}\r\n\r\n\topts.type = opts.type\r\n\tif (opts.type == \"random\") opts.type = getRandomPowerup()\r\n\r\n\topts.pos = opts.pos || randomPos()\r\n\r\n\tlet powerupObj = add([\r\n\t\tsprite(\"white_noise\"),\r\n\t\tpos(opts.pos),\r\n\t\tscale(1),\r\n\t\tarea(),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(),\r\n\t\tlayer(\"powerups\"),\r\n\t\tcolor(WHITE),\r\n\t\trotate(0),\r\n\t\tz(0),\r\n\t\twaver({ wave_speed: 1.25, maxAmplitude: 5, minAmplitude: 0 }),\r\n\t\tarea(),\r\n\t\t\"powerup\",\r\n\t\t{\r\n\t\t\twhiteness: 0,\r\n\t\t\ttype: opts.type,\r\n\t\t\tmaxScale: 3,\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-1, 1, time() * 3)\r\n\t\t\t},\r\n\t\t\tstartHover() {\r\n\t\t\t\ttween(this.scale, vec2(this.maxScale).add(0.2), 0.15, (p) => this.scale = p, easings.easeOutBack)\r\n\t\t\t},\r\n\t\t\tendHover() {\r\n\t\t\t\ttween(this.scale, vec2(this.maxScale).sub(0.2), 0.15, (p) => this.scale = p, easings.easeOutBack)\r\n\t\t\t},\r\n\t\t\tdieAnim() {\r\n\t\t\t\tthis.area.scale = vec2(0)\r\n\t\t\t\ttween(this.scale, vec2(this.maxScale).add(0.4), 0.15, (p) => this.scale = p, easings.easeOutBack)\r\n\t\t\t\ttween(this.opacity, 0, 0.15, (p) => this.opacity = p, easings.easeOutBack).onEnd(() => {\r\n\t\t\t\t\tdestroy(this)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t// little blink shadow\r\n\t\t\t\tlet blink = add([\r\n\t\t\t\t\tsprite(\"white_noise\"),\r\n\t\t\t\t\tpos(this.pos),\r\n\t\t\t\t\tscale(this.scale),\r\n\t\t\t\t\tanchor(this.anchor),\r\n\t\t\t\t\topacity(0.5),\r\n\t\t\t\t\tlayer(\"powerups\"),\r\n\t\t\t\t\tz(this.z - 1),\r\n\t\t\t\t\ttimer(),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmaxOpacity: 0.5,\r\n\t\t\t\t\t\tupdate() {\r\n\t\t\t\t\t\t\tthis.pos.y -= 0.5\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t])\r\n\r\n\t\t\t\tblink.width = this.width\r\n\t\t\t\tblink.height = this.height\r\n\r\n\t\t\t\tparseAnimation(blink, powerupTypes[opts.type].sprite)\r\n\r\n\t\t\t\tlet timeToLeave = 0.75\r\n\t\t\t\tloop(0.1, () => {\r\n\t\t\t\t\tif (blink.opacity == blink.maxOpacity) blink.opacity = 0\r\n\t\t\t\t\telse blink.opacity = blink.maxOpacity \r\n\t\t\t\t})\r\n\t\t\t\ttween(0.5, 0, timeToLeave, (p) => blink.maxOpacity = p, easings.easeOutBack)\r\n\t\t\t\tblink.wait(timeToLeave, () => {\r\n\t\t\t\t\tdestroy(blink)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tclick() {\r\n\t\t\t\tthis.dieAnim()\r\n\t\t\t\tplaySfx(\"powerup\")\r\n\t\t\t\tcheckForUnlockable()\r\n\t\t\t\tGameState.stats.powerupsClicked++\r\n\r\n\t\t\t\t// # multipliers\r\n\t\t\t\tlet multiplier = 0\r\n\t\t\t\tlet time = 0\r\n\r\n\t\t\t\tconst power = GameState.powerupPower\r\n\r\n\t\t\t\tif (opts.multiplier == null) {\r\n\t\t\t\t\tif (opts.type == \"clicks\" || opts.type == \"cursors\") {\r\n\t\t\t\t\t\ttime = opts.time ?? randi(5, 15)\r\n\t\t\t\t\t\tmultiplier = randi(2, 5) * power\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// op powerups\r\n\t\t\t\t\telse if (opts.type == \"awesome\") {\r\n\t\t\t\t\t\ttime = opts.time ?? randi(2.5, 5)\r\n\t\t\t\t\t\tmultiplier = randi(5, 10) * power\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if (opts.type == \"store\") {\r\n\t\t\t\t\t\ttime = opts.time ?? randi(2.5, 5)\r\n\t\t\t\t\t\tmultiplier = rand(0.05, 0.25) / power\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// patience\r\n\t\t\t\t\telse if (opts.type == \"time\") {\r\n\t\t\t\t\t\tmultiplier = 1\r\n\t\t\t\t\t\ttime = opts.time ?? rand(30, 60) * power\r\n\t\t\t\t\t\tscoreManager.addTweenScore(scoreManager.scorePerSecond() * time)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// lol!\r\n\t\t\t\t\telse if (opts.type == \"blab\") {\r\n\t\t\t\t\t\tmultiplier = 1\r\n\t\t\t\t\t\ttime = 1\r\n\t\t\t\t\t\tscoreManager.addScore(1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (opts.type != \"time\") {\r\n\t\t\t\t\t// if there's already a timer don't add a new one!\r\n\t\t\t\t\tlet checkTimer = get(`${opts.type}_putimer`)[0] \r\n\t\t\t\t\tif (checkTimer) checkTimer.updateTime()\r\n\t\t\t\t\telse addTimer({ sprite: powerupTypes[powerupObj.type].sprite, type: opts.type}) \r\n\t\t\t\t}\r\n\r\n\t\t\t\tpowerupTypes[opts.type].multiplier = multiplier\r\n\t\t\t\tpowerupTypes[opts.type].removalTime = time\r\n\t\t\t\t\r\n\t\t\t\taddPowerupLog(opts.type)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\t// other stuff\r\n\tparseAnimation(powerupObj, powerupTypes[opts.type].sprite)\r\n\tpowerupObj.startWave()\r\n\r\n\tpowerupObj.width = 60\r\n\tpowerupObj.height = 60\r\n\r\n\t// spawn anim\r\n\ttween(vec2(powerupObj.maxScale).sub(0.4), vec2(powerupObj.maxScale), 0.25, (p) => powerupObj.scale = p, easings.easeOutBack)\r\n\ttween(0, 1, 0.2, (p) => powerupObj.opacity = p, easings.easeOutBack)\r\n\r\n\t// events\r\n\tpowerupObj.onHover(() => {\r\n\t\tpowerupObj.startHover()\r\n\t\r\n\t\tquery({\r\n\t\t\tinclude: [\"insideHover\", \"outsideHover\"],\r\n\t\t\tincludeOp: \"or\",\r\n\t\t}).forEach((obj) => {\r\n\t\t\tif (obj.isBeingHovered == true) {\r\n\t\t\t\tobj.endHoverFunction()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\tpowerupObj.onHoverEnd(() => {\r\n\t\tpowerupObj.endHover()\r\n\r\n\t\tquery({\r\n\t\t\tinclude: [\"insideHover\", \"outsideHover\"],\r\n\t\t\tincludeOp: \"or\",\r\n\t\t}).forEach((obj) => {\r\n\t\t\tif (obj.isHovering() == true && obj.isBeingHovered == false) {\r\n\t\t\t\tobj.startHoverFunction()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\tpowerupObj.onClick(() => {\r\n\t\tpowerupObj.click()\r\n\t})\r\n\r\n\t// particles\r\n\t// let shimmer = add([\r\n\t// \tanchor(\"center\"),\r\n\t// \tpos(powerupObj.pos),\r\n\t// \tparticles({\r\n\t// \t\tmax: 20,\r\n\t// \t\tspeed: [50, 100],\r\n\t// \t\tangle: [0, 360],\r\n\t// \t\tangularVelocity: [45, 90],\r\n\t// \t\tlifeTime: [1.0, 1.5],\r\n\t// \t\tcolors: [WHITE],\r\n\t// \t\topacities: [0.1, 1.0, 0.0],\r\n\t// \t\ttexture: getSprite(\"hexagon\").data.tex,\r\n\t// \t\tquads: [getSprite(\"hexagon\").data.frames[0]],\r\n\t// \t}, {\r\n\t// \t\tlifetime: 1.5,\r\n\t// \t\trate: 1,\r\n\t// \t\tdirection: 90,\r\n\t// \t\tspread: 10,\r\n\t// \t}),\r\n\t// ])\r\n\r\n\t// // let shimmerLoop = loop(0.5, () => {\r\n\t// \tshimmer.emit(randi(5, 10))\r\n\t// // })\r\n\r\n\t// shimmer.onDestroy(() => {\r\n\t// \t// shimmerLoop.cancel()\r\n\t// })\r\n\r\n}\r\n\r\n/**\r\n * Manages the removal time of powerups, which is the amount of time they have after being activated\r\n */\r\nexport function Powerup_RemovalTimeManager() {\r\n\tfor (let powerup in powerupTypes) {\r\n\t\tif (powerupTypes[powerup].removalTime != null) {\r\n\t\t\tif (powerup != \"time\") powerupTypes[powerup].removalTime -= dt()\r\n\t\t\t\r\n\t\t\tif (powerupTypes[powerup].removalTime < 0) {\r\n\t\t\t\tpowerupTypes[powerup].removalTime = null\r\n\t\t\t\tget(`${powerup}_putimer`)?.forEach(timer => timer.end())\r\n\t\t\t\tpowerupTypes[powerup].multiplier = 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// this runs on update, it's fine putting isHoveringAPowerup behaviour here\r\n\tif ((get(\"powerup\").length > 0)) {\r\n\t\t// use isHovering and not isBeingHovered because powerups are on top of everything\r\n\t\tallPowerupsInfo.isHoveringAPowerup = get(\"powerup\").some((powerup) => powerup.isHovering())\r\n\t}\r\n}\r\n\r\n/**\r\n * Manages the natural spawning of powerups\r\n */\r\nexport function Powerup_NaturalSpawnManager() {\r\n\tfor (let powerup in powerupTypes) {\r\n\t\tpowerupTypes[powerup].runningTime += dt()\r\n\r\n\t\tif (powerupTypes[powerup].runningTime > powerupTypes[powerup].maxTime) {\r\n\t\t\tpowerupTypes[powerup].runningTime = 0\r\n\r\n\t\t\tif (chance(powerupTypes[powerup].chance)) {\r\n\t\t\t\tspawnPowerup({\r\n\t\t\t\t\ttype: powerup as powerupName,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} ", "// # this code is such a mess im sorry\r\nimport { GameObj, Vec2 } from \"kaplay\";\r\nimport { GameState, scoreManager } from \"../../gamestate\";\r\nimport { ROOT } from \"../../main\"\r\nimport { hexagon } from \"../hexagon\"\r\nimport { bop, getPrice, getVariable, randomPos } from \"../utils\";\r\nimport { playSfx } from \"../../sound\";\r\nimport { hexagonIntro } from \"../gamescene\";\r\nimport { mouse } from \"../additives\";\r\nimport { spawnCards } from \"./cards\";\r\nimport { folderObj } from \"../windows/windows-api/folderObj\";\r\nimport { waver } from \"../plugins/wave\";\r\nimport { positionSetter } from \"../plugins/positionSetter\";\r\nimport { allPowerupsInfo } from \"../powerups\";\r\n\r\nexport let ascension = {\r\n\tascending: false,\r\n\tcanLeave: false,\r\n}\r\n\r\nlet activeLetterWaits = []\r\nlet currentlySaying = \"\"\r\n\r\nfunction addMage() {\r\n\tlet mage_color = rgb(0, 51, 102)\r\n\t\r\n\tlet mage:any;\r\n\r\n\tmage = add([\r\n\t\tpos(-17, 154),\r\n\t\twaver({ wave_speed: 1, maxAmplitude: 2.5 }),\r\n\t\tlayer(\"ascension\"),\r\n\t\tz(1),\r\n\t\topacity(1),\r\n\t\tanchor(\"center\"),\r\n\t\t\"mage\",\r\n\t]);\r\n\tmage.startWave()\r\n\r\n\tlet mage_body = mage.add([\r\n\t\tpos(),\r\n\t\tsprite(\"mage_body\"),\r\n\t\tz(2),\r\n\t\t\"mage_body\",\r\n\t])\r\n\r\n\tlet mage_body_lightning = mage.add([\r\n\t\tpos(),\r\n\t\tsprite(\"mage_body_lightning\"),\r\n\t\tz(3),\r\n\t\topacity(0.25),\r\n\t\t\"mage_lightning\",\r\n\t])\r\n\r\n\tlet mage_cursors = mage.add([\r\n\t\tpos(0, -7),\r\n\t\tsprite(\"mage_cursors\"),\r\n\t\tz(0),\r\n\t\twaver({ wave_speed: 1, maxAmplitude: 5 }),\r\n\t\topacity(1),\r\n\t\tcolor(WHITE.darken(50)),\r\n\t])\r\n\tmage_cursors.startWave()\r\n\r\n\tlet mage_eye = mage.add([\r\n\t\tpos(117, 120),\r\n\t\tsprite(\"mage_eye\"),\r\n\t\tarea({ scale: 0.8 }),\r\n\t\tz(2),\r\n\t\t\"ascensionHover\",\r\n\t\t{\r\n\t\t\ttimeToBlinkAgain: 8,\r\n\t\t\ttimeUntilBlink: 8,\r\n\t\t\tupdate() {\r\n\t\t\t\tif (this.isHovering() && isMousePressed(\"left\")) {\r\n\t\t\t\t\tthis.play(\"blink\")\r\n\t\t\t\t\ttalk(\"mage\", \"stop that\")\r\n\t\t\t\t\t// currentDialogueIdx = getRandomElementDifferentFrom([1, 2, 3, 4], currentDialogueIdx)\r\n\t\t\t\t\t// mage.say(dialogues[currentDialogueIdx][dialogueEye.woke ? \"woke\" : \"dumb\"], dialogues[currentDialogueIdx].speed)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.timeToBlinkAgain -= dt()\r\n\t\t\t\tif (this.timeToBlinkAgain < 0) {\r\n\t\t\t\t\tthis.timeToBlinkAgain = rand(5, 8)\r\n\t\t\t\t\tthis.timeToBlinkAgain = this.timeToBlinkAgain\r\n\t\t\t\t\tif (chance(0.75)) this.play(\"blink\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\tmage_eye.onAnimEnd((anim) => {\r\n\t\t// if (anim != \"blink\") return\r\n\t\t// if (chance(0.25)) mage_eye.play(\"blink\") \r\n\t});\r\n\r\n\tlet mage_toparm = mage.add([\r\n\t\tpos(0, 0),\r\n\t\tsprite(\"mage_toparm\"),\r\n\t\tz(1),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-0.5, 0.5, time())\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t])\r\n\r\n\tlet mage_toparm_lightning = mage.add([\r\n\t\tpos(0, 0),\r\n\t\tsprite(\"mage_toparm_lightning\"),\r\n\t\tz(4),\r\n\t\topacity(0.25),\r\n\t\t\"mage_lightning\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-0.5, 0.5, time())\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t])\r\n\r\n\tlet mage_botarm = mage.add([\r\n\t\tpos(5, 240),\r\n\t\tsprite(\"mage_botarm\"),\r\n\t\tz(7),\r\n\t\tanchor(\"left\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-1, 1, time())\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t])\r\n\r\n\tlet mage_botarm_lightning = mage.add([\r\n\t\tpos(5, 240),\r\n\t\tsprite(\"mage_botarm_lightning\"),\r\n\t\tz(8),\r\n\t\tanchor(\"left\"),\r\n\t\topacity(0.25),\r\n\t\t\"mage_lightning\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-1, 1, time())\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t])\r\n\r\n\tlet mage_hexagon = mage.add([\r\n\t\tpos(GameState.settings.panderitoMode ? vec2(231, 250): vec2(231, 244)),\r\n\t\tsprite(GameState.settings.panderitoMode ? \"panderito\" : \"hexagon\"),\r\n\t\tscale(0.35),\r\n\t\twaver({ wave_speed: 1, maxAmplitude: 10 }),\r\n\t\trotate(0),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(WHITE),\r\n\t\tz(5),\r\n\t\tarea({ scale: 0.8 }),\r\n\t\t\"hexagon\",\r\n\t\t\"ascensionHover\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (this.isHovering() && isMousePressed(\"left\")) {\r\n\t\t\t\t\tbop(this, 0.01)\r\n\t\t\t\t\ttalk(\"mage\", \"no backsies\")\r\n\t\t\t\t}\r\n\t\t\t\tthis.angle += 0.02\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\t// runs thorugh every object with mage_lightning object and attaches an \r\n\t// onupdate that does the color stuff\r\n\tmage.get(\"mage_lightning\").forEach(o => o.onUpdate(() => { \r\n\t\to.color = mage_hexagon.color\r\n\t}))\r\n\r\n\treturn mage;\r\n}\r\n\r\nlet dialogue:any;\r\n\r\nfunction addDialogueBox() {\r\n\tlet box = add([\r\n\t\tsprite(\"dialogue\"),\r\n\t\tpos(623, 144),\r\n\t\tanchor(\"center\"),\r\n\t\tscale(),\r\n\t\tarea({ scale: 0.8 }),\r\n\t\topacity(),\r\n\t\tlayer(\"ascension\"),\r\n\t\tz(1),\r\n\t\t\"textbox\",\r\n\t\t{\r\n\t\t\tdefaultPos: vec2(623, 144),\r\n\t\t}\r\n\t])\r\n\r\n\tbox.on(\"talk\", (speaker) => {\r\n\t\tif (speaker == \"card\") {\r\n\t\t\tbox.use(sprite(\"hoverDialogue\"))\r\n\t\t\ttween(box.defaultPos.y + 10, box.defaultPos.y, 0.25, (p) => box.pos.y = p, easings.easeOutQuint)\r\n\t\t}\r\n\t\t\r\n\t\telse if (speaker == \"mage\") {\r\n\t\t\tbox.use(sprite(\"dialogue\"))\r\n\t\t\ttween(box.defaultPos.x - 10, box.defaultPos.x, 0.25, (p) => box.pos.x = p, easings.easeOutQuint)\r\n\t\t}\r\n\r\n\t\ttween(0.75, 1, 0.25, (p) => box.scale.x = p, easings.easeOutQuint)\r\n\t})\r\n\r\n\tbox.onClick(() => {\r\n\t\tif (dialogue.textBox.text == currentlySaying) return\r\n\t\tskipTalk()\r\n\t})\r\n\r\n\ttween(0.5, 1, 0.25, (p) => box.scale.x = p, easings.easeOutQuint)\r\n\ttween(0, 1, 0.25, (p) => box.opacity = p, easings.easeOutQuint)\r\n\r\n\treturn box\r\n}\r\n\r\nfunction addDialogueText() {\r\n\tlet textBox = add([\r\n\t\ttext(\"\", {\r\n\t\t\tstyles: {\r\n\t\t\t\t\"wavy\": (idx) => ({\r\n\t\t\t\t\tpos: vec2(0, wave(-4, 4, time() * 6 + idx * 0.5)),\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\twidth: 606, // width without tail\r\n\t\t\talign: \"center\",\r\n\t\t\tsize: 25,\r\n\t\t}),\r\n\t\tpos(670, 127),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(BLACK),\r\n\t\tlayer(\"ascension\"),\r\n\t\topacity(),\r\n\t\tz(dialogue.box.z + 1),\r\n\t\t\"textbox\",\r\n\t\t\"boxText\",\r\n\t])\r\n\r\n\treturn textBox\r\n}\r\n\r\nexport function talk(speaker:\"mage\" | \"card\", thingToSay:string, speed?:number) {\r\n\tdialogue.box.trigger(\"talk\", speaker)\r\n\r\n\tspeaker = speaker || \"card\"\r\n\tthingToSay = thingToSay || \"No dialogue, missing a dialogue here\"\r\n\tspeed = speed || 0.025\r\n\t\r\n\tif (currentlySaying == thingToSay) speed /= 2\r\n\tcurrentlySaying = thingToSay\r\n\r\n\tactiveLetterWaits.forEach(waitCall => waitCall.cancel());\r\n\tactiveLetterWaits = [];\r\n\tdialogue.textBox.text = \"\"\r\n\r\n\tlet currentDelay = 0\r\n\tArray.from(thingToSay).forEach((letter, index) => {\r\n\t\tlet delay = speed;\r\n\t\tif (letter === ',' || letter === \"_\") {\r\n\t\t\tdelay = speed * 5; // Adjust the multiplier as needed for commas and spaces\r\n\t\t}\r\n\r\n\t\t// Increment currentDelay by the calculated delay\r\n\t\tcurrentDelay += delay;\r\n\r\n\t\tconst waitCall = wait(currentDelay, () => {\r\n\t\t\tif (letter !== \"_\") dialogue.textBox.text += letter;\r\n\t\t\t// playSfx(\"mage_e\", { detune: rand(-150, 150) });\r\n\t\t});\r\n\r\n\t\tactiveLetterWaits.push(waitCall);\r\n\t});\r\n}\r\n\r\nfunction skipTalk() {\r\n\tactiveLetterWaits.forEach(waitCall => waitCall.cancel());\r\n\tdialogue.textBox.text = currentlySaying\r\n\ttween(dialogue.box.defaultPos.y + 10, dialogue.box.defaultPos.y, 0.25, (p) => dialogue.box.pos.y = p, easings.easeOutQuint)\r\n\ttween(dialogue.box.defaultPos.x + 10, dialogue.box.defaultPos.x, 0.25, (p) => dialogue.box.pos.x = p, easings.easeOutQuint)\r\n}\r\n\r\nexport function triggerAscension() {\r\n\t// stuff\r\n\tascension.ascending = true\r\n\tallPowerupsInfo.canSpawnPowerups = false\r\n\r\n\t// the multiplier cool!!!\r\n\tGameState.ascension.magicLevel++\r\n\r\n\tROOT.trigger(\"ascension\", { score: GameState.score, scoreThisRun: GameState.scoreThisRun })\r\n\t\r\n\thexagon.interactable = false\r\n\tfolderObj.interactable = false\r\n\tfolderObj.fold()\r\n\r\n\tget(\"window\").forEach((window) => {\r\n\t\twindow.close()\r\n\t})\r\n\r\n\ttween(hexagon.scaleIncrease, 0, 0.35, (p) => hexagon.scaleIncrease = p, easings.easeOutCubic)\r\n\ttween(hexagon.stretchScaleIncrease, 0, 0.35, (p) => hexagon.stretchScaleIncrease = p, easings.easeOutCubic)\r\n\ttween(hexagon.maxScaleIncrease, 0, 0.35, (p) => hexagon.maxScaleIncrease = p, easings.easeOutCubic)\r\n\r\n\tlet blackBg = add([\r\n\t\trect(width(), height()),\r\n\t\tcolor(BLACK),\r\n\t\tfixed(),\r\n\t\topacity(0.5),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(center()),\r\n\t\tz(0),\r\n\t\tlayer(\"ascension\"),\r\n\t\t\"ascensionBg\"\r\n\t])\r\n\r\n\tlet mage = addMage();\r\n\tmage.pos.x = -489\r\n\tblackBg.fadeIn(0.35).onEnd(() => {\r\n\t\t// ADD THE MAGEEEEE!!!!!!!! so excited\r\n\t\ttween(-489, -17, 0.5, (p) => mage.pos.x = p, easings.easeOutQuart)\r\n\t\ttween(145, 154, 0.5, (p) => mage.pos.y = p, easings.easeOutQuart)\r\n\t\ttween(0.5, 1, 0.5, (p) => mage.opacity = p, easings.easeOutQuart).onEnd(() => {\r\n\t\t\tdialogue = add([])\r\n\t\t\tdialogue.box = addDialogueBox()\r\n\t\t\tdialogue.textBox = addDialogueText()\r\n\t\t\t\r\n\t\t\ttalk(\"mage\", \"welcome to fortnite\")\r\n\t\t\tmage.trigger(\"endAnimating\")\r\n\t\t})\r\n\t})\r\n\r\n\t//#region CARD STUFF\r\n\tspawnCards()\r\n\t// #endregion\r\n\r\n\twait(0.1, () => {\r\n\t\tlet manaText = add([\r\n\t\t\ttext(\"\", { align: \"left\", font: \"lambdao\", size: 38 }),\r\n\t\t\tpos(4, 19),\r\n\t\t\tanchor(\"left\"),\r\n\t\t\tlayer(\"ascension\"),\r\n\t\t\topacity(1),\r\n\t\t\t\"manaText\",\r\n\t\t\t{\r\n\t\t\t\thiddenXPos: -72,\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tthis.text = `\u2726${GameState.ascension.mana}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t\r\n\t\tmanaText.fadeIn(0.35)\r\n\t\ttween(manaText.hiddenXPos, 4, 0.5, (p) => manaText.pos.x = p, easings.easeOutQuart)\r\n\t})\r\n\r\n\t// leave button\r\n\tlet canLeaveAscensionCheck = ROOT.on(\"canLeaveAscension\", () => {\r\n\t\tlet leaveButton = add([\r\n\t\t\tsprite(\"confirmAscension\"),\r\n\t\t\tlayer(\"ascension\"),\r\n\t\t\tz(6),\r\n\t\t\tpos(960, 289),\r\n\t\t\tlayer(\"ascension\"),\r\n\t\t\tscale(),\r\n\t\t\tarea(),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tpositionSetter(),\r\n\t\t\topacity(),\r\n\t\t\t\"ascensionHover\",\r\n\t\t\t\"leaveButton\",\r\n\t\t\t{\r\n\t\t\t\tdscale: vec2(0.8),\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tif (ascension.canLeave == true) {\r\n\t\t\t\t\t\tthis.area.scale = vec2(1)\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.area.scale = vec2(0)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t\tleaveButton.fadeIn(0.1, easings.easeOutQuad)\r\n\t\r\n\t\tleaveButton.onHover(() => {\r\n\t\t\ttween(leaveButton.scale, vec2(1.2), 0.35, (p) => leaveButton.scale = p, easings.easeOutQuint)\r\n\t\t})\r\n\t\t\r\n\t\tleaveButton.onHoverEnd(() => {\r\n\t\t\ttween(leaveButton.scale, vec2(1), 0.35, (p) => leaveButton.scale = p, easings.easeOutQuint)\r\n\t\t})\r\n\t\r\n\t\tmage.on(\"endAnimating\", () => {\r\n\t\t\tleaveButton.onUpdate(() => {\r\n\t\t\t\tif (ascension.canLeave == true) leaveButton.opacity = 1\r\n\t\t\t\telse leaveButton.opacity = 0.75\r\n\t\t\t})\r\n\t\t})\r\n\t\r\n\t\tleaveButton.onClick(() => {\r\n\t\t\tleaveButton.area.scale = vec2(0)\r\n\t\t\tbop(leaveButton)\r\n\t\t\tplaySfx(\"clickButton\")\r\n\t\t\tmouse.play(\"point\")\r\n\t\t\tendAscension()\r\n\t\t})\r\n\r\n\t\tcanLeaveAscensionCheck.cancel()\r\n\t})\r\n\r\n\tlet startHover = onHover(\"ascensionHover\", () => {\r\n\t\tmouse.play(\"point\")\r\n\t})\r\n\r\n\tlet endHover = onHoverEnd(\"ascensionHover\", () => {\r\n\t\tmouse.play(\"cursor\")\r\n\t})\r\n\r\n\tblackBg.onDestroy(() => {\r\n\t\tstartHover.cancel()\r\n\t\tendHover.cancel()\r\n\t})\r\n}\r\n\r\nexport function endAscension() {\r\n\tfolderObj.interactable = true\r\n\tROOT.trigger(\"endAscension\")\r\n\tallPowerupsInfo.canSpawnPowerups = true\r\n\r\n\tget(\"*\", { recursive: true }).filter(obj => obj.layer == \"ascension\").forEach((obj) => {\r\n\t\tif (obj.is(\"area\")) obj.area.scale = vec2(0)\r\n\t\t\r\n\t\tif (obj.is(\"mage\") || obj.is(\"manaText\")) {\r\n\t\t\ttween(obj.pos.x, obj.pos.x - obj.width, 0.5, (p) => obj.pos.x = p, easings.easeOutQuart).onEnd(() => destroy(obj))\r\n\t\t}\r\n\r\n\t\telse if (obj.is(\"card\")) {\r\n\t\t\ttween(obj.pos.y, obj.pos.y + obj.height, 0.5, (p) => obj.pos.y = p, easings.easeOutQuart).onEnd(() => destroy(obj))\r\n\t\t}\r\n\r\n\t\telse if (obj.is(\"textbox\")) {\r\n\t\t\ttween(obj.pos.y, -obj.height, 0.5, (p) => obj.pos.y = p, easings.easeOutQuart).onEnd(() => destroy(obj))\r\n\t\t}\r\n\r\n\t\telse if (obj.is(\"ascensionBg\") || obj.is(\"leaveButton\")) {\r\n\t\t\tobj.fadeOut(0.5).onEnd(() => destroy(obj))\r\n\t\t}\r\n\t})\r\n\r\n\t// turn everything back to 0\r\n\tscoreManager.resetRun()\r\n\r\n\twait(0.25, () => {\r\n\t\ttween(hexagon.scaleIncrease, 1, 0.25, (p) => hexagon.scaleIncrease = p, easings.easeOutQuint)\r\n\t\ttween(hexagon.maxScaleIncrease, 1, 0.25, (p) => hexagon.maxScaleIncrease = p, easings.easeOutQuint)\r\n\t\ttween(hexagon.stretchScaleIncrease, 1, 0.25, (p) => hexagon.stretchScaleIncrease = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\thexagon.interactable = true\r\n\t\t})\r\n\t\thexagonIntro()\r\n\t})\r\n\r\n\twait(0.5, () => {\r\n\t\tascension.canLeave = false\r\n\t})\r\n}", "import { GameState } from \"../../../gamestate\";\r\nimport { curDraggin } from \"../.././plugins/drag\";\r\nimport { playSfx } from \"../../../sound\";\r\nimport { mouse } from \"../../additives\";\r\nimport { ascension } from \"../../ascension/ascension\";\r\nimport { blendColors, bop } from \"../../utils\";\r\nimport { setTimeSinceSkip, timeSinceSkip } from \"../musicWindow\";\r\nimport { addMinibutton, getMinibuttonPos,  } from \"./minibuttons\";\r\nimport { manageWindow, allObjWindows } from \"./windowManaging\";\r\nimport { outsideWindowHover } from \"../../hovers/outsideWindowHover\";\r\n\r\nexport let folderObj;\r\nexport let folded = true;\r\nlet timeSinceFold = 0;\r\n\r\nlet movingMinibuttons:boolean;\r\nexport function folderObjManaging() {\r\n\t// reset variables\r\n\tfolded = true\r\n\ttimeSinceFold = 0\r\n\t\r\n\tallObjWindows.isHoveringAWindow = false;\r\n\tallObjWindows.isDraggingAWindow = false;\r\n\t\r\n\tmovingMinibuttons = false;\r\n\r\n\tfolderObj = add([\r\n\t\tsprite(\"folderObj\"),\r\n\t\tpos(width() - 40, height() - 40),\r\n\t\tarea({ scale: vec2(1.2) }),\r\n\t\tlayer(\"ui\"),\r\n\t\tz(0),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\toutsideWindowHover(),\r\n\t\t\"folderObj\",\r\n\t\t{\r\n\t\t\tdefaultScale: vec2(1.2),\r\n\t\t\tinteractable: true, \r\n\t\t\tunfold() {\r\n\t\t\t\tfolded = false\r\n\t\t\t\ttimeSinceFold = 0\r\n\t\t\t\tplaySfx(\"fold\")\r\n\r\n\t\t\t\t// if there's no minibutton\r\n\t\t\t\tif (get(\"minibutton\").length == 0) {\r\n\t\t\t\t\tGameState.taskbar.forEach((key, taskbarIndex) => {\r\n\t\t\t\t\t\tlet newminibutton = addMinibutton({\r\n\t\t\t\t\t\t\twindowKey: key,\r\n\t\t\t\t\t\t\ttaskbarIndex: taskbarIndex,\r\n\t\t\t\t\t\t\tinitialPosition: folderObj.pos,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tmovingMinibuttons = true\r\n\t\t\t\t\tget(\"minibutton\").forEach((miniButton) => {\r\n\t\t\t\t\t\ttween(miniButton.pos, miniButton.destinedPosition, 0.32, (p) => miniButton.pos = p, easings.easeOutBack).then(() => {\r\n\t\t\t\t\t\t\tmovingMinibuttons = false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.trigger(\"unfold\")\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tfold() {\r\n\t\t\t\tfolded = true\r\n\t\t\t\t\r\n\t\t\t\t// return them to folderObj pos\r\n\t\t\t\tmovingMinibuttons = true\r\n\t\t\t\tget(\"minibutton\").forEach(minibutton => {\r\n\t\t\t\t\ttween(minibutton.opacity, 0, 0.32, (p) => minibutton.opacity = p, easings.easeOutQuint)\r\n\t\t\t\t\ttween(minibutton.pos, folderObj.pos, 0.32, (p) => minibutton.pos = p, easings.easeOutQuint).then(() => {\r\n\t\t\t\t\t\tdestroy(minibutton)\r\n\t\t\t\t\t\tmovingMinibuttons = false\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\r\n\t\t\t\tplaySfx(\"fold\", { detune: -150 })\r\n\t\t\t\tthis.trigger(\"fold\")\r\n\t\t\t},\r\n\r\n\t\t\tmanageFold() {\r\n\t\t\t\tif (folded) folderObj.unfold()\r\n\t\t\t\telse folderObj.fold()\r\n\t\t\t},\r\n\r\n\t\t\taddSlots() {\r\n\t\t\t\tget(\"minibutton\").filter(minibutton => !minibutton.extraMb).forEach((minibutton, index) => {\r\n\t\t\t\t\t// add slots\r\n\t\t\t\t\tadd([\r\n\t\t\t\t\t\trect(20, 20, { radius: 4 }),\r\n\t\t\t\t\t\tpos(getMinibuttonPos(index)),\r\n\t\t\t\t\t\tcolor(BLACK),\r\n\t\t\t\t\t\tanchor(\"center\"),\r\n\t\t\t\t\t\topacity(0.5),\r\n\t\t\t\t\t\t\"minibuttonslot\",\r\n\t\t\t\t\t\t\"slot_\" + index,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttaskbarIndex: index,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t])\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tdeleteSlots() {\r\n\t\t\t\tlet minibuttonsslots = get(\"minibuttonslot\")\r\n\t\t\t\tminibuttonsslots?.forEach((minibuttonslot) => {\r\n\t\t\t\t\tdestroy(minibuttonslot)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tupdate() {\r\n\t\t\t\tif (this.interactable == false) this.area.scale = vec2(0)\r\n\t\t\t\telse this.area.scale = vec2(1.2) \r\n\r\n\t\t\t\tthis.flipX = folded ? true : false\r\n\t\t\t\t\r\n\t\t\t\tif (curDraggin?.is(\"gridMiniButton\") || curDraggin?.is(\"minibutton\")) return\r\n\t\t\t\tif (!movingMinibuttons) {\r\n\t\t\t\t\tif (this.interactable == true && isKeyPressed(\"space\") || (isMousePressed(\"left\") && this.isHovering())) {\r\n\t\t\t\t\t\tthis.manageFold()\r\n\t\t\t\t\t\tthis.deleteSlots()\r\n\t\t\t\t\t\tbop(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (timeSinceFold < 0.25) timeSinceFold += dt()\r\n\t\t\t\tif (timeSinceSkip < 5) setTimeSinceSkip(timeSinceSkip + dt())\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tfolderObj.startingHover(() => {\r\n\t\tmouse.play(\"point\")\r\n\t})\r\n\r\n\tfolderObj.endingHover(() => {\r\n\t\tmouse.play(\"cursor\")\r\n\t})\r\n\r\n\t// this can't be attached to the buttons because you won't be able to call the event if the buttons don't exist\r\n\tfolderObj.onCharInput((key) => {\r\n\t\tif (ascension.ascending == true) return;\r\n\t\tif (isKeyDown(\"control\")) return\r\n\t\tif (curDraggin) return\r\n\r\n\t\t// parse the key to number\r\n\t\tconst numberPressed = parseInt(key);\r\n\t\tif (isNaN(numberPressed)) return; // If the key is not a number, return\r\n\t\r\n\t\t// adjust it to 0, 1, 2, 3\r\n\t\tconst index = numberPressed - 1;\r\n\r\n\t\t// // if the window you're trying to open is the same as the minibutton that is being dragged don't open it!!\r\n\t\t// if (curDraggin?.is(\"minibutton\") && curDraggin?.idxForInfo == infoForWindows[curDraggin?.windowKey].idx) return\r\n\r\n\t\t// silly\r\n\t\tif (numberPressed == 0) {\r\n\t\t\tif (folded) folderObj.unfold();\r\n\t\t\tmanageWindow(\"extraWin\")\r\n\t\t}\r\n\r\n\t\telse if (index >= 0 && index < GameState.taskbar.length) {\r\n\t\t\tconst windowKey = GameState.taskbar[index];\r\n\t\r\n\t\t\tif (GameState.unlockedWindows.includes(windowKey)) {\r\n\t\t\t\tif (folded) folderObj.unfold();\r\n\t\t\t\t\r\n\t\t\t\tlet minibutton = get(windowKey)?.filter(obj => obj.is(\"minibutton\"))[0]\r\n\t\t\t\tif (minibutton) minibutton.click()\r\n\t\t\t\telse manageWindow(windowKey)\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tfolderObj.on(\"winClose\", () => {\r\n\t\t// wait(0.05, () => {\r\n\t\t\t// gets the topmost window\r\n\t\t\tlet allWindows = get(\"window\")\r\n\t\t\tif (allWindows.length > 0) allWindows.reverse()[0].activate()\r\n\t\t// })\r\n\r\n\t\tlet isAnyObjGettingHovered = get(\"outsideHover\", { recursive: true }).some((outsideHover) => outsideHover.isHovering() == true && outsideHover.isBeingHovered == false)\r\n\t\tif (isAnyObjGettingHovered == true) {\r\n\t\t\t// get all the objs that are being hovered\r\n\t\t\tlet allHoveredObjs = get(\"outsideHover\", { recursive: true }).filter((outsideHover) => outsideHover.isHovering() == true && outsideHover.isBeingHovered == false)\r\n\t\t\tallHoveredObjs.forEach((obj) => obj.startHoverFunction())\r\n\t\t}\r\n\t})\r\n\r\n\tfolderObj.onUpdate(() => {\r\n\t\tif ((get(\"window\").length > 0)) {\r\n\t\t\t// if any window is being hovered on\r\n\t\t\tallObjWindows.isHoveringAWindow = get(\"window\").some((window) => window.isMouseInRange())\r\n\t\t\tallObjWindows.isDraggingAWindow = get(\"window\").some((window) => window.dragging)\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tallObjWindows.isHoveringAWindow = false\r\n\t\t\tallObjWindows.isDraggingAWindow = false\r\n\t\t}\r\n\t})\r\n\r\n\t// manages behaviour related to the closeest minibutton\r\n\tonUpdate(\"closestMinibuttonToDrag\", (minibutton) => {\r\n\t\tif (!curDraggin?.is(\"gridMiniButton\")) return\r\n\t\tif (curDraggin?.screenPos().dist(minibutton.screenPos()) > 120) return\r\n\t\tlet distanceToCurDragging = curDraggin?.screenPos().dist(minibutton.screenPos())\r\n\r\n\t\tminibutton.nervousSpinSpeed = 14\r\n\t\tlet blackness = map(distanceToCurDragging, 20, 120, 1, 0.25)\r\n\t\tminibutton.opacity = map(distanceToCurDragging, 20, 120, 0.5, 1)\r\n\t\tminibutton.scale.x = map(distanceToCurDragging, 20, 120, 0.8, 1)\r\n\t\tminibutton.scale.y = map(distanceToCurDragging, 20, 120, 0.8, 1)\r\n\t\tminibutton.scale.y = map(distanceToCurDragging, 20, 120, 0.8, 1)\r\n\t\tminibutton.color = blendColors(WHITE, BLACK, blackness)\r\n\t})\r\n}", "import { GameObj, Vec2 } from \"kaplay\"\r\nimport { GameState, scoreManager } from \"../../../gamestate\"\r\nimport { playSfx } from \"../../../sound\"\r\nimport { ROOT } from \"../../../main\"\r\nimport { bop, formatNumber, getPrice, getRandomDirection, getVariable, percentage, randomPos } from \"../../utils\"\r\nimport { addTooltip } from \"../../additives\"\r\nimport { allPowerupsInfo, powerupTypes, spawnPowerup } from \"../../powerups\"\r\nimport { isHoveringUpgrade, storeElements, storePitchJuice } from \"./storeWindows\"\r\nimport { insideWindowHover } from \"../../hovers/insideWindowHover\"\r\n\r\nexport let storeElementsInfo = {\r\n\t\"clickersElement\": { \r\n\t\tgamestateKey: \"clickers\",\r\n\t\tbasePrice: 25,\r\n\t\tpercentageIncrease: 15\r\n\t},\r\n\t\"cursorsElement\": { \r\n\t\tgamestateKey: \"cursors\",\r\n\t\tbasePrice: 50,\r\n\t\tpercentageIncrease: 25\r\n\t},\r\n\t\"powerupsElement\": { \r\n\t\tgamestateKey: \"stats.powerupsBought\",\r\n\t\tbasePrice: 50500,\r\n\t\tpercentageIncrease: 90,\r\n\t\tunlockPrice: 10500\r\n\t},\r\n}\r\n\r\nfunction addSmoke(winParent:any, btn:any) {\r\n\tlet smoke = winParent.add([\r\n\t\tsprite(\"smoke\"),\r\n\t\tpos(btn.pos.x - btn.width / 2, btn.pos.y - btn.height / 2),\r\n\t\topacity(),\r\n\t\tanchor(\"center\"),\r\n\t\tz(btn.z - 1),\r\n\t\t\"smoke\",\r\n\t])\r\n\r\n\tsmoke.fadeIn(1)\r\n\tsmoke.play(\"smoking\")\r\n\treturn smoke;\r\n}\r\n\r\nfunction regularStoreElement(winParent) {\r\n\tlet thisElement = null\r\n\r\n\tlet timer = 0;\r\n\tlet minTime = 0.08\r\n\tlet timeUntilAnotherBuy = 1.2\r\n\tlet maxTime = 1.2\r\n\tlet hold_timesBought = 0\r\n\r\n\tlet downEvent = null;\r\n\t\r\n\treturn {\r\n\t\tadd() {\r\n\t\t\tthisElement = this\r\n\r\n\t\t\tthisElement.onMousePress(\"left\", () => {\r\n\t\t\t\tif (allPowerupsInfo.isHoveringAPowerup == true) return\r\n\t\t\t\tif (thisElement.isBeingHovered == false) return\r\n\t\t\t\tif (!winParent.active) return\r\n\t\t\t\t\r\n\t\t\t\tif (isHoveringUpgrade) return\r\n\t\t\t\tif (!thisElement.isHovering()) return;\r\n\t\t\t\tif (GameState.score < thisElement.price) {\r\n\t\t\t\t\tthisElement.trigger(\"notEnoughMoney\")\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdownEvent = thisElement.onMouseDown(() => {\r\n\t\t\t\t\tthisElement.isBeingClicked = true\r\n\t\t\t\t\tif (GameState.score < thisElement.price) return\r\n\t\t\t\r\n\t\t\t\t\tif (hold_timesBought == 0) {\r\n\t\t\t\t\t\ttimeUntilAnotherBuy = maxTime\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\ttimer += dt()\r\n\t\t\t\r\n\t\t\t\t\ttimeUntilAnotherBuy = maxTime / (hold_timesBought)\r\n\t\t\t\t\ttimeUntilAnotherBuy = clamp(timeUntilAnotherBuy, minTime, maxTime)\r\n\t\t\t\r\n\t\t\t\t\tif (hold_timesBought == 0) {\r\n\t\t\t\t\t\thold_timesBought = 1\r\n\t\t\t\t\t\tthisElement.buy(amountToBuy)\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (timer > timeUntilAnotherBuy) {\r\n\t\t\t\t\t\ttimer = 0\r\n\t\t\t\t\t\thold_timesBought++\t\r\n\t\t\t\t\t\tthisElement.buy(amountToBuy)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\r\n\t\t\tthisElement.onMouseRelease(() => {\r\n\t\t\t\tif (allPowerupsInfo.isHoveringAPowerup == true) return\r\n\t\t\t\tif (!winParent.active) return\r\n\t\t\t\t\r\n\t\t\t\tdownEvent?.cancel()\r\n\t\t\t\tdownEvent = null\r\n\t\t\r\n\t\t\t\tif (!thisElement.isHovering()) return\r\n\t\t\t\tthisElement.isBeingClicked = false\r\n\t\t\t\t\r\n\t\t\t\ttimer = 0\r\n\t\t\t\thold_timesBought = 0\r\n\t\t\t\ttimeUntilAnotherBuy = 2.25\r\n\t\t\t})\r\n\t\t\r\n\t\t\tthisElement.on(\"endHover\", () => {\r\n\t\t\t\ttimer = 0\r\n\t\t\t\thold_timesBought = 0\r\n\t\t\t})\r\n\t\t},\r\n\t}\r\n}\r\n\r\nfunction lockedPowerupStoreElement(winParent:GameObj) {\r\n\tlet thisElement = null;\r\n\tlet progressSound = null;\r\n\r\n\tconst unlockPrice = storeElementsInfo.powerupsElement.unlockPrice\r\n\treturn {\r\n\t\tid: \"lockedPowerupStoreElement\",\r\n\t\tchains: null,\r\n\t\tboughtProgress: 0,\r\n\t\t\r\n\t\tdropUnlock() {\r\n\t\t\ttween(thisElement.boughtProgress, 0, 0.15, (p) => thisElement.boughtProgress = p)\r\n\t\t\ttween(this.scale, vec2(1.025), 0.15, (p) => this.scale = p, easings.easeOutQuad)\r\n\t\t\ttween(thisElement.chains.opacity, 1, 0.15, (p) => thisElement.chains.opacity = p, easings.easeOutQuad)\r\n\t\t},\r\n\r\n\t\tadd() {\r\n\t\t\tthisElement = this\r\n\t\t\r\n\t\t\tthisElement.chains = thisElement.add([\r\n\t\t\t\tsprite(\"chains\"),\r\n\t\t\t\tpos(),\r\n\t\t\t\tanchor(\"center\"),\r\n\t\t\t\topacity(1),\r\n\t\t\t])\r\n\r\n\t\t\tthisElement.onDraw(() => {\r\n\t\t\t\tdrawRect({\r\n\t\t\t\t\twidth: thisElement.width,\r\n\t\t\t\t\theight: map(thisElement.boughtProgress, 0, 100, thisElement.height, 0),\r\n\t\t\t\t\tanchor: \"bot\",\r\n\t\t\t\t\tcolor: BLACK,\r\n\t\t\t\t\tpos: vec2(0, thisElement.height / 2),\r\n\t\t\t\t\tradius: 5,\r\n\t\t\t\t\topacity: 0.8,\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\r\n\t\t\tlet downEvent = null;\r\n\t\t\tthisElement.onMousePress(\"left\", () => {\r\n\t\t\t\tif (allPowerupsInfo.isHoveringAPowerup == true) return\r\n\t\t\t\tif (thisElement.isBeingHovered == false) return\r\n\t\t\t\tif (!winParent.active) return\r\n\t\t\t\r\n\t\t\t\tdownEvent?.cancel()\r\n\t\t\t\tif (!thisElement.isHovering()) return;\r\n\r\n\t\t\t\tif (GameState.score < thisElement.price) {\r\n\t\t\t\t\tthisElement.trigger(\"notEnoughMoney\")\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprogressSound = playSfx(\"progress\")\r\n\r\n\t\t\t\tdownEvent = thisElement.onMouseDown(\"left\", () => {\r\n\t\t\t\t\tif (thisElement.isBeingHovered == false) return\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (thisElement.boughtProgress < 100) {\r\n\t\t\t\t\t\tthisElement.boughtProgress += 1.5\r\n\t\t\t\t\t\tthisElement.scale.x = map(thisElement.boughtProgress, 0, 100, 1.025, 0.9)\r\n\t\t\t\t\t\tthisElement.scale.y = map(thisElement.boughtProgress, 0, 100, 1.025, 0.9)\r\n\t\t\t\t\t\tthisElement.chains.opacity = map(thisElement.boughtProgress, 0, 100, 1, 0.25)\r\n\t\t\t\t\t\tprogressSound.detune = thisElement.boughtProgress * 1.1\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\tif (thisElement.boughtProgress >= 100 && !GameState.hasUnlockedPowerups) {\r\n\t\t\t\t\t\tthisElement.unlock()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\r\n\t\t\tthisElement.onMouseRelease(\"left\", () => {\r\n\t\t\t\tif (allPowerupsInfo.isHoveringAPowerup == true) return\r\n\t\t\t\tif (!winParent.active) return\r\n\t\t\t\r\n\t\t\t\tif (!thisElement.isHovering()) return;\r\n\t\r\n\t\t\t\tthisElement.dropUnlock()\r\n\t\t\t\tif (thisElement.boughtProgress > 0) {\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (GameState.score >= this.price) bop(thisElement)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprogressSound?.seek(1)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tunlock() {\r\n\t\t\tGameState.hasUnlockedPowerups = true\r\n\t\t\tplaySfx(\"kaching\")\r\n\t\t\tplaySfx(\"chainbreak\")\r\n\t\t\t\r\n\t\t\tlet copyOfOld = thisElement\r\n\t\t\t\r\n\t\t\tthisElement.destroy()\r\n\t\t\tlet newElement = addStoreElement(winParent, { type: \"powerupsElement\", pos: thisElement.pos })\r\n\t\t\t\r\n\t\t\t// update the new powerup store element\r\n\t\t\tlet index = storeElements.indexOf(copyOfOld)\r\n\t\t\tif (index > -1) storeElements[index] = newElement \r\n\t\t\t\r\n\t\t\tROOT.trigger(\"powerupunlock\")\r\n\t\t\tscoreManager.subTweenScore(unlockPrice)\r\n\t\t},\r\n\t}\r\n}\r\n\r\nlet buyTimer = null // this is for the smoke stuff\r\nlet amountToBuy = 1\r\ntype storeElementOpt = {\r\n\ttype: \"clickersElement\" | \"cursorsElement\" | \"powerupsElement\",\r\n\tpos: Vec2,\r\n}\r\n\r\nexport function addStoreElement(winParent:any, opts:storeElementOpt) {\r\n\tconst btn = winParent.add([\r\n\t\tsprite(opts.type),\r\n\t\tpos(opts.pos),\r\n\t\tarea(),\r\n\t\tcolor(),\r\n\t\topacity(1),\r\n\t\tscale(1),\r\n\t\tanchor(\"center\"),\r\n\t\tz(winParent.z + 1),\r\n\t\tinsideWindowHover(winParent),\r\n\t\t\"storeElement\",\r\n\t\t`${opts.type}`,\r\n\t\t{\r\n\t\t\tprice: 0,\r\n\t\t\tisBeingClicked: false,\r\n\t\t\tdown: false,\r\n\t\t\ttimesBoughtConsecutively: 0,\r\n\t\t\tbuy(amount:number) {\r\n\t\t\t\tif (winParent.dragging) return\r\n\t\t\t\t\r\n\t\t\t\tGameState[storeElementsInfo[opts.type].gamestateKey] += amount\r\n\r\n\t\t\t\tstorePitchJuice.hasBoughtRecently = true;\r\n\t\t\t\tstorePitchJuice.timeSinceBought = 0;\r\n\t\t\t\tif (storePitchJuice.hasBoughtRecently == true) storePitchJuice.storeTune += 25;\r\n\t\t\t\tstorePitchJuice.storeTune = clamp(storePitchJuice.storeTune, -100, 500)\r\n\t\t\t\tplaySfx(\"kaching\", { detune: storePitchJuice.storeTune })\r\n\t\t\t\t\r\n\t\t\t\tscoreManager.subTweenScore(this.price)\r\n\r\n\t\t\t\tif (this.isBeingClicked) {\r\n\t\t\t\t\tthis.play(\"down\")\r\n\t\t\t\t\tthis.get(\"*\").forEach(element => {\r\n\t\t\t\t\t\telement.pos.y += 2\r\n\t\t\t\t\t});\r\n\t\t\t\t\twait(0.15, () => {\r\n\t\t\t\t\t\tthis.play(\"up\")\r\n\t\t\t\t\t\tthis.get(\"*\").forEach(element => {\r\n\t\t\t\t\t\t\telement.pos.y -= 2\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.timesBoughtConsecutively < 6) this.timesBoughtConsecutively++ \r\n\t\t\t\tbuyTimer?.cancel()\r\n\t\t\t\tbuyTimer = wait(0.75, () => {\r\n\t\t\t\t\tthis.timesBoughtConsecutively = 0\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if there's smoke\r\n\t\t\t\t\tlet smoke = get(\"smoke\", { recursive: true })[0]\r\n\t\t\t\t\tif (smoke) {\r\n\t\t\t\t\t\tsmoke.unuse(\"smoke\")\r\n\t\t\t\t\t\tsmoke.fadeOut(1)\r\n\t\t\t\t\t\ttween(smoke.pos.y, smoke.pos.y - 15, 0.5, (p) => smoke.pos.y = p)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (this.timesBoughtConsecutively == 5) {\r\n\t\t\t\t\taddSmoke(winParent, this)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tROOT.trigger(\"buy\", { element: \"storeElement\", type: opts.type == \"clickersElement\" ? \"clickers\" : \"cursors\", price: this.price })\r\n\t\t\t\r\n\t\t\t\tif (opts.type == \"powerupsElement\") {\r\n\t\t\t\t\tspawnPowerup({\r\n\t\t\t\t\t\ttype: \"random\",\r\n\t\t\t\t\t\tpos: randomPos(),\r\n\t\t\t\t\t\tnatural: false,\r\n\t\t\t\t\t})\r\n\t\t\t\t\tGameState.stats.powerupsBought++\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.trigger(\"buy\")\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\t// # EVENTS\r\n\tlet tooltip = null;\r\n\tif (opts.type == \"powerupsElement\" && GameState.hasUnlockedPowerups == false) {\r\n\t\tbtn.use(lockedPowerupStoreElement(winParent))\r\n\t\ttooltip = addTooltip(btn, {\r\n\t\t\ttext: `${formatNumber(storeElementsInfo.powerupsElement.unlockPrice, { price: true })}`,\r\n\t\t\tdirection: \"down\",\r\n\t\t\tlerpValue: 1,\r\n\t\t\tlayer: winParent.layer,\r\n\t\t\tz: winParent.z,\r\n\t\t\ttype: \"store\",\r\n\t\t})\r\n\r\n\t\tconst greenPrice = GREEN.lighten(30)\r\n\t\tconst redPrice = RED.lighten(30) \r\n\r\n\t\ttooltip.tooltipText.onUpdate(() => {\r\n\t\t\tif (GameState.score >= storeElementsInfo.powerupsElement.unlockPrice) tooltip.tooltipText.color = greenPrice\r\n\t\t\telse tooltip.tooltipText.color = redPrice  \r\n\t\t})\r\n\t}\r\n\r\n\telse btn.use(regularStoreElement(winParent))\r\n\t\r\n\t// update\r\n\tbtn.onUpdate(() => {\r\n\t\t// sets amountToBuy\r\n\t\tif (isKeyDown(\"shift\")) amountToBuy = 10 // this could be moved to storeWin\r\n\t\telse amountToBuy = 1\r\n\r\n\t\t// area\r\n\t\tbtn.area.scale = vec2(1 / btn.scale.x, 1 / btn.scale.y)\r\n\r\n\t\tif (opts.type == \"powerupsElement\" && GameState.hasUnlockedPowerups == false) {\r\n\t\t\tbtn.price = storeElementsInfo.powerupsElement.unlockPrice\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tconst amountBought = getVariable(GameState, storeElementsInfo[opts.type].gamestateKey) \r\n\t\r\n\t\t\tlet priceMultiplier = 1\r\n\t\t\tif (opts.type != \"powerupsElement\") priceMultiplier = powerupTypes.store.multiplier\r\n\t\t\t\r\n\t\t\t// price\r\n\t\t\tconst elementInfo = storeElementsInfo[opts.type]\r\n\t\t\tbtn.price = getPrice({\r\n\t\t\t\tbasePrice: elementInfo.basePrice,\r\n\t\t\t\tpercentageIncrease: elementInfo.percentageIncrease + 1 * GameState.stats.timesAscended,\r\n\t\t\t\tobjectAmount: amountBought,\r\n\t\t\t\tamountToBuy: opts.type == \"powerupsElement\" ? 1 : amountToBuy,\r\n\t\t\t\tgifted: opts.type == \"clickersElement\" ? 1 : 0\r\n\t\t\t}) * priceMultiplier\r\n\t\t}\r\n\t})\r\n\t\r\n\t// ### HOVERS\r\n\t// the component checks for the window being active\r\n\tbtn.startingHover(() => {\r\n\t\ttween(btn.scale, vec2(1.025), 0.15, (p) => btn.scale = p, easings.easeOutQuad)\r\n\t})\r\n\r\n\tbtn.endingHover(() => {\r\n\t\ttween(btn.scale, vec2(1), 0.15, (p) => btn.scale = p, easings.easeOutQuad)\r\n\t\tif (btn.isBeingClicked == true) btn.isBeingClicked = false\r\n\t\tbtn.trigger(\"endHover\")\r\n\t})\r\n\r\n\t// # Other objects\r\n\tlet stacksText = btn.add([\r\n\t\ttext(\"Stacked upgrades: 0\", {\r\n\t\t\tsize: 14,\r\n\t\t\talign: \"left\",\r\n\t\t}),\r\n\t\tanchor(\"left\"),\r\n\t\tpos(-155, 24),\r\n\t\tcolor(BLACK),\r\n\t\tz(btn.z + 1),\r\n\t\t\"stacksText\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (opts.type == \"clickersElement\") {\r\n\t\t\t\t\tlet percentage = `(+${GameState.clickPercentage}%)`\r\n\t\t\t\t\tlet stuff = [\r\n\t\t\t\t\t\t`Stacked upgrades: ${GameState.clicksUpgradesValue == 1 ? GameState.clicksUpgradesValue - 1: GameState.clicksUpgradesValue}`,\r\n\t\t\t\t\t\t`${GameState.clickPercentage < 1 ? \"\" : percentage}`\r\n\t\t\t\t\t]\r\n\r\n\t\t\t\t\tthis.text = stuff.join(\" \")\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (opts.type == \"cursorsElement\") {\r\n\t\t\t\t\tlet percentage = `(+${GameState.cursorsPercentage}%)`\r\n\t\t\t\t\tlet stuff = [\r\n\t\t\t\t\t\t`Stacked upgrades: ${GameState.cursorsUpgradesValue == 1 ? GameState.cursorsUpgradesValue - 1: GameState.cursorsUpgradesValue}`,\r\n\t\t\t\t\t\t`${GameState.clickPercentage < 1 ? \"\" : percentage}`\r\n\t\t\t\t\t]\r\n\r\n\t\t\t\t\tthis.text = stuff.join(\" \")\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (opts.type == \"powerupsElement\") this.destroy()\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet priceText = btn.add([\r\n\t\ttext(\"$50\", {\r\n\t\t\tsize: 18,\r\n\t\t\talign: \"center\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(-100, stacksText.pos.y + 15),\r\n\t\tcolor(BLACK),\r\n\t\tz(btn.z + 1),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = `${formatNumber(Math.round(btn.price), { price: true, fixAmount: 2 })}`\r\n\t\t\t\tif (GameState.score >= btn.price) this.color = GREEN\r\n\t\t\t\telse this.color = RED\r\n\t\t\t\r\n\t\t\t\tif (opts.type == \"powerupsElement\") {\r\n\t\t\t\t\tif (GameState.hasUnlockedPowerups == false) this.destroy()\r\n\t\t\t\t\telse this.pos = vec2(-5, 41) \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet amountText = btn.add([\r\n\t\ttext(\"x1\", {\r\n\t\t\tsize: 18,\r\n\t\t\talign: \"left\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(-159, -52),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t\tz(btn.z + 1),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = \"x\" + amountToBuy\r\n\t\t\t\tif (amountToBuy == 10) this.opacity = 0.45\r\n\t\t\t\telse this.opacity = 0.252\r\n\t\t\t\t\r\n\t\t\t\tif (opts.type == \"powerupsElement\") this.destroy()\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tif (opts.type == \"powerupsElement\") {\r\n\t\tlet powerupText = btn.add([\r\n\t\t\ttext(\"x1\", {\r\n\t\t\t\tsize: 18,\r\n\t\t\t\talign: \"left\",\r\n\t\t\t}),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tpos(-139, -52),\r\n\t\t\tcolor(BLACK),\r\n\t\t\topacity(0.45),\r\n\t\t\tz(btn.z + 1),\r\n\t\t\t{\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tif (GameState.hasUnlockedPowerups == false) this.destroy() \r\n\t\t\t\t\tthis.text = `Power: ${GameState.powerupPower}x`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t}\r\n\r\n\tbtn.on(\"notEnoughMoney\", () => {\r\n\t\t// opts.pos is the position it was added to\r\n\t\tconst direction = getRandomDirection(opts.pos, false, 1.25)\r\n\t\ttween(direction, opts.pos, 0.25, (p) => btn.pos = p, easings.easeOutQuint)\r\n\t\t\r\n\t\tif (btn.is(\"lockedPowerupStoreElement\")) {\r\n\t\t\ttween(choose([-15, 15]), 0, 0.25, (p) => tooltip.tooltipText.angle = p, easings.easeOutQuint)\r\n\t\t\tplaySfx(\"chainwrong\", { detune: rand(-50, 50) })\r\n\t\t}\r\n\t\t\r\n\t\telse {\r\n\t\t\ttween(choose([-15, 15]), 0, 0.25, (p) => priceText.angle = p, easings.easeOutQuint)\r\n\t\t}\r\n\r\n\t\tplaySfx(\"wrong\", { detune: rand(-50, 50) })\r\n\t})\r\n\r\n\tbtn.on(\"buy\", () => {\r\n\t\t// if i check the price here it just gets the one before the buy\r\n\t})\r\n\r\n\treturn btn;\r\n}", "import { GameState } from \"../../../gamestate\";\r\nimport { ROOT } from \"../../../main\";\r\nimport { addTooltip } from \"../../additives\";\r\nimport { addStoreElement, storeElementsInfo } from \"./storeElements\";\r\nimport { addUpgrades, isUpgradeBought, upgradeInfo } from \"./upgrades\";\r\n\r\nexport let storeElements:any = [];\r\n\r\n// used to determine the cool game juice\r\nexport let storePitchJuice = {\r\n\thasBoughtRecently: false,\r\n\ttimeSinceBought: 0,\r\n\tstoreTune: 0,\r\n}\r\n\r\nexport let isHoveringUpgrade:boolean;\r\nlet clickersElement:any;\r\nlet cursorsElement:any;\r\nlet powerupsElement:any;\r\n\r\nexport function storeWinContent(winParent) {\r\n\t// clickers\r\n\tclickersElement = addStoreElement(winParent, { type: \"clickersElement\", pos: vec2(0, -128) })\r\n\taddUpgrades(clickersElement)\r\n\t\r\n\t// cursors\r\n\tcursorsElement = addStoreElement(winParent, { type: \"cursorsElement\", pos: vec2(0, (clickersElement.pos.y + clickersElement.height) + 15) })\r\n\taddUpgrades(cursorsElement)\r\n\t\r\n\t// powerups\r\n\tpowerupsElement = addStoreElement(winParent, { type: \"powerupsElement\", pos: vec2(0, (cursorsElement.pos.y + cursorsElement.height) + 15) })\r\n\r\n\t// save them\r\n\tstoreElements = [clickersElement, cursorsElement, powerupsElement]\r\n\r\n\tlet firstUpgrade = clickersElement.get(\"upgrade\").filter(upgrade => upgrade.id == \"k_0\")[0]\r\n\r\n\t// determines store pitch\r\n\twinParent.onUpdate(() => {\r\n\t\tif (!winParent.is(\"window\")) return\r\n\t\t\r\n\t\tif (storePitchJuice.timeSinceBought < 1) {\r\n\t\t\tstorePitchJuice.timeSinceBought += dt()\r\n\r\n\t\t\tif (storePitchJuice.timeSinceBought > 0.25) {\r\n\t\t\t\tstorePitchJuice.hasBoughtRecently = false\r\n\t\t\t\tstorePitchJuice.storeTune = 0\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tisHoveringUpgrade = get(\"upgrade\", { recursive: true }).some((upgrade) => upgrade.isHovering())\r\n\t\r\n\t\t// tutorial stuff\r\n\t\tif (GameState.stats.timesAscended < 1) {\r\n\t\t\tconst clickersTutorialTooltip = () => {\r\n\t\t\t\tlet tooltip = addTooltip(clickersElement, {\r\n\t\t\t\t\ttext: \"\u2190 You can buy these to get more\\nscore per click\",\r\n\t\t\t\t\tdirection: \"right\",\r\n\t\t\t\t\ttype: \"tutorialClickers\",\r\n\t\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\t\tz: winParent.z\r\n\t\t\t\t})\r\n\t\r\n\t\t\t\tlet buyClickersEvent = ROOT.on(\"buy\", (data) => {\r\n\t\t\t\t\tif (data.type == \"clickers\") {\r\n\t\t\t\t\t\ttooltip.end()\r\n\t\t\t\t\t\tbuyClickersEvent.cancel()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\r\n\t\t\tconst cursorsTutorialTooltip = () => {\r\n\t\t\t\tlet tooltip = addTooltip(cursorsElement, {\r\n\t\t\t\t\ttext: \"\u2190 You can buy these to\\nautomatically get score!\",\r\n\t\t\t\t\tdirection: \"right\",\r\n\t\t\t\t\ttype: \"tutorialCursors\",\r\n\t\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\t\tz: winParent.z\r\n\t\t\t\t})\r\n\t\r\n\t\t\t\tlet buyCursorsEvent = ROOT.on(\"buy\", (data) => {\r\n\t\t\t\t\tif (data.type == \"cursors\") {\r\n\t\t\t\t\t\ttooltip.end()\r\n\t\t\t\t\t\tbuyCursorsEvent.cancel()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\r\n\t\t\tconst powerupsTutorialTooltip = () => {\r\n\t\t\t\tlet tooltip = addTooltip(powerupsElement, {\r\n\t\t\t\t\ttext: \"\u2190 Power-ups give you a small help!\\nFor a time limit.\",\r\n\t\t\t\t\tdirection: \"right\",\r\n\t\t\t\t\ttype: \"tutorialPowerups\",\r\n\t\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\t\tz: winParent.z\r\n\t\t\t\t})\r\n\t\t\r\n\t\t\t\tlet unlockPowerupsEvent = ROOT.on(\"powerupunlock\", () => {\r\n\t\t\t\t\ttooltip.end()\r\n\t\t\t\t\tunlockPowerupsEvent.cancel()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tconst upgradesTutorialTooltip = () => {\r\n\t\t\t\tlet tutorialObj = firstUpgrade.add([\r\n\t\t\t\t\tpos(),\r\n\t\t\t\t\tanchor(firstUpgrade.anchor),\r\n\t\t\t\t])\r\n\r\n\t\t\t\tlet tooltip = addTooltip(tutorialObj, {\r\n\t\t\t\t\ttext: \"\u2190 Upgrades help make your clicks worth!\",\r\n\t\t\t\t\tdirection: \"left\",\r\n\t\t\t\t\ttype: \"tutorialUpgrades\",\r\n\t\t\t\t\tlayer: winParent.layer,\r\n\t\t\t\t\tz: winParent.z\r\n\t\t\t\t})\r\n\t\t\r\n\t\t\t\tlet buyFirstUpgradeCheck = ROOT.on(\"buy\", (data) => {\r\n\t\t\t\t\tif (data.element == \"upgrade\" && data.id == \"k_0\") {\r\n\t\t\t\t\t\ttooltip.end()\r\n\t\t\t\t\t\tbuyFirstUpgradeCheck.cancel()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\r\n\t\t\tconst getTooltip = (type:string) => {\r\n\t\t\t\treturn get(\"tooltip\", { recursive: true }).filter(tooltip => tooltip.is(\"text\") == false && tooltip.type == type)\r\n\t\t\t}\r\n\t\r\n\t\t\t// EVENT THAT CHECKS FOR THE STUFF\r\n\t\t\tif (GameState.clickers == 1 && GameState.score >= storeElementsInfo.clickersElement.basePrice) {\r\n\t\t\t\tif (getTooltip(\"tutorialClickers\").length == 0) {\r\n\t\t\t\t\tclickersTutorialTooltip()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (GameState.cursors == 0 && GameState.score >= storeElementsInfo.cursorsElement.basePrice) {\r\n\t\t\t\tif (getTooltip(\"tutorialCursors\").length == 0) {\r\n\t\t\t\t\tcursorsTutorialTooltip()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tif (GameState.hasUnlockedPowerups == false && GameState.score >= storeElementsInfo.powerupsElement.unlockPrice) {\r\n\t\t\t\tif (getTooltip(\"tutorialPowerups\").length == 0) {\r\n\t\t\t\t\tpowerupsTutorialTooltip()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!isUpgradeBought(\"k_0\") && GameState.score >= firstUpgrade.price) {\r\n\t\t\t\tif (getTooltip(\"tutorialUpgrades\").length == 0) {\r\n\t\t\t\t\tupgradesTutorialTooltip()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\twinParent.on(\"close\", () => {\r\n\t\twinParent.get(\"*\", { recursive: true }).forEach(element => {\r\n\t\t\tif (element.endHover) element.endHover()\r\n\t\t});\r\n\t\t\r\n\t\t// i am going insane\r\n\t\tlet tooltips = get(\"tooltip\").filter(tooltip => tooltip.type != undefined)\r\n\t\ttooltips = tooltips.filter(obj => obj.type.includes(\"tutorial\") || obj.type.includes(\"price\") || obj.type.includes(\"store\"))\r\n\t\ttooltips.forEach((tooltip) => {\r\n\t\t\ttooltip.end()\r\n\t\t})\r\n\t})\r\n\r\n\t// lol!\r\n\tif (chance(0.01)) {\r\n\t\twinParent.sprite = \"stroeWin\"\r\n\t}\r\n}", "import { Vec2 } from \"kaplay\"\r\nimport { ROOT } from \"../../../main\"\r\nimport { blendColors, bop } from \"../../utils\"\r\nimport { manageMute, playSfx, volChangeTune } from \"../../../sound\"\r\nimport { GameState } from \"../../../gamestate\"\r\nimport { addTooltip } from \"../../additives\"\r\nimport { insideWindowHover } from \"../../hovers/insideWindowHover\"\r\n\r\ntype checkBoxOpt = {\r\n\tpos: Vec2,\r\n\t/**\r\n\t * Tag that the checkbox will hav\r\n\t */\r\n\tname: string,\r\n\t/**\r\n\t * Whether the checkbox starts as checked or not\r\n\t */\r\n\tchecked: boolean, \r\n\t/**\r\n\t * Function to run when the checkbox is clicked, usually a manageX() function that manages a boolean\r\n\t * It must return a boolean\r\n\t */\r\n\tonCheck: () => boolean,\r\n\t/**\r\n\t * Name that will appear in the right side\r\n\t */\r\n\ttitle: string,\r\n\t/**\r\n\t * Size of title\r\n\t */\r\n\ttitleSize?: number\r\n}\r\nexport function addCheckbox(opts:checkBoxOpt, parent?:any) {\r\n\tlet checkBox = (parent || ROOT).add([\r\n\t\tsprite(\"checkbox\", {\r\n\t\t\tanim: \"off\"\r\n\t\t}),\r\n\t\tpos(opts.pos),\r\n\t\tanchor(\"center\"),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\topts.name,\r\n\t\t{\r\n\t\t\ttick: null,\r\n\r\n\t\t\tturnOn() {\r\n\t\t\t\tthis.play(\"on\")\r\n\t\t\t\tthis.tick.appear();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tturnOff() {\r\n\t\t\t\tthis.play(\"off\")\r\n\t\t\t\tthis.tick.dissapear();\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\tlet tick = checkBox.add([\r\n\t\tsprite(\"tick\"),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(),\r\n\t\tscale(1),\r\n\t\t\"tick\",\r\n\t\t{\r\n\t\t\tappear() {\r\n\t\t\t\tthis.hidden = false\r\n\t\t\t},\r\n\r\n\t\t\tdissapear() {\r\n\t\t\t\tthis.hidden = true\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tcheckBox.tick = tick\r\n\r\n\tif (opts.checked == true) {\r\n\t\tcheckBox.turnOn()\r\n\t}\r\n\r\n\telse {\r\n\t\tcheckBox.turnOff()\r\n\t}\r\n\r\n\tcheckBox.onClick(() => {\r\n\t\tbop(checkBox)\r\n\r\n\t\t// gets the result of the click\r\n\t\tlet resultOfClick = opts.onCheck()\r\n\r\n\t\tif (resultOfClick == true) {\r\n\t\t\tcheckBox.turnOn()\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tcheckBox.turnOff()\r\n\t\t}\r\n\t\r\n\t\tplaySfx(\"clickButton\", {detune: resultOfClick == true ? 150 : -150})\r\n\t})\r\n\r\n\tif (opts.title) {\r\n\t\t(parent || ROOT).add([\r\n\t\t\ttext(opts.title, {\r\n\t\t\t\tsize: opts.titleSize\r\n\t\t\t}),\r\n\t\t\tpos(checkBox.pos.x, 0),\r\n\t\t\tanchor(\"left\"),\r\n\t\t\t{\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tthis.pos.x = checkBox.pos.x + checkBox.width / 2 + 10\r\n\t\t\t\t\tthis.pos.y = checkBox.pos.y\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\t}\r\n\r\n\treturn checkBox\r\n}\r\n\r\ntype volumeControlOpt = {\r\n\tpos?: Vec2,\r\n\tvariable?: string\r\n}\r\nexport function addVolumeControl(opts:volumeControlOpt, parent:any) {\r\n\tlet volumeControlBg = (parent || ROOT).add([\r\n\t\trect(parent.width - 25, 150, { radius: 10 }),\r\n\t\tpos(0, -218),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t\tanchor(\"top\"),\r\n\t])\r\n\t\r\n\tlet barscontainer = volumeControlBg.add([pos(27, 236)])\r\n\r\n\tfor (let i = 0; i < 10; i++) {\r\n\t\tlet volbar = barscontainer.add([\r\n\t\t\tsprite(\"volbarbutton\"),\r\n\t\t\tpos(opts.pos),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tscale(),\r\n\t\t\tarea(),\r\n\t\t\topacity(1),\r\n\t\t\t\"volbar\",\r\n\t\t\t{\r\n\t\t\t\tvolume: 0.1 * (i + 1),\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\t// 0 is on and 1 is off for frames\r\n\t\t\t\t\tif (GameState.settings.volume.toFixed(1) < this.volume.toFixed(1)) this.frame = 1\r\n\t\t\t\t\telse this.frame = 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t])\r\n\r\n\t\tvolbar.pos.x = volbar.pos.x + (i * 28)\r\n\r\n\t\tvolbar.onClick(() => {\r\n\t\t\ttween(GameState.settings.volume, volbar.volume, 0.1, (p) => {\r\n\t\t\t\tconst lastVolume = GameState.settings.volume\r\n\t\t\t\tGameState.settings.volume = parseFloat(p.toFixed(1))\r\n\t\t\t\tif (lastVolume != GameState.settings.volume) play(\"volumeChange\", { detune: volChangeTune })\r\n\t\t\t})\r\n\t\t\tbop(volbar)\r\n\t\t\t// progresionally turn the bars to the right off so it has a cool animation\r\n\t\t})\r\n\t};\r\n\r\n\tlet volbars = get(\"volbar\", { recursive: true });\r\n\r\n\t// buttons\r\n\tlet minus = barscontainer.add([\r\n\t\tsprite(\"minusbutton\"),\r\n\t\tpos(-180, -194),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t]);\r\n\r\n\tminus.pos.x = volbars[0].pos.x - 26\r\n\r\n\tminus.onClick(() => {\r\n\t\tif (GameState.settings.volume > 0) {\r\n\t\t\tGameState.settings.volume -= 0.1\r\n\t\t}\r\n\r\n\t\telse if ((GameState.settings.volume -= 0.1) == 0) {\r\n\t\t}\r\n\r\n\t\tbop(volbars[clamp(Math.floor(GameState.settings.volume * 10 - 1), 0, 10)])\r\n\t\tplay(\"volumeChange\", { detune: volChangeTune })\r\n\t\tbop(minus)\r\n\t});\r\n\r\n\tlet plus = barscontainer.add([\r\n\t\tsprite(\"plusbutton\"),\r\n\t\tpos(142, -194),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t]);\r\n\r\n\tplus.pos.x = volbars[volbars.length - 1].pos.x + 26\r\n\r\n\tplus.onClick(() => {\r\n\t\tif (GameState.settings.volume <= 0.9) {\r\n\t\t\tGameState.settings.volume += 0.1\r\n\t\t\tplay(\"volumeChange\", { detune: volChangeTune })\r\n\t\t}\r\n\r\n\t\telse play(\"volumeChange\", { detune: volChangeTune, volume: 5 })\r\n\t\tbop(volbars[clamp(Math.floor(GameState.settings.volume * 10 - 1), 0, 10)])\r\n\t\tbop(plus)\r\n\t});\r\n\r\n\t// ADD THE CHECKBOXES\r\n\tlet sfx = addCheckbox({\r\n\t\tpos: vec2(-140, 104),\r\n\t\ttitle: \"SFX\",\r\n\t\tchecked: !GameState.settings.sfx.muted,\r\n\t\tonCheck: () => {\r\n\t\t\tmanageMute(\"sfx\", !GameState.settings.sfx.muted)\r\n\t\t\treturn !GameState.settings.sfx.muted;\r\n\t\t},\r\n\t\tname: \"sfxCheckbox\",\r\n\t}, volumeControlBg)\r\n\r\n\tlet music = addCheckbox({\r\n\t\tpos: vec2(42, 104),\r\n\t\ttitle: \"MUSIC\",\r\n\t\tchecked: !GameState.settings.music.muted,\r\n\t\tonCheck: () => {\r\n\t\t\tmanageMute(\"music\", !GameState.settings.music.muted)\r\n\t\t\treturn !GameState.settings.music.muted\r\n\t\t},\r\n\t\tname: \"musicCheckbox\"\r\n\t}, volumeControlBg)\r\n\r\n\treturn volumeControlBg;\r\n}\r\n\r\nexport function addDeleteSaveButton(otherButtonsBg, winParent) {\r\n\tlet deleteSaveButton = otherButtonsBg.add([\r\n\t\ttext(\"X\", { size: 50 }),\r\n\t\tpos(-140, 24),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(blendColors(WHITE, RED, 0.5)),\r\n\t\tarea(),\r\n\t\tinsideWindowHover(winParent),\r\n\t\t{\r\n\t\t\tcount: 3\r\n\t\t}\r\n\t])\r\n\t\r\n\tlet deleteSaveButtonTooltip = null;\r\n\tdeleteSaveButton.startingHover(() => {\r\n\t\tif (deleteSaveButton.tooltip == null) {\r\n\t\t\tdeleteSaveButtonTooltip = addTooltip(deleteSaveButton, {\r\n\t\t\t\tdirection: \"up\",\r\n\t\t\t\ttext: \"WILL DELETE YOUR SAVE\"\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tdeleteSaveButton.endingHover(() => {\r\n\t\tdeleteSaveButton.count = 3\r\n\t\tdeleteSaveButtonTooltip.end()\r\n\t\tdeleteSaveButton.color = blendColors(WHITE, RED, 0.5)\r\n\t})\r\n\r\n\tdeleteSaveButton.onClick(() => {\r\n\t\tif (!winParent.active) return\r\n\t\r\n\t\tdeleteSaveButton.count--\r\n\t\tplaySfx(\"clickButton\", { detune: 25 * deleteSaveButton.count })\r\n\t\tdeleteSaveButton.color = blendColors(WHITE, RED, map(deleteSaveButton.count, 3, 0, 0.5, 1))\r\n\r\n\t\tdeleteSaveButtonTooltip.end()\r\n\t\tdeleteSaveButtonTooltip = addTooltip(deleteSaveButton, {\r\n\t\t\tdirection: \"up\",\r\n\t\t\ttext: `WILL DELETE YOUR SAVE IN ${deleteSaveButton.count}`\r\n\t\t})\r\n\r\n\t\tif (deleteSaveButton.count == 0) {\r\n\t\t\tdeleteSaveButtonTooltip.tooltipText.text = \"GOODBYE SAVE :)\"\r\n\t\t\tGameState.delete()\r\n\t\t}\r\n\t})\r\n\r\n\treturn deleteSaveButton\r\n}", "import { GameState } from \"../../../gamestate\"\r\nimport { ROOT } from \"../../../main\";\r\nimport { addCheckbox, addDeleteSaveButton, addVolumeControl } from \"./settingsWinElements\"\r\n\r\nlet otherCheckboxesBg:any;\r\nlet otherButtonsBg:any;\r\n\r\nexport function settingsWinContent(winParent) {\r\n\t// volume control\r\n\tlet volumeControl = addVolumeControl({ pos: vec2(-winParent.width / 2 + 40, -winParent.height / 2 + 75)}, winParent)\r\n\r\n\t// ======= OTHER CHECKBOXES =======\r\n\totherCheckboxesBg = winParent.add([\r\n\t\trect(winParent.width - 25, 255, { radius: 10 }),\r\n\t\tpos(0, -60),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t\tanchor(\"top\"),\r\n\t])\r\n\r\n\tlet fullscreenCheckbox = addCheckbox({\r\n\t\tpos: vec2(-144, 38),\r\n\t\tname: \"fullscreenCheckbox\",\r\n\t\tchecked: GameState.settings.fullscreen,\r\n\t\tonCheck: function (): boolean {\r\n\t\t\tGameState.settings.fullscreen = !GameState.settings.fullscreen\r\n\t\t\tsetFullscreen(GameState.settings.fullscreen)\r\n\t\t\treturn GameState.settings.fullscreen;\r\n\t\t},\r\n\t\ttitle: \"Fullscreen\"\r\n\t}, otherCheckboxesBg)\r\n\r\n\tlet checkForFullscreen = ROOT.on(\"checkFullscreen\", () => {\r\n\t\tif (isFullscreen()) fullscreenCheckbox.turnOn()\r\n\t\telse fullscreenCheckbox.turnOff()\r\n\t\tGameState.settings.fullscreen = isFullscreen()\r\n\t})\r\n\r\n\tlet commaCheckbox = addCheckbox({\r\n\t\tpos: vec2(-144, fullscreenCheckbox.pos.y + 60),\r\n\t\tname: \"commaCheckbox\",\r\n\t\tchecked: GameState.settings.commaInsteadOfDot,\r\n\t\tonCheck: function (): boolean {\r\n\t\t\tGameState.settings.commaInsteadOfDot = !GameState.settings.commaInsteadOfDot\r\n\t\t\treturn GameState.settings.commaInsteadOfDot;\r\n\t\t},\r\n\t\ttitle: \"Use commas for\\ndecimals\",\r\n\t\ttitleSize: 40,\r\n\t}, otherCheckboxesBg)\r\n\r\n\t// ======= BUTTONS TRAY =======\r\n\totherButtonsBg = winParent.add([\r\n\t\trect(winParent.width - 25, 55, { radius: 10 }),\r\n\t\tpos(0, 203),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t\tanchor(\"top\"),\r\n\t])\r\n\r\n\taddDeleteSaveButton(otherButtonsBg, winParent)\r\n\r\n\twinParent.on(\"close\", () => {\r\n\t\tcheckForFullscreen.cancel()\r\n\t})\r\n\r\n\tROOT.trigger(\"checkFullscreen\")\r\n}", "import { GameObj, Vec2 } from \"kaplay\"\r\nimport { GameState, scoreManager } from \"../../gamestate\"\r\nimport { ROOT } from \"../../main\"\r\nimport { positionSetter } from \".././plugins/positionSetter\"\r\nimport { triggerAscension } from \"../ascension/ascension\"\r\nimport { allPowerupsInfo} from \"../powerups\"\r\nimport { formatNumber } from \"../utils\"\r\nimport { waver } from \"../plugins/wave\"\r\n\r\nlet objectsPositions = {\r\n\tmage_hidden: 450,\r\n\tmage_visible: 30,\r\n\tcursors_hidden: 470,\r\n\tcursors_visible: 26,\r\n}\r\n\r\nfunction addWinMage(position: Vec2, parent:GameObj) {\r\n\tlet winMage = parent.add([\r\n\t\tpos(position),\r\n\t\tanchor(\"center\"),\r\n\t\twaver({ maxAmplitude: 2 })\r\n\t])\r\n\r\n\tlet body = winMage.add([\r\n\t\tsprite(\"winMage_body\"),\r\n\t\tanchor(\"center\"),\r\n\t])\r\n\r\n\tlet eye = winMage.add([\r\n\t\tsprite(\"winMage_eye\"),\r\n\t\tanchor(\"center\"),\r\n\t])\r\n\r\n\tlet cursors = parent.add([\r\n\t\tsprite(\"winMage_cursors\"),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(),\r\n\t\twaver({ maxAmplitude: 3 })\r\n\t])\r\n\r\n\treturn {\r\n\t\tmage: winMage,\r\n\t\tcursors: cursors,\r\n\t};\r\n}\r\n\r\nexport function ascendWinContent(winParent) {\r\n\t// TODO: if mana is increased while the ascend window is open add a little spark and a sound\r\n\r\n\tlet manaText = winParent.add([\r\n\t\ttext(\"\", {\r\n\t\t\tsize: 40,\r\n\t\t\talign: \"left\",\r\n\t\t}),\r\n\t\tanchor(\"left\"),\r\n\t\tcolor(WHITE),\r\n\t\tpos(-182, -189),\r\n\t\tarea(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tlet scoreTilNextMana = formatNumber(Math.round(scoreManager.scoreYouGetNextManaAt()) - Math.round(GameState.scoreAllTime))\r\n\r\n\t\t\t\tlet text = [\r\n\t\t\t\t\t// TODO: make it so it shows how much mana you've  gotten since the run started\r\n\t\t\t\t\t`${GameState.ascension.mana}\u2726`,\r\n\t\t\t\t\t`Score 'til next mana: ${scoreTilNextMana}`,\r\n\t\t\t\t\t`+${GameState.ascension.magicLevel}MG`\r\n\t\t\t\t].join(\"\\n\")\r\n\r\n\t\t\t\t// let manaSinceRunStart = formatNumber(GameState.ascension.mana - GameState.ascension.manaAtStartOfRun)\r\n\r\n\t\t\t\tthis.text = text\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet button = winParent.add([\r\n\t\ttext(\"ASCEND!!!\", {\r\n\t\t\tsize: 20,\r\n\t\t\talign: \"center\",\r\n\t\t\tfont: \"lambdao\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(WHITE),\r\n\t\tpos(0, -100),\r\n\t\tarea(),\r\n\t\topacity(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (GameState.ascension.mana < 1) this.opacity = 0.5\r\n\t\t\t\telse this.opacity = 1\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet manaBarContent = null;\r\n\tlet barFrame = winParent.add([\r\n\t\trect(winParent.width, winParent.height / 12, { fill: false, radius: 5 }),\r\n\t\tpos(0, 0),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(1),\r\n\t\toutline(3.5, BLACK),\r\n\t\tz(1),\r\n\t])\r\n\r\n\tlet barFrameBg = winParent.onDraw(() => {\r\n\t\tdrawRect({\r\n\t\t\tpos: barFrame.pos,\r\n\t\t\tanchor: barFrame.anchor,\r\n\t\t\twidth: barFrame.width,\r\n\t\t\theight: barFrame.height,\r\n\t\t\topacity: barFrame.opacity * 0.28,\r\n\t\t\tradius: 5,\r\n\t\t\tcolor: BLACK,\r\n\t\t})\r\n\t})\r\n\r\n\tbarFrame.onDestroy(() => {\r\n\t\tbarFrameBg.cancel()\r\n\t})\r\n\r\n\tmanaBarContent = winParent.add([\r\n\t\trect(0, barFrame.height, { radius: 5 }),\r\n\t\tpos(-barFrame.width / 2, barFrame.pos.y),\r\n\t\tanchor(\"left\"),\r\n\t\tcolor(WHITE),\r\n\t\topacity(1),\r\n\t\tz(barFrame.z - 1),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tlet scoreTilNextMana = Math.round(scoreManager.scoreYouGetNextManaAt() - GameState.scoreAllTime)\r\n\t\r\n\t\t\t\tlet mappedWidth = map(scoreTilNextMana, 0, GameState.scoreAllTime + scoreManager.scoreYouGetNextManaAt(), barFrame.width, 0)\r\n\t\t\t\tthis.width = lerp(this.width, mappedWidth, 0.5)\r\n\t\t\t\r\n\t\t\t\tconst lighter = rgb(178, 208, 247)\r\n\t\t\t\tconst darker = rgb(100, 157, 232)\r\n\t\t\t\tthis.color.r = wave(lighter.r, darker.r, time() * 2)\r\n\t\t\t\tthis.color.g = wave(lighter.g, darker.g, time() * 2)\r\n\t\t\t\tthis.color.b = wave(lighter.b, darker.b, time() * 2)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\t\r\n\tbutton.onClick(() => {\r\n\t\tif (allPowerupsInfo.isHoveringAPowerup == true) return\r\n\t\tif (GameState.ascension.mana >= 1) triggerAscension()\r\n\t})\r\n\r\n\tlet manaGainedCheck = ROOT.on(\"manaGained\", () => {\r\n\t\t\r\n\t})\r\n\r\n\tlet masked = winParent.add([\r\n\t\tmask(\"intersect\"),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(),\r\n\t\trect(winParent.width, winParent.height),\r\n\t])\r\n\r\n\tlet winMageFull = addWinMage(vec2(0, 450), masked)\r\n\tlet winMage = winMageFull.mage\r\n\tlet winMageCursors = winMageFull.cursors\r\n\r\n\twinMageCursors.use(positionSetter()),\r\n\r\n\ttween(objectsPositions.mage_hidden, objectsPositions.mage_visible, 0.6, (p) => winMage.pos.y = p, easings.easeOutQuint).onEnd(() => {\r\n\t\twinMage.wave_verPosition = objectsPositions.mage_visible\r\n\t\t// winMage.startWave()\r\n\t})\r\n\r\n\twait(0.2, () => {\r\n\t\ttween(objectsPositions.cursors_hidden, objectsPositions.cursors_visible, 0.5, (p) => winMageCursors.pos.y = p, easings.easeOutBack).onEnd(() => {\r\n\t\t\t// winMageCursors.startWave()\r\n\t\t})\r\n\t})\r\n\r\n\twinParent.on(\"close\", () => {\r\n\t\tmanaGainedCheck.cancel()\r\n\t})\r\n}", "import { GameState } from \"../../gamestate\";\r\nimport { ROOT } from \"../../main\";\r\nimport { curDraggin, drag, setCurDraggin } from \".././plugins/drag\";\r\nimport { dummyShadow } from \".././plugins/dummyShadow\";\r\nimport { playSfx } from \"../../sound\";\r\nimport { bop } from \"../utils\";\r\nimport { mouse } from \"../additives\";\r\nimport { buttonSpacing, infoForWindows, openWindow, windowKey } from \"./windows-api/windowManaging\";\r\nimport { addMinibutton } from \"./windows-api/minibuttons\";\r\nimport { openWindowButton } from \"./windows-api/openWindowButton\";\r\nimport { destroyExclamation } from \"../unlockables/unlockablewindows\";\r\nimport { insideWindowHover } from \"../hovers/insideWindowHover\";\r\n\r\nexport let gridContainer;\r\n\r\nlet currentClosest;\r\n\r\n// Function to update the closest minibutton\r\nfunction updateClosestMinibuttonToDrag() {\r\n    // Get all minibuttons\r\n    const minibuttons = get(\"minibutton\").filter(minibutton => !minibutton.extraMb);\r\n\r\n    // Initialize variables to track the closest minibutton\r\n    let closestDistance = Infinity;\r\n    let closestMinibutton = null;\r\n\r\n    // Check the distance to each minibutton\r\n    minibuttons.forEach(minibutton => {\r\n\t\tconst dist = curDraggin?.screenPos().dist(minibutton.screenPos());\r\n        if (dist < closestDistance) {\r\n            closestDistance = dist;\r\n            closestMinibutton = minibutton;\r\n        }\r\n    });\r\n\r\n\t// dettach\r\n    // If the closest minibutton has changed\r\n    if (closestMinibutton !== currentClosest) {\r\n        // Detach the onUpdate event from the previous closest minibutton\r\n        if (currentClosest) {\r\n\t\t\tif (currentClosest.is(\"closestMinibuttonToDrag\")) {\r\n\t\t\t\tcurrentClosest.unuse(\"closestMinibuttonToDrag\")\r\n\t\t\t\tcurrentClosest.opacity = 1\r\n\t\t\t\tcurrentClosest.scale = vec2(1)\r\n\t\t\t\tcurrentClosest.color = WHITE\r\n\t\t\t\tcurrentClosest.nervousSpinSpeed = 10\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Update the current closest minibutton\r\n        currentClosest = closestMinibutton;\r\n\t\t\r\n        // Attach the onUpdate event to the new closest minibutton\r\n        if (currentClosest) {\r\n\t\t\tif (!currentClosest.is(\"closestMinibuttonToDrag\")) currentClosest.use(\"closestMinibuttonToDrag\")\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Makes a gridMiniButton to add\r\n * @param idx \r\n * @param gridSlot \r\n * @param winParent \r\n * @returns the grid minibutton\r\n */\r\nexport function makeGridMinibutton(windowKey:windowKey, gridSlot:any, winParent:any) {\r\n\tlet selection:any;\r\n\tlet distanceToSlot:number\r\n\tlet distanceToClosestMinibutton:number;\r\n\tlet minibuttons:any[];\r\n\tlet closestMinibutton = null;\r\n\tlet closestDistance = Infinity;\r\n\r\n\tlet idx = infoForWindows[windowKey].idx\r\n\r\n\tlet gridMiniButton = make([\r\n\t\tsprite(`icon_${infoForWindows[Object.keys(infoForWindows)[idx]].icon || Object.keys(infoForWindows)[idx].replace(\"Win\", \"\")}`, {\r\n\t\t\tanim: \"default\"\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(1),\r\n\t\tpos(gridSlot.pos),\r\n\t\tcolor(WHITE),\r\n\t\tscale(0),\r\n\t\tdrag(),\r\n\t\tlayer(\"windows\"),\r\n\t\tz(winParent.z + 1),\r\n\t\tarea(),\r\n\t\trotate(0),\r\n\t\tdummyShadow(),\r\n\t\tinsideWindowHover(winParent),\r\n\t\topenWindowButton(),\r\n\t\t\"gridMiniButton\",\r\n\t\t{\r\n\t\t\twindowKey: windowKey,\r\n\t\t\tbeingHeld: false,\r\n\r\n\t\t\treleaseDrop(defaultShadow = true) {\r\n\t\t\t\tif (curDraggin == this) {\r\n\t\t\t\t\tcurDraggin.trigger(\"dragEnd\")\r\n\t\t\t\t\tsetCurDraggin(null)\r\n\t\t\t\t\tmouse.releaseAndPlay(\"cursor\")\r\n\t\t\t\t\tgridMiniButton.layer = \"windows\"\r\n\r\n\t\t\t\t\t// wtf???\r\n\t\t\t\t\tlet thisThing = this;\r\n\r\n\t\t\t\t\tconst goToShadowSlot = function() {\r\n\t\t\t\t\t\t// GO BACK TO SLOT\r\n\t\t\t\t\t\tlet gridMinibuttonIdx = infoForWindows[thisThing.windowKey].idx\r\n\t\t\t\t\t\tdestroy(thisThing)\r\n\t\t\t\t\t\tgridContainer.add(makeGridMinibutton(windowKey, get(`gridShadow_${gridMinibuttonIdx}`, { recursive: true })[0], winParent))\r\n\t\t\t\t\t\tplaySfx(\"plop\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// reset their properties\r\n\t\t\t\t\t\tget(\"minibutton\").forEach(element => {\r\n\t\t\t\t\t\t\ttween(element.angle, 0, 0.32, (p) => element.angle = p, easings.easeOutQuint)\r\n\t\t\t\t\t\t\telement.color = WHITE\r\n\t\t\t\t\t\t\telement.opacity = 1\r\n\t\t\t\t\t\t\telement.scale = vec2(1)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tget(\"gridMiniButton\", { recursive: true }).forEach(element => {\r\n\t\t\t\t\t\t\tif (element.isHovering()) element.startHoverFunction()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst goToTaskbar = function() {\r\n\t\t\t\t\t\t// add the new minibutton to the minibutton list\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet newMinibutton = addMinibutton({\r\n\t\t\t\t\t\t\twindowKey: thisThing.windowKey,\r\n\t\t\t\t\t\t\ttaskbarIndex: closestMinibutton.taskbarIndex,\r\n\t\t\t\t\t\t\tinitialPosition: thisThing.pos,\r\n\t\t\t\t\t\t\tdestPosition: closestMinibutton.pos,\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tGameState.taskbar[closestMinibutton.taskbarIndex] = thisThing.windowKey\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// destroy closestminibutton and grid minibutton\r\n\t\t\t\t\t\ttween(closestMinibutton.opacity, 0, 0.32, (p) => closestMinibutton.opacity = p, easings.easeOutQuint)\r\n\t\t\t\t\t\ttween(closestMinibutton.scale, vec2(0), 0.32, (p) => closestMinibutton.scale = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\t\t\t\tdestroy(closestMinibutton)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tdestroy(thisThing)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// cmb => closest minibutton\r\n\t\t\t\t\t\tlet cmbShadow = get(`gridShadow`, { recursive: true }).filter(cmb => cmb.windowKey == closestMinibutton.windowKey)[0]\r\n\t\t\r\n\t\t\t\t\t\t// make the new gridminibutton to the one that was just unpinned\r\n\t\t\t\t\t\tgridContainer.add(makeGridMinibutton(closestMinibutton.windowKey, cmbShadow, winParent))\r\n\t\t\t\t\t\tplaySfx(\"plop\")\r\n\t\r\n\t\t\t\t\t\tget(\"minibutton\").forEach(minibutton => {\r\n\t\t\t\t\t\t\ttween(minibutton.angle, 0, 0.15, (p) => minibutton.angle = p, easings.easeOutQuint)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ((distanceToSlot < distanceToClosestMinibutton) || defaultShadow == true) goToShadowSlot()\r\n\t\t\t\t\telse goToTaskbar()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t])\r\n\r\n\ttween(gridMiniButton.scale, vec2(1), 0.32, (p) => gridMiniButton.scale = p, easings.easeOutElastic)\r\n\t\r\n\tgridMiniButton.onUpdate(() => {\r\n\t\tif (gridMiniButton.dragging) {\r\n\t\t\tclosestMinibutton = null;\r\n\t\t\tclosestDistance = Infinity;\r\n\t\r\n\t\t\t// Get all minibuttons\r\n\t\t\tminibuttons = get(\"minibutton\").filter(minibutton => !minibutton.extraMb);\r\n\t\t\t\r\n\t\t\t// Check the distance to each minibutton\r\n\t\t\tminibuttons.forEach(minibutton => {\r\n\t\t\t\tconst distance = gridMiniButton.screenPos().dist(minibutton.pos);\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\tclosestMinibutton = minibutton;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\tdistanceToSlot = gridMiniButton.screenPos().dist(gridSlot.screenPos())\r\n\t\t\tdistanceToClosestMinibutton = gridMiniButton.screenPos().dist(closestMinibutton.screenPos())\r\n\t\t}\r\n\t})\r\n\r\n\tgridMiniButton.startingHover(() => {\r\n\t\tplaySfx(\"hoverMiniButton\", {detune: 100 * idx / 4})\r\n\t\tgridMiniButton.play(\"hover\")\r\n\t\t\r\n\t\tselection = gridSlot.add([\r\n\t\t\tpos(),\r\n\t\t\trect(gridMiniButton.width, gridMiniButton.height, { radius: 5 }),\r\n\t\t\topacity(0.15),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\t\"gridMinibuttonSelection\",\r\n\t\t])\r\n\t})\r\n\r\n\tgridMiniButton.endingHover(() => {\r\n\t\tgridMiniButton.play(\"default\")\r\n\t\ttween(gridMiniButton.angle, 0, 0.32, (p) => gridMiniButton.angle = p, easings.easeOutQuint)\r\n\t\tselection?.destroy()\r\n\t})\r\n\r\n\t// press, hold and release hold functions\r\n\tgridMiniButton.onPress(() => {\r\n\t\tif (get(gridMiniButton.windowKey)[0]) winParent.close()\r\n\t\t\r\n\t\telse {\r\n\t\t\topenWindow(gridMiniButton.windowKey as windowKey); \r\n\t\t\twinParent.close()\r\n\t\t}\r\n\t\t\r\n\t\tbop(gridMiniButton)\r\n\t})\r\n\r\n\tgridMiniButton.onHold(() => {\r\n\t\tget(\"gridMinibuttonSelection\", { recursive: true }).forEach(selection => {\r\n\t\t\tselection?.destroy()\r\n\t\t})\r\n\t\t\r\n\t\t// get out of the parent and sends him to the real world (root)\r\n\t\tgridMiniButton.parent.children.splice(gridMiniButton.parent.children.indexOf(gridMiniButton), 1)\r\n\t\tgridMiniButton.parent = ROOT\r\n\t\tROOT.children.push(gridMiniButton)\r\n\r\n\t\t// important\r\n\t\tgridMiniButton.pos = toScreen(mousePos())\r\n\t\tgridMiniButton.z = mouse.z - 1\r\n\r\n\t\tdestroyExclamation(gridMiniButton)\r\n\t\tgridMiniButton.layer = \"mouse\"\r\n\t\tmouse.grab()\r\n\t\tgridMiniButton.pick()\r\n\t\tplaySfx(\"plap\")\r\n\t})\r\n\r\n\tgridMiniButton.onHoldRelease(() => {\r\n\t\tgridMiniButton.releaseDrop(false)\r\n\t})\r\n\r\n\treturn gridMiniButton\r\n}\r\n\r\nlet amountOfElementsX = 5\r\nlet amountOfElementsY = 2\r\nexport function extraWinContent(winParent) {\r\n\t// makes the grid\r\n\tgridContainer = winParent.add([pos(-154, -192)])\r\n\r\n\tfor(let i = 0; i < Object.keys(infoForWindows).length - 1; i++) {\r\n\t\tlet windowKey = Object.keys(infoForWindows)[i]\r\n\t\tlet buttonPositionX = 0\r\n\t\tlet buttonPositionY = 0\r\n\t\t\r\n\t\t// 75 buttonSpacing\r\n\t\tif (i < amountOfElementsX) buttonPositionX = 1 + i * 75;\r\n\t\telse buttonPositionX = (1 + (i - amountOfElementsX) * 75) + 75 / amountOfElementsX\r\n\r\n\t\tif (i < amountOfElementsX) buttonPositionY = 0;\r\n\t\telse buttonPositionY = buttonSpacing + 10\r\n\r\n\t\t// add the shadow/empty-spot one\r\n\t\tlet shadowOne = gridContainer.add([\r\n\t\t\tsprite(`icon_${infoForWindows[windowKey].icon || windowKey.replace(\"Win\", \"\")}`, {\r\n\t\t\t\tanim: \"default\"\r\n\t\t\t}),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\topacity(0.5),\r\n\t\t\tpos(buttonPositionX, buttonPositionY),\r\n\t\t\tcolor(BLACK),\r\n\t\t\tarea(),\r\n\t\t\t`gridShadow_${i}`,\r\n\t\t\t\"gridShadow\",\r\n\t\t\t{\r\n\t\t\t\tidx: i,\r\n\t\t\t\twindowKey: windowKey\r\n\t\t\t}\r\n\t\t])\r\n\r\n\t\t// if the button is not on the taskbar\r\n\t\tif (!GameState.taskbar.includes(windowKey)) {\r\n\t\t\t// if the button is unlocked\r\n\t\t\tif (GameState.unlockedWindows.includes(windowKey)) {\r\n\t\t\t\tgridContainer.add(makeGridMinibutton(windowKey as windowKey, shadowOne, winParent))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twinParent.onUpdate(() => {\r\n\t\tif (curDraggin == null || !curDraggin.is(\"gridMiniButton\")) return\r\n\t\tupdateClosestMinibuttonToDrag()\r\n\t})\r\n\r\n\t// # manages open closed animation\r\n\t// winParent.on(\"open\")\r\n\tlet extraMinibutton = get(\"extraMinibutton\")[0]\r\n\tif (extraMinibutton) {\r\n\t\textraMinibutton.shut = false\r\n\t\textraMinibutton.play(`open_${extraMinibutton.isHovering() ? \"hover\" : \"default\"}`)\r\n\t}\r\n\r\n\t// if a window is unlocked and this is opened\r\n\tlet winUnlockEvent = ROOT.on(\"winUnlock\", (window) => {\r\n\t\t// let newMinibutton = gridContainer.add(makeGridMinibutton(infoForWindows[window].idx, get(`gridShadow_${infoForWindows[window].idx}`, { recursive: true })[0], winParent))\r\n\t})\r\n\t\r\n\twinParent.on(\"close\", () => {\r\n\t\tlet extraMinibutton = get(\"extraMinibutton\")[0]\r\n\t\tif (extraMinibutton) {\r\n\t\t\textraMinibutton.shut = true\r\n\t\t\textraMinibutton.play(`shut_${extraMinibutton.isHovering() ? \"hover\" : \"default\"}`)\r\n\t\t}\r\n\t\twinUnlockEvent.cancel()\r\n\t})\r\n}", "import { positionSetter } from \".././plugins/positionSetter\"\r\n\r\nexport function creditsWinContent(winParent) {\r\n\twinParent.add([\r\n\t\tpos(0, -190),\r\n\t\ttext(\"Clickery Hexagon\\nwas made by\", {\r\n\t\t\talign: \"center\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t])\r\n\r\n\tlet credits = {\r\n\t\t\"amyspark-ng\": \"Code\",\r\n\t\t\"DevkyRD\": \"Art & Design\",\r\n\t\t\"MF\": \"Code & Shaders\",\r\n\t\t\"lajbel\": \"Game Design\",\r\n\t\t\"Khriz28\": \"Playtesting & Support\",\r\n\t}\r\n\r\n\tfunction createCredits() {\r\n\t\tlet text = \"\"\r\n\r\n\t\tfor (const [key, value] of Object.entries(credits)) {\r\n\t\t\ttext += `${key} - [small]${value}[/small]\\n`\r\n\t\t}\r\n\r\n\t\treturn text;\r\n\t}\r\n\r\n\twinParent.add([\r\n\t\ttext(createCredits(), {\r\n\t\t\talign: \"left\",\r\n\t\t\tstyles: {\r\n\t\t\t\t\"small\": {\r\n\t\t\t\t\tscale: 0.8,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tpos(-183, -134),\r\n\t])\r\n\r\n\t// ------------SPECIAL CREDITS------------\r\n\r\n\twinParent.add([\r\n\t\tpos(0, 120),\r\n\t\ttext(\"Special thanks to\", {\r\n\t\t\talign: \"center\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t])\r\n\r\n\tlet specialCredits = {\r\n\t\t\"GGBotNet\": \"Lambda font\",\r\n\t\t\"niceEli\": \"Desktop support\",\r\n\t\t\"Webadazzz\": \"[heart]<3[/heart]\",\r\n\t}\r\n\r\n\tfunction createSpecialCredits() {\r\n\t\tlet text = \"\"\r\n\t\tfor (const [key, value] of Object.entries(specialCredits)) {\r\n\t\t\ttext += `${key} - ${value.includes(\"heart\") ? value : `[small]${value}[/small]`}\\n`\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\r\n\twinParent.add([\r\n\t\ttext(createSpecialCredits(), {\r\n\t\t\talign: \"left\",\r\n\t\t\tstyles: {\r\n\t\t\t\t\"small\": {\r\n\t\t\t\t\tscale: 0.8,\r\n\t\t\t\t},\r\n\t\t\t\t\"heart\": {\r\n\t\t\t\t\tscale: 0.8,\r\n\t\t\t\t\tcolor: RED,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tpos(-183, 146),\r\n\t\tpositionSetter(),\r\n\t])\r\n}", "import { GameState } from \"../../gamestate\";\r\nimport { positionSetter } from \".././plugins/positionSetter\";\r\nimport { achievements } from \"../unlockables/achievements\";\r\nimport { formatNumber, formatNumberSimple, formatTime } from \"../utils\";\r\n\r\nexport function statsWinContent(winParent) {\r\n\tlet stats = [];\r\n\r\n\twinParent.onUpdate(() => {\r\n\t\tstats = [\r\n\t\t\t{ \"Score all time\": formatNumber(GameState.scoreAllTime) },\r\n\t\t\t{ \"Times clicked\": formatNumberSimple(GameState.stats.timesClicked) },\r\n\t\t\t{ \"Powerups clicked\": formatNumberSimple(GameState.stats.powerupsClicked) },\r\n\t\t\t{ \"Powerups bought\": formatNumberSimple(GameState.stats.powerupsBought) },\r\n\t\t\t{ \"Achievements unlocked\": `${GameState.unlockedAchievements.length}/${achievements.length}` },\r\n\t\t\t{ \"Total time played\": formatTime(Math.round(GameState.stats.totalTimePlayed), true) },\r\n\t\t]\r\n\r\n\t\tif (GameState.stats.timesAscended > 0) {\r\n\t\t\tstats[0] = { \"Score all time\": formatNumber(GameState.scoreAllTime) }\r\n\t\t\tstats[1] = { \"Score this run\": formatNumber(GameState.scoreThisRun) }\r\n\t\t\tstats.splice(2, 0, { \"Times clicked\": `${formatNumberSimple(GameState.stats.timesClicked)}` });\r\n\r\n\t\t\tlet ascendStatObject = { \"Times ascended\": `${GameState.stats.timesAscended}` }\r\n\t\t\tif (stats.indexOf(ascendStatObject) == -1) stats.push(ascendStatObject)\r\n\t\t}\r\n\t})\r\n\r\n\tlet icons = winParent.add([\r\n\t\tpos(),\r\n\t\t// positionSetter(),\r\n\t\tanchor(\"top\"),\r\n\t])\r\n\r\n\ticons.onDraw(() => {\r\n\t\tdrawSprite({\r\n\t\t\tsprite: \"cursors\",\r\n\t\t\tframe: 2,\r\n\t\t\tanchor: \"center\",\r\n\t\t\twidth: 50,\r\n\t\t\theight: 45,\r\n\t\t})\r\n\r\n\t\tdrawSprite({\r\n\t\t\tsprite: \"cursors\",\r\n\t\t\tframe: 0,\r\n\t\t\tanchor: \"center\",\r\n\t\t\tpos: vec2(0, 40),\r\n\t\t\twidth: 45,\r\n\t\t\theight: 45,\r\n\t\t})\r\n\r\n\t\tdrawSprite({\r\n\t\t\tsprite: \"hexagon\",\r\n\t\t\tanchor: \"center\",\r\n\t\t\tpos: vec2(0, 80),\r\n\t\t\twidth: 45,\r\n\t\t\tscale: vec2(0.9),\r\n\t\t\theight: 45,\r\n\t\t})\r\n\r\n\t\tdrawSprite({\r\n\t\t\tsprite: \"icon_medals\",\r\n\t\t\tframe: 0,\r\n\t\t\tanchor: \"center\",\r\n\t\t\tpos: vec2(0, 160),\r\n\t\t\twidth: 45,\r\n\t\t\theight: 45,\r\n\t\t})\r\n\t})\r\n\r\n\tfunction createStats() {\r\n\t\tlet text = stats.map((stat) => `${Object.keys(stat)[0]}: ${Object.values(stat)[0]}`).join(\"\\n\")\r\n\t\treturn text\r\n\t}\r\n\r\n\tlet statsText = winParent.add([\r\n\t\ttext(createStats()),\r\n\t\tpos(70, -230),\r\n\t\tanchor(\"top\"),\r\n\t\tpositionSetter(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = createStats()\r\n\t\t\t\ticons.pos.y = this.pos.y + 20\r\n\t\t\t\ticons.pos.x = (this.pos.x - this.width / 2) - 25\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n}", "import { ROOT } from \"../../main\";\r\nimport { addTooltip } from \"../additives\";\r\nimport { achievements, achievementsInfo, getAchievement, isAchievementUnlocked, unlockAchievement } from \"../unlockables/achievements\";\r\nimport { parseAnimation } from \"../utils\";\r\n\r\nlet totalColumns = 5;\r\nlet totalRows = 7;\r\n\r\n// initialPos of the first element, relative to the medalsContainer that is relative to the window position\r\nlet initialPos = { x: -137, y: 46 }; \r\nlet spacing = { x: 65, y: 65 };\r\n\r\n// 3 columns means 3 objects laid horizontally, 3 rows is 3 objects laid vertically\r\n// from top to bottom\r\n//   ccc\r\n//  r...\r\n//  r...\r\n// this means 3 columns and 2 rows\r\nfunction getPositionInWindow(row:number, column:number) {\r\n\treturn vec2(initialPos.x + spacing.x * (column), initialPos.y + spacing.y * (row));\r\n}\r\n\r\nfunction indexToGrid(i:number) {\r\n\tlet newDesiredPos = { row: Math.floor(i / totalColumns) + 1, column: (i % totalColumns) + 1 }\r\n\treturn newDesiredPos\r\n}\r\n\r\nlet medalsContainer:any;\r\nexport function medalsWinContent(winParent) {\r\n\t// when doing scroll down it deletes the top 5 ones, delete them, move the 5 ones\r\n\t// that are on the bottom of the just deleted ones, grab the\r\n\t// last ones and add the next ones\r\n\t\r\n\tmedalsContainer = winParent.add([\r\n\t\tpos(0, -222),\r\n\t\trect(winParent.width - 25, winParent.height - 35 * 2, { radius: 5 }),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.5),\r\n\t\tanchor(\"top\"),\r\n\t])\r\n\r\n\t// TODO: you know what would be fun?????????????\r\n\t\r\n\t// make every medal a draw event that draws the sprite, map every row&column to an achievement\r\n\t// everytime you scroll that achievements gets updated\r\n\t// for hovers you can check the distance to the medalObj\r\n\tfunction addMedal(gridPosition:{ row:number, column:number }, medalid:string) {\r\n\t\tlet achievementInfo = getAchievement(medalid)\r\n\t\t\r\n\t\tlet medalObj = medalsContainer.add([\r\n\t\t\tsprite(\"white_noise\"),\r\n\t\t\tpos(),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tlayer(\"windows\"),\r\n\t\t\tz(winParent.z + 1),\r\n\t\t\t// positionSetter(),\r\n\t\t\tarea(),\r\n\t\t\t\"medal\",\r\n\t\t\t{\r\n\t\t\t\tachievementIdx: 0,\r\n\t\t\t\tachievementId: medalid,\r\n\t\t\t\trow: gridPosition.row,\r\n\t\t\t\tcolumn: gridPosition.column,\r\n\t\t\t\t\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tif (!isAchievementUnlocked(this.achievementId)) {\r\n\t\t\t\t\t\tthis.opacity = 0.25\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.opacity = 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this.area.scale = vec2(1 / this.scale.x, 1 / this.scale.y)\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t])\r\n\r\n\t\t// one less, i don't know why!!\r\n\t\tmedalObj.pos = getPositionInWindow(gridPosition.row - 1, gridPosition.column - 1)\r\n\t\tmedalObj.achievementIdx = achievements.indexOf(getAchievement(medalid))\r\n\r\n\t\tif (isAchievementUnlocked(medalid)) {\r\n\t\t\tparseAnimation(medalObj, getAchievement(medalid).icon)\r\n\t\t\tmedalObj.width = 60\r\n\t\t\tmedalObj.height = 60\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tparseAnimation(medalObj, \"medals.unknown\")\r\n\t\t}\r\n\r\n\t\tmedalObj.onClick(() => {\r\n\t\t\tif (medalObj.achievementId == \"tapachievementslot\") {\r\n\t\t\t\tif (!isAchievementUnlocked(medalObj.achievementId)) unlockAchievement(medalObj.achievementId)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tmedalObj.onHover(() => {\r\n\t\t\tlet achievement = getAchievement(medalObj.achievementId)\r\n\t\t\tlet texting:string;\r\n\r\n\t\t\tif (!isAchievementUnlocked(achievement.id)) {\r\n\t\t\t\t// is not secret\r\n\t\t\t\tif (achievement.secretCondition == null) texting = achievement.description\r\n\t\t\t\t// is secret\r\n\t\t\t\telse texting = \"This achievement is secret\\nFor now...\"\r\n\t\t\t}\r\n\r\n\t\t\t// is unlocked\r\n\t\t\telse {\r\n\t\t\t\ttexting = achievement.description\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet tooltip = addTooltip(medalObj, { \r\n\t\t\t\ttext: texting,\r\n\t\t\t\tdirection: \"down\",\r\n\t\t\t\tlerpValue: 1, // TODO: make this just appear, it looks ugly \r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tmedalObj.onHoverEnd(() => {\r\n\t\t\tmedalObj.tooltip.end()\r\n\t\t})\r\n\r\n\t\tlet checkforunlock = ROOT.on(\"achivementUnlock\", (id) => {\r\n\t\t\tif (id == medalid) {\r\n\t\t\t\tparseAnimation(medalObj, getAchievement(id).icon)\r\n\t\t\t\tmedalObj.width = 60\r\n\t\t\t\tmedalObj.height = 60\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tmedalObj.onDestroy(() => {\r\n\t\t\tcheckforunlock.cancel()\r\n\t\t})\r\n\t}\r\n\r\n\t// add all the medals\r\n\t// for (let i = 0; i < 5; i++) {\r\n\tfor (let i = 0; i < achievements.length; i++) {\r\n\t\tif (i == totalColumns * totalRows) break;\r\n\r\n\t\tlet medalid = achievements[i].id\r\n\t\taddMedal(indexToGrid(i), medalid)\r\n\t}\r\n\r\n\tlet scrollSpeed = 0\r\n\r\n\tfunction scrollDown() {\r\n\t\t// if the idx of last medal is the same as the last medal in the unlockables.achievements\r\n\t\tlet allMedals = medalsContainer.get(\"medal\") // have to reverse the one before idk why\r\n\t\tlet sortedMedals = allMedals.sort((a, b) => b.achievementIdx - a.achievementIdx).reverse();\r\n\t\t// if the idx of the last medal is the same as the last medal don't scroll\r\n\t\tif (sortedMedals[sortedMedals.length - 1].achievementIdx == achievements.length - 1) return\r\n\r\n\t\tmedalsContainer.get(\"medal\").filter(medal => medal.row == 1).forEach(medal => {\r\n\t\t\tdestroy(medal)\r\n\t\t})\r\n\r\n\t\tmedalsContainer.get(\"medal\").forEach(medal => {\r\n\t\t\tmedal.row--\r\n\t\t\ttween(medal.pos.y, medal.pos.y - spacing.y, scrollSpeed, (p) => medal.pos.y = p, easings.easeInOutSine)\r\n\t\t})\r\n\r\n\t\twait(scrollSpeed / 2, () => {\r\n\t\t\tlet indexOfLastAchievementInList = achievements.map(achievement => achievement.id).indexOf(medalsContainer.get(\"medal\")[medalsContainer.get(\"medal\").length - 1].achievementId)\r\n\t\t\tlet nextMedals = achievements.map(achievement => achievement.id).slice(indexOfLastAchievementInList + 1, achievements.map(achievement => achievement.id).length)\r\n\t\t\tnextMedals.length = Math.min(nextMedals.length, totalColumns)\r\n\r\n\t\t\tlet medalsInfo = nextMedals.map(medal => getAchievement(medal))\r\n\r\n\t\t\t// adds the new ones\r\n\t\t\tfor (let i = 0; i < nextMedals.length; i++) {\r\n\t\t\t\taddMedal({ row: totalRows, column: indexToGrid(indexOfLastAchievementInList + 1 + i).column }, medalsInfo.map(achievement => achievement.id)[i])\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction scrollUp() {\r\n\t\tlet allMedals = medalsContainer.get(\"medal\") // have to reverse the one before idk why\r\n\t\tlet sortedMedals = allMedals.sort((a, b) => b.achievementIdx - a.achievementIdx).reverse();\t\t\r\n\t\tif (sortedMedals[0].achievementIdx == 0) return\r\n\r\n\t\t// get the last ones\r\n\t\tmedalsContainer.get(\"medal\").filter(medal => medal.row == totalRows).forEach(medal => {\r\n\t\t\tdestroy(medal)\r\n\t\t})\r\n\r\n\t\tmedalsContainer.get(\"medal\").forEach(medal => {\r\n\t\t\tmedal.row++\r\n\t\t\ttween(medal.pos.y, medal.pos.y + spacing.y, scrollSpeed, (p) => medal.pos.y = p, easings.easeInOutSine)\r\n\t\t})\r\n\r\n\t\twait(scrollSpeed / 2, () => {\r\n\t\t\t// grabs all the next achievements to the last in the list\r\n\t\t\tlet previousMedalsNames = achievementsInfo.ids.slice(0, achievementsInfo.ids.indexOf(medalsContainer.get(\"medal\")[0].achievementId));\r\n\t\t\tlet previousMedalsInfo = previousMedalsNames.map(medal => getAchievement(medal))\r\n\r\n\t\t\t// adds the new ones\r\n\t\t\tfor (let i = 0; i < previousMedalsInfo.length; i++) {\r\n\t\t\t\taddMedal({ row: 1, column: indexToGrid(i).column }, previousMedalsInfo.map(achievement => achievement.id)[i])\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\twinParent.onKeyPress(\"down\", () => {\r\n\t\tscrollDown()\r\n\t})\r\n\r\n\twinParent.onKeyPress(\"up\", () => {\r\n\t\tscrollUp()\r\n\t})\r\n\r\n\twinParent.onScroll((delta) => {\r\n\t\tif (delta.y > 0) scrollDown()\r\n\t\telse if (delta.y < 0) scrollUp()\t\r\n\t})\r\n}", "/**\r\n * Draws a damn shadow \r\n */\r\nexport function drawDamnShadow(xSpacing: number, ySpacing: number, theOpacity: number) {\r\n\tlet drawEvent = null\r\n\r\n\tconst theColor = BLACK\r\n\r\n\treturn {\r\n\t\tid: \"damnShadow\",\r\n\t\trequire: [\"anchor\"],\r\n\t\tdisableShadow: false,\r\n\t\t\r\n\t\tadd() {\r\n\t\t\tlet drawingShadow = () => {\r\n\t\t\t\tif (this.disableShadow == true) return\r\n\t\t\t\tif (this.is(\"sprite\")) {\r\n\t\t\t\t\tdrawSprite({\r\n\t\t\t\t\t\tsprite: this.sprite,\r\n\r\n\t\t\t\t\t\tpos: vec2(this.pos.x + xSpacing, this.pos.y + ySpacing),\r\n\t\t\t\t\t\topacity: theOpacity,\r\n\t\t\t\t\t\tcolor: theColor,\r\n\t\t\t\t\t\tanchor: this.anchor,\r\n\t\t\t\t\t\tscale: this.scale,\r\n\t\t\t\t\t\tangle: this.angle,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (this.is(\"text\")) {\r\n\t\t\t\t\tdrawText({\r\n\t\t\t\t\t\ttext: this.text,\r\n\t\t\t\t\t\tfont: this.font,\r\n\t\t\t\t\t\talign: this.align,\r\n\t\t\t\t\t\tsize: this.textSize,\r\n\r\n\t\t\t\t\t\tpos: vec2(this.pos.x + xSpacing, this.pos.y + ySpacing),\r\n\t\t\t\t\t\topacity: theOpacity,\r\n\t\t\t\t\t\tcolor: theColor,\r\n\t\t\t\t\t\tanchor: this.anchor,\r\n\t\t\t\t\t\tscale: this.scale,\r\n\t\t\t\t\t\tangle: this.angle,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (this.is(\"rect\")) {\r\n\t\t\t\t\tdrawRect({\r\n\t\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\t\theight: this.height,\r\n\t\t\t\t\t\tradius: this.radius,\r\n\r\n\t\t\t\t\t\tpos: vec2(this.pos.x + xSpacing, this.pos.y + ySpacing),\r\n\t\t\t\t\t\topacity: theOpacity,\r\n\t\t\t\t\t\tcolor: theColor,\r\n\t\t\t\t\t\tanchor: this.anchor,\r\n\t\t\t\t\t\tscale: this.scale,\r\n\t\t\t\t\t\tangle: this.angle,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdrawEvent = this.parent.onDraw(drawingShadow)\r\n\t\t},\r\n\r\n\t\tdestroy() {\r\n\t\t\tdrawEvent.cancel()\r\n\t\t\tdrawEvent = null\r\n\t\t}\r\n\t}\r\n}", "import { GameObj, Vec2 } from \"kaplay\"\r\nimport { ROOT } from \"../../../main\"\r\nimport { curDraggin, drag, setCurDraggin } from \"../../plugins/drag\"\r\nimport { blendColors, bop, getPositionOfSide } from \"../../utils\"\r\nimport { playSfx } from \"../../../sound\"\r\nimport { saveColor } from \"../../../gamestate\"\r\nimport { drawDamnShadow } from \"../../plugins/drawDamnShadow\"\r\nimport { insideWindowHover } from \"../../hovers/insideWindowHover\"\r\nimport { mouse } from \"../../additives\"\r\n\r\nconst SLIDER_HANDLE_LERP = 0.2\r\n\r\nexport let sliderColors = {\r\n\tred: { full: [255, 60, 60], dull: [245, 119, 119] },\r\n\tgreen: { full: [68, 255, 74], dull: [133, 243, 136] },\r\n\tblue: { full: [60, 121, 255], dull: [126, 163, 243] },\r\n\talpha: { full: [48, 48, 48], dull: [118, 118, 118] },\r\n}\r\n\r\ntype rgbaKey = \"r\" | \"g\" | \"b\" | \"a\"\r\n\r\nfunction keyToName(key: rgbaKey) {\r\n\tswitch (key) {\r\n\t\tcase \"r\": return \"red\"\r\n\t\tcase \"g\": return \"green\"\r\n\t\tcase \"b\": return \"blue\"\r\n\t\tcase \"a\": return \"alpha\"\r\n\t}\r\n}\r\n\r\ntype sliderOpts = {\r\n\trange: [number, number],\r\n\tvalue: number,\r\n\t/**\r\n\t * Has an anchor of left\r\n\t */\r\n\tpos: Vec2,\r\n\tcolor: \"red\" | \"green\" | \"blue\" | \"alpha\",\r\n\tparent?: GameObj,\r\n\tonValueChange?: (value: number) => void, // Oliver is the goat\r\n}\r\n\r\ninterface sliderInterface {\r\n\tsliderContent: GameObj,\r\n\tsliderButton: GameObj,\r\n\tvalue: number,\r\n\tsetValue: (newValue: number) => void,\r\n\tonValueChange?: (value: number) => void,\r\n\trange: [number, number],\r\n}\r\n\r\nexport function addSlider(opts: sliderOpts) : sliderInterface {\r\n\topts.parent = opts.parent || ROOT\r\n\r\n\tlet value = opts.value\r\n\tlet previousValue = value\r\n\r\n\tlet winParent = opts.parent;\r\n\topts.parent.onUpdate(() => winParent = opts.parent)\r\n\r\n\tlet fullColor = Color.fromArray(sliderColors[opts.color].full)\r\n\tlet dullColor = Color.fromArray(sliderColors[opts.color].dull)\r\n\r\n\tconst triggerOnValueChange = () => {\r\n\t\tif (opts.onValueChange && value !== previousValue) {\r\n\t\t\topts.onValueChange(value)\r\n\t\t\tpreviousValue = value\r\n\t\t}\r\n\t}\r\n\r\n\tlet content = winParent.add([\r\n\t\trect(winParent.width - 40, 18, { radius: 10 }),\r\n\t\tcolor(),\r\n\t\tpos(opts.pos),\r\n\t\tanchor(\"left\"),\r\n\t\tarea(),\r\n\t\tdrawDamnShadow(2, 2, 0.5),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tlet blendFactor = map(value, opts.range[0], opts.range[1], 0, 1)\r\n\t\t\t\tlet color = blendColors(dullColor, fullColor, blendFactor)\r\n\t\t\t\tthis.color = color\r\n\t\t\t\ttriggerOnValueChange()\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet leftSideOfContent = content.pos.x\r\n\tlet rightSideOfContent = content.pos.x + content.width\r\n\r\n\tlet button = winParent.add([\r\n\t\tsprite(\"hexColorHandle\"),\r\n\t\tanchor(\"center\"),\r\n\t\trotate(0),\r\n\t\tpos(0, content.pos.y),\r\n\t\tarea(),\r\n\t\tscale(),\r\n\t\tdrag(true),\r\n\t\tinsideWindowHover(winParent),\r\n\t\tdrawDamnShadow(2, 2, 0.5),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.pos.y = content.pos.y\r\n\r\n\t\t\t\t// dragging, changing value\r\n\t\t\t\tif (this.dragging === true) {\r\n\t\t\t\t\tvalue = map(this.pos.x, leftSideOfContent, rightSideOfContent, opts.range[0], opts.range[1])\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// usually when value is set using setValue\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet mappedPos = map(value, opts.range[0], opts.range[1], leftSideOfContent, rightSideOfContent)\r\n\t\t\t\t\tthis.pos.x = lerp(this.pos.x, mappedPos, SLIDER_HANDLE_LERP)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = clamp(value, opts.range[0], opts.range[1])\r\n\t\t\t\tthis.pos.x = clamp(this.pos.x, leftSideOfContent, rightSideOfContent)\r\n\r\n\t\t\t\t// angle\r\n\t\t\t\tlet mappedAngle = map(value, opts.range[0], opts.range[1], 0, 360)\r\n\t\t\t\tthis.angle = lerp(this.angle, mappedAngle, SLIDER_HANDLE_LERP)\r\n\r\n\t\t\t\t// color\r\n\t\t\t\tlet mappedColor = content.color.darken(5)\r\n\t\t\t\tthis.color = mappedColor\r\n\r\n\t\t\t\ttriggerOnValueChange()\r\n\t\t\t},\r\n\r\n\t\t\treleaseDrop() {\r\n\t\t\t\tcurDraggin?.trigger(\"dragEnd\")\r\n\t\t\t\tsetCurDraggin(null)\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\tbutton.startingHover(() => {\r\n\t\ttween(vec2(1), vec2(1.2), 0.15, (p) => button.scale = p)\r\n\t\tmouse.play(\"point\")\r\n\t})\r\n\r\n\tbutton.endingHover(() => {\r\n\t\ttween(vec2(1.2), vec2(1), 0.15, (p) => button.scale = p)\r\n\t\tmouse.play(\"cursor\")\r\n\t})\r\n\r\n\tbutton.onClick(() => {\r\n\t\tif (!winParent.active) return;\r\n\t\tbutton.pick()\r\n\t\tmouse.grab()\r\n\r\n\t\twinParent.canClose = false\r\n\t})\r\n\r\n\tbutton.onMouseRelease(() => {\r\n\t\tif (!winParent.active) return;\r\n\t\tif (button.isBeingHovered == false) return\r\n\t\tbutton.releaseDrop()\r\n\r\n\t\tif (button.isHovering() == true) {\r\n\t\t\tbutton.startHoverFunction()\r\n\t\t\tmouse.releaseAndPlay(\"point\")\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tmouse.releaseAndPlay(\"cursor\")\r\n\t\t\tbutton.endHoverFunction()\r\n\t\t}\r\n\r\n\t\twinParent.canClose = true\r\n\t})\r\n\r\n\t// oh god\r\n\tcontent.onClick(() => {\r\n\t\tif (button.isBeingHovered == true) return;\r\n\t\t\r\n\t\tlet mappedValue = map(mousePos().x, content.screenPos().x, content.screenPos().x + content.width, opts.range[0], opts.range[1])\r\n\t\tvalue = clamp(mappedValue, opts.range[0], opts.range[1])\r\n\t})\r\n\r\n\treturn {\r\n\t\tsliderContent: content,\r\n\t\tsliderButton: button,\r\n\t\tvalue: value,\r\n\t\trange: [opts.range[0], opts.range[1]],\r\n\t\tsetValue: (newValue: number) => {\r\n\t\t\tvalue = newValue\r\n\t\t\ttriggerOnValueChange()\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport function playSliderSound(value:number) {\r\n\tif (Math.round(value) % 2 == 0) {\r\n\t\tlet mappedDetune = map(value, 0, 255, -100, 100)\r\n\t\tplaySfx(\"hoverMiniButton\", { detune: mappedDetune })\r\n\t}\r\n}\r\n\r\nexport function addDefaultButton(position: Vec2, parent: GameObj, sliders: sliderInterface[], defaultValues: number[]) {\r\n\tparent = parent || ROOT\r\n\t\r\n\tlet winParent = parent.parent;\r\n\r\n\tlet defaultButton = parent.add([\r\n\t\tsprite(\"defaultButton\"),\r\n\t\tpos(position),\r\n\t\tarea(),\r\n\t\tcolor(),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\tdrawDamnShadow(2, 2, 0.5),\r\n\t])\r\n\r\n\tdefaultButton.onClick(() => {\r\n\t\tif (!winParent.active) return\r\n\r\n\t\tbop(defaultButton)\r\n\t\tplaySfx(\"clickButton\", { detune: rand(-50, 50) })\r\n\r\n\t\tfor (let i = 0; i < sliders.length; i++) {\r\n\t\t\tsliders[i].setValue(defaultValues[i])\r\n\t\t}\r\n\t})\r\n\r\n\treturn defaultButton;\r\n}\r\n\r\n// the parent holds the color it should change  to\r\nexport function addRandomButton(position: Vec2, parent: GameObj, sliders: sliderInterface[]) {\r\n\tparent = parent || ROOT\r\n\t\r\n\tlet winParent = parent.parent;\r\n\r\n\tlet randomButton = parent.add([\r\n\t\tsprite(\"randomButton\"),\r\n\t\tpos(position),\r\n\t\tarea(),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(),\r\n\t\tscale(),\r\n\t\tdrawDamnShadow(2, 2, 0.5),\r\n\t])\r\n\r\n\trandomButton.onClick(() => {\r\n\t\tif (!winParent.active) return\r\n\r\n\t\tbop(randomButton)\r\n\t\tplaySfx(\"clickButton\", { detune: rand(-50, 50) })\r\n\t\t\r\n\t\tsliders.forEach(slider => {\r\n\t\t\tlet randomValue = rand(slider.range[0], slider.range[1])\r\n\t\t\tslider.setValue(randomValue)    \r\n\t\t})\r\n\t})\r\n\r\n\treturn randomButton;\r\n}\r\n\r\nexport function addNumbers(position: Vec2, parent: GameObj, objSaveColor: saveColor) {\r\n\tparent = parent || ROOT\r\n\r\n\tlet numberStyles = {}\r\n\t\r\n\tlet names = Object.keys(objSaveColor).map(color => keyToName(color as rgbaKey))\r\n\t\r\n\tnames.forEach(colorName => {\r\n\t\tnumberStyles[`${colorName}`] = {\r\n\t\t\tcolor: Color.fromArray(sliderColors[colorName].full) \t\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * Converts numbers in a way that they show up like this\r\n\t * 33 gets converted to 033, 1 gets converted to 001\r\n\t */\r\n\tfunction formatRgb(value:number) {\r\n\t\treturn value.toFixed(0).padStart(3, \"0\")\r\n\t}\r\n\r\n\tlet numbers = parent.add([\r\n\t\ttext(\"000 000 000\", {\r\n\t\t\tstyles: numberStyles,\r\n\t\t}),\r\n\t\tpos(position),\r\n\t\tanchor(\"left\"),\r\n\t\tdrawDamnShadow(2, 2, 0.5),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tlet stuff = []\r\n\r\n\t\t\t\tif (isNaN(objSaveColor.a) == true) delete objSaveColor.a\r\n\t\t\t\t\r\n\t\t\t\tObject.keys(objSaveColor).forEach((colorKey, index) => {\r\n\t\t\t\t\tif (colorKey == \"a\") {\r\n\t\t\t\t\t\tstuff[index] = `[${names[index]}]${formatRgb(objSaveColor[colorKey] * 100)}[/${names[index]}]`\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstuff[index] = `[${names[index]}]${formatRgb(objSaveColor[colorKey])}[/${names[index]}]`\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.text = stuff.join(\" \")\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\treturn numbers;\r\n}", "import { GameState } from \"../../../gamestate\";\r\nimport { hexagon } from \"../../hexagon\";\r\nimport { addDefaultButton, addNumbers, addRandomButton, addSlider, playSliderSound } from \"./colorWindowElements\";\r\n\r\nexport function hexColorWinContent(winParent) {\r\n\t\r\n\tlet redslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, -66),\r\n\t\tvalue: GameState.settings.hexColor.r,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"red\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\thexagon.color.r = value\r\n\t\t\tGameState.settings.hexColor.r = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\r\n\tlet greenslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, -15),\r\n\t\tvalue: GameState.settings.hexColor.g,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"green\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\thexagon.color.g = value\r\n\t\t\tGameState.settings.hexColor.g = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\r\n\tlet blueslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, 38),\r\n\t\tvalue: GameState.settings.hexColor.b,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"blue\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\thexagon.color.b = value\r\n\t\t\tGameState.settings.hexColor.b = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\r\n\tlet sliders = [redslider, greenslider, blueslider]\r\n\r\n\t// buttons\r\n\tlet controlBar = winParent.add([\r\n\t\trect(winParent.width - 40, 60, { radius: 10}),\r\n\t\tanchor(\"top\"),\r\n\t\tpos(0, 70),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t])\r\n\t\r\n\tlet defaultButton = addDefaultButton(vec2(-135, 29), controlBar, sliders, [255, 255 ,255])\r\n\tlet randomButton = addRandomButton(vec2(-66, 29), controlBar, sliders)\r\n\tlet rgbaNumbers = addNumbers(vec2(-18, 29), controlBar, GameState.settings.hexColor)\r\n\r\n\t// setting the color and other stuff\r\n\twinParent.onUpdate(() => {\r\n\t\twinParent.color = hexagon.color.lighten(50)\r\n\t})\r\n\r\n\t// winParent.onDraw(() => {\r\n\t// \tdrawSprite({\r\n\t// \t\tsprite: \"icon_hexColor\",\r\n\t// \t\tscale: vec2(0.8),\r\n\t// \t\tpos: positioner.pos,\r\n\t// \t\tanchor: \"center\",\r\n\t// \t})\r\n\r\n\t// \tdrawText({\r\n\t// \t\ttext: \"| Hex Color\",\r\n\t// \t\tanchor: \"left\",\r\n\t// \t\talign: \"left\",\r\n\t// \t\tfont: \"lambda\",\r\n\t// \t\tsize: 20,\r\n\t// \t\tpos: positioner.pos\r\n\t// \t})\r\n\t// })\r\n}", "import { GameState } from \"../../../gamestate\"\r\nimport { gameBg } from \"../../additives\"\r\nimport { blendColors } from \"../../utils\"\r\nimport { addDefaultButton, addNumbers, addRandomButton, addSlider, playSliderSound } from \"./colorWindowElements\"\r\n\r\nexport function bgColorWinContent(winParent) {\r\n\tlet redslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, -98),\r\n\t\tvalue: GameState.settings.bgColor.r,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"red\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\tgameBg.color.r = value\r\n\t\t\tGameState.settings.bgColor.r = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\t\r\n\tlet greenslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, redslider.sliderContent.pos.y + 55),\r\n\t\tvalue: GameState.settings.bgColor.g,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"green\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\tgameBg.color.g = value\r\n\t\t\tGameState.settings.bgColor.g = value\r\n\r\n\t\t\tlet mappedValue = map(value, 0, 1, 0, 255)\r\n\r\n\t\t\tplaySliderSound(mappedValue)\r\n\t\t}\r\n\t})\r\n\r\n\tlet blueslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, greenslider.sliderContent.pos.y + 55),\r\n\t\tvalue: GameState.settings.bgColor.b,\r\n\t\trange: [0, 255],\r\n\t\tcolor: \"blue\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\tgameBg.color.b = value\r\n\t\t\tGameState.settings.bgColor.b = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\r\n\tlet alphaslider = addSlider({\r\n\t\tparent: winParent,\r\n\t\tpos: vec2(-180, blueslider.sliderContent.pos.y + 55),\r\n\t\tvalue: GameState.settings.bgColor.a,\r\n\t\trange: [0, 1],\r\n\t\tcolor: \"alpha\",\r\n\t\tonValueChange: (value) => {\r\n\t\t\tgameBg.color.a = value\r\n\t\t\tGameState.settings.bgColor.a = value\r\n\t\t\tplaySliderSound(value)\r\n\t\t}\r\n\t})\r\n\r\n\tlet sliders = [redslider, greenslider, blueslider, alphaslider]\r\n\r\n\t// buttons\r\n\tlet controlBar = winParent.add([\r\n\t\trect(winParent.width - 20, 60, { radius: 10}),\r\n\t\tanchor(\"left\"),\r\n\t\tpos(-winParent.width / 2 + 10, 125),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.25),\r\n\t])\r\n\t\r\n\tlet defaultButton = addDefaultButton(vec2(38, 0), controlBar, sliders, [0, 0, 0, 0.84])\r\n\tlet randomButton = addRandomButton(vec2(98, 0), controlBar, sliders)\r\n\tlet rgbaNumbers = addNumbers(vec2(130, 0), controlBar, GameState.settings.bgColor)\r\n\r\n\t// setting the color and other stuff\r\n\twinParent.onUpdate(() => {\r\n\t\twinParent.color = blendColors(WHITE, gameBg.color.lighten(50), gameBg.color.a)\r\n\t})\r\n}", "import { GameState } from \"../../../gamestate.ts\";\r\nimport { bop, getPositionOfSide } from \"../../utils.ts\";\r\nimport { mouse } from \"../../additives.ts\";\r\nimport { drag, curDraggin, setCurDraggin } from \"../.././plugins/drag.ts\";\r\nimport { playSfx } from \"../../../sound.ts\";\r\nimport { ROOT } from \"../../../main.ts\";\r\nimport { folderObj } from \"./folderObj.ts\";\r\nimport { Vec2 } from \"kaplay\";\r\nimport { insideWindowHover } from \"../../hovers/insideWindowHover.ts\";\r\nimport { isAchievementUnlocked, unlockAchievement } from \"../../unlockables/achievements.ts\";\r\n\r\n// window contents\r\nimport { storeWinContent } from \"../store/storeWindows.ts\";\r\nimport { musicWinContent } from \"../musicWindow.ts\";\r\nimport { settingsWinContent } from \"../settings/settingsWindow.ts\";\r\nimport { ascendWinContent } from \"../ascendWindow.ts\";\r\nimport { extraWinContent } from \"../extraWindow.ts\";\r\nimport { creditsWinContent } from \"../creditsWin.ts\";\r\nimport { statsWinContent } from \"../statsWin.ts\";\r\nimport { medalsWinContent } from \"../medalsWin.ts\";\r\nimport { hexColorWinContent } from \"../color/hexColorWindow.ts\";\r\nimport { bgColorWinContent } from \"../color/bgColorWindow.ts\";\r\n\r\nclass Window {\r\n\tkey: string;\r\n\tidx: number;\r\n\tpos: Vec2;\r\n\tcontent: (winParent:any) => void;\r\n\ticon?: string;\r\n\r\n\t// they can't be the same names lol\r\n\tconstructor(public windowKey: string, public index: number, public position: Vec2, public contentObjs: (winParent:any) => void, public iconing?: string) {\r\n\t\tthis.key = windowKey\r\n\t\tthis.idx = index\r\n\t\tthis.pos = position\r\n\t\tthis.content = contentObjs\r\n\t\tthis.icon = iconing\r\n\t}\r\n}\r\n\r\n// TODO: look into this, the 'vec2 is not defined' issue still persist, but it's a better alternative to the infoForWindows object\r\n// let windowMaybe = new Window(\"storeWin\", 0, vec2(264, 285), storeWinContent, \"icon_store\")\r\n\r\nexport let infoForWindows = {}\r\n\r\nexport let allObjWindows = {\r\n\tisHoveringAWindow: false,\r\n\tisDraggingAWindow: false,\r\n}\r\n\r\nexport const buttonSpacing = 75;\r\n\r\nexport function deactivateAllWindows() {\r\n\tget(\"window\").filter(window => window.active == true).forEach(element => { element.deactivate() });\r\n}\r\n\r\nexport function manageWindow(windowKey) {\r\n\tif (!infoForWindows.hasOwnProperty(windowKey)) throw new Error(\"No such window for: \" + windowKey);\r\n\r\n\tlet maybeWindow = get(windowKey).filter(obj => !obj.is(\"minibutton\"))[0]\r\n\t// if window even exists in the first place (not a button)\r\n\tif (maybeWindow) {\r\n\t\t// if it isn't it means that it's being closed\r\n\t\tif (maybeWindow.is(\"window\")) {\r\n\t\t\tmaybeWindow.close()\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tmaybeWindow = openWindow(windowKey)\r\n\t}\r\n\r\n\treturn maybeWindow\r\n}\r\n\r\nexport function windowsDefinition() {\r\n\tinfoForWindows = {\r\n\t\t\"storeWin\": { idx: 0, content: storeWinContent, lastPos: vec2(264, 285) },\r\n\t\t\"musicWin\": { idx: 1, content: musicWinContent, lastPos: vec2(208, 96) },\r\n\t\t\"ascendWin\": { idx: 2, content: ascendWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"statsWin\": { idx: 3, content: statsWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"medalsWin\": { idx: 4, content: medalsWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"creditsWin\": { idx: 5, content: creditsWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"settingsWin\": { idx: 6, content: settingsWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"leaderboardsWin\": { idx: 7, content: emptyWinContent, lastPos: vec2(center().x, center().y) },\r\n\t\t\"hexColorWin\": { idx: 8, content: hexColorWinContent, lastPos: vec2(208, 160) },\r\n\t\t\"bgColorWin\": { idx: 9, content: bgColorWinContent, lastPos: vec2(width() - 200, 200) },\r\n\t\t\"extraWin\": { idx: 10, icon: \"extra\", content: extraWinContent, lastPos: center() },\r\n\t}\r\n}\r\n\r\nexport type windowKey = \"storeWin\" | \"musicWin\" | \"ascendWin\" | \"statsWin\" | \"medalsWin\" | \"aboutWin\" | \"creditsWin\" | \"settingsWin\" | \"leaderboardsWin\" | \"hexColorWin\" | \"bgColorWin\" | \"extraWin\"\r\n\r\nexport function isWindowOpen(windowKey:windowKey) {\r\n\treturn get(windowKey).filter(obj => obj.is(\"window\")).length > 0\r\n}\r\n\r\n/**\r\n * Creates a new property in the windowObj that holds this \r\n */\r\nexport function addXButton(windowParent:any) {\r\n\tlet xButton = windowParent.add([\r\n\t\ttext(\"X\", {\r\n\t\t\tfont: \"lambda\",\r\n\t\t}),\r\n\t\tcolor(WHITE),\r\n\t\tpos(),\r\n\t\tanchor(\"center\"),\r\n\t\tinsideWindowHover(windowParent),\r\n\t\tz(windowParent.z + 1),\r\n\t\tarea({ scale: vec2(1.8, 1.1), offset: vec2(-5, 0)}),\r\n\t\t\"xButton\",\r\n\t\t{\r\n\t\t\tadd() {\r\n\t\t\t\t// can't use getPositionOfSide because it will be root and not relative to windowParent\r\n\t\t\t\tlet offset = vec2(-18, 23)\r\n\t\t\t\tthis.pos.x += windowParent.width / 2\r\n\t\t\t\tthis.pos.y -= windowParent.height / 2\r\n\t\t\t\tthis.pos = this.pos.add(offset)\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\txButton.startingHover(() => {\r\n\t\txButton.color = RED\r\n\t})\r\n\r\n\txButton.endingHover(() => {\r\n\t\txButton.color = WHITE\r\n\t})\r\n\r\n\txButton.onClick(() => {\r\n\t\tif (!windowParent.active) {\r\n\t\t\t// if it's not dragging a window AND a window that is not this one is being hovered\r\n\t\t\tif (!allObjWindows.isDraggingAWindow && !get(\"window\").some(window => window.isHovering() && window != windowParent)) {\r\n\t\t\t\twindowParent.close()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse windowParent.close()\r\n\t})\r\n\r\n\treturn xButton;\r\n}\r\n\r\nexport function openWindow(windowKey:windowKey) {\r\n\tif (!infoForWindows.hasOwnProperty(windowKey)) throw new Error(`No such window for: ${windowKey}`)\r\n\t\r\n\tplaySfx(\"openWin\")\r\n\r\n\tlet windowObj = add([\r\n\t\tsprite(getSprite(windowKey) ? windowKey : \"dumbTestWin\"),\r\n\t\tpos(infoForWindows[windowKey].lastPos),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(1),\r\n\t\tscale(1),\r\n\t\tlayer(\"windows\"),\r\n\t\tz(0),\r\n\t\tdrag(),\r\n\t\tarea({ scale: vec2(1.05, 1) }),\r\n\t\t\"window\",\r\n\t\t`${windowKey}`,\r\n\t\t{\r\n\t\t\tidx: infoForWindows[windowKey].idx,\r\n\t\t\twindowKey: windowKey,\r\n\t\t\tactive: true,\r\n\t\t\txButton: null,\r\n\t\t\tcanClose: true,\r\n\t\t\tclose() {\r\n\t\t\t\tthis.trigger(\"close\")\r\n\t\t\t\tthis.removeAll()\r\n\t\t\t\tthis.unuse(\"window\")\r\n\t\t\t\tthis.active = false\r\n\t\t\t\tplaySfx(\"closeWin\")\r\n\r\n\t\t\t\ttween(this.scale, vec2(0.9), 0.32, (p) => this.scale = p, easings.easeOutQuint)\r\n\t\t\t\ttween(this.opacity, 0, 0.32, (p) => this.opacity = p, easings.easeOutQuint).then(() => {\r\n\t\t\t\t\t// destroying it doesn't trigger onHoverEnd\r\n\t\t\t\t\tdestroy(this)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tfolderObj.trigger(\"winClose\")\r\n\r\n\t\t\t\tinfoForWindows[windowKey].lastPos = this.pos\r\n\t\t\t},\r\n\r\n\t\t\treleaseDrop() {\r\n\t\t\t\tif (curDraggin && curDraggin == this) {\r\n\t\t\t\t\tcurDraggin.trigger(\"dragEnd\")\r\n\t\t\t\t\tsetCurDraggin(null)\r\n\t\t\t\t\tmouse.releaseAndPlay(\"cursor\")\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tactivate() {\r\n\t\t\t\tthis.active = true\r\n\t\t\t\tthis.trigger(\"activate\")\r\n\t\t\t\t\r\n\t\t\t\tif (!this.is(\"shader\")) return\r\n\t\t\t\tthis.unuse(\"shader\")\r\n\t\t\t\tthis.get(\"*\", { recursive: true }).forEach((obj) => {\r\n\t\t\t\t\tobj.unuse(\"shader\")\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// trigger some hovers\r\n\t\t\t\tthis.get(\"*\").filter(obj => obj.is(\"insideHover\") && obj.isHovering() == true && obj.isBeingHovered == false).forEach(obj => {\r\n\t\t\t\t\tobj.startHoverFunction()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tdeactivate() {\r\n\t\t\t\tthis.active = false\r\n\t\t\t\tthis.trigger(\"deactivate\")\r\n\r\n\t\t\t\tif (this.is(\"shader\")) return\r\n\t\t\t\tthis.use(shader(\"grayscale\"))\r\n\t\t\t\tthis.get(\"*\", { recursive: true }).forEach((obj) => {\r\n\t\t\t\t\tobj.use(shader(\"grayscale\"))\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// untrigger some hovers\r\n\t\t\t\tlet objsWithHover = this.get(\"*\").filter(obj => obj.is(\"insideHover\") && obj.isBeingHovered == true)\r\n\r\n\t\t\t\tobjsWithHover.forEach(obj => {\r\n\t\t\t\t\tobj.endHoverFunction()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tisMouseInClickingRange() {\r\n\t\t\t\tlet condition = \r\n\t\t\t\t(mouse.pos.y >= getPositionOfSide(this).top) &&\r\n\t\t\t\t(mouse.pos.y <= getPositionOfSide(this).top + 25)\r\n\t\t\t\treturn condition;\r\n\t\t\t},\r\n\r\n\t\t\tisMouseInRange() {\r\n\t\t\t\treturn this.hasPoint(mouse.pos);\r\n\t\t\t},\r\n\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.pos.x = clamp(this.pos.x, -151, 1180)\r\n\t\t\t\tthis.pos.y = clamp(this.pos.y, this.height / 2, height() + (this.height / 2) - 36)\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\tinfoForWindows[windowKey].lastPos.x = clamp(infoForWindows[windowKey].lastPos.x, 196, 827)\r\n\tinfoForWindows[windowKey].lastPos.y = clamp(infoForWindows[windowKey].lastPos.y, height() - windowObj.height / 2, -windowObj.height / 2)\r\n\twindowObj.pos = infoForWindows[windowKey].lastPos\r\n\r\n\twindowObj.onHover(() => {\r\n\t\tquery({\r\n\t\t\tinclude: [ \"outsideHover\", \"insideHover\" ],\r\n\t\t\tincludeOp: \"or\",\r\n\t\t\thierarchy: \"descendants\",\r\n\t\t}).forEach((obj) => {\r\n\t\t\tobj.trigger(\"cursorEnterWindow\", windowObj)\r\n\t\t})\r\n\t})\r\n\t\r\n\twindowObj.onHoverEnd(() => {\r\n\t\tquery({\r\n\t\t\tinclude: [ \"outsideHover\", \"insideHover\" ],\r\n\t\t\tincludeOp: \"or\",\r\n\t\t\thierarchy: \"descendants\",\r\n\t\t}).forEach((obj) => {\r\n\t\t\tobj.trigger(\"cursorExitWindow\", windowObj)\r\n\t\t})\r\n\t})\r\n\r\n\twindowObj.xButton = addXButton(windowObj)\r\n\r\n\twindowObj.onClick(() => {\r\n\t\t// if has been closed don't do anything\r\n\t\tif (!windowObj.is(\"window\")) return\r\n\r\n\t\tif (!windowObj.xButton.isHovering()) {\r\n\t\t\tif (curDraggin) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tfor (const window of get(\"window\").reverse()) {\r\n\t\t\t\t// If mouse is pressed and mouse position is inside, we pick\r\n\t\t\t\tif (window.isMouseInRange()) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (window.isMouseInClickingRange()) {\r\n\t\t\t\t\t\tmouse.grab();\r\n\t\t\t\t\t\twindow.pick();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (window.active == false) {\r\n\t\t\t\t\t\twait(0.01, () => {\r\n\t\t\t\t\t\t\tdeactivateAllWindows()\r\n\t\t\t\t\t\t\twindow.activate()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\twindowObj.onMouseRelease(() => {\r\n\t\tif (windowObj.dragging) windowObj.releaseDrop() \r\n\t})\r\n\r\n\twindowObj.onKeyPress(\"escape\", () => {\r\n\t\t// if window is active and (window isn't an extra window and curDragging isn't gridMinibutton)\r\n\t\t// can't close if is extra window and is dragging a button\r\n\t\tif (windowObj.canClose == true && windowObj.active && curDraggin != windowObj && !(windowObj.is(\"extraWin\") && curDraggin?.is(\"gridMiniButton\"))) windowObj.close()\r\n\t})\r\n\r\n\t// activate\r\n\tdeactivateAllWindows()\r\n\twindowObj.activate()\r\n\r\n\t// add content\r\n\tinfoForWindows[windowKey].content(windowObj, windowKey)\r\n\r\n\t// animate it\r\n\ttween(0, 1, 0.32, (p) => windowObj.opacity = p, easings.easeOutQuint)\r\n\ttween(vec2(0.8), vec2(1), 0.32, (p) => windowObj.scale = p, easings.easeOutQuint)\r\n\t\r\n\t// manage the minibutton\r\n\tlet correspondingMinibutton = get(\"minibutton\").filter(minibutton => minibutton.windowKey === windowKey)[0]\r\n\t\r\n\tif (correspondingMinibutton != null) {\r\n\t\tcorrespondingMinibutton.window = windowObj\r\n\t\tif (!correspondingMinibutton.isHovering()) bop(correspondingMinibutton)\r\n\t}\r\n\r\n\twindowObj.on(\"close\", () => {\r\n\t\tif (correspondingMinibutton != null) {\r\n\t\t\tcorrespondingMinibutton.window = null\r\n\t\t\tif (!correspondingMinibutton.isHovering()) bop(correspondingMinibutton)\r\n\t\t}\r\n\t})\r\n\r\n\t// check for achievement\r\n\tif (GameState.taskbar.length > 3) {\r\n\t\tif (!isAchievementUnlocked(\"allwindowsontaskbar\")) {\r\n\t\t\tif (get(\"window\").length == GameState.taskbar.length) {\r\n\t\t\t\tlet windows = []\r\n\t\t\t\tget(\"window\").forEach((window) => {\r\n\t\t\t\t\twindows.push(window.windowKey)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\tlet gamestateTaskbarClone = GameState.taskbar.slice()\r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst isEqual = (a, b) => new Set(a).symmetricDifference(new Set(b)).size == 0\r\n\r\n\t\t\t\tif (isEqual(gamestateTaskbarClone, windows)) {\r\n\t\t\t\t\tunlockAchievement(\"allwindowsontaskbar\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// drawShadow() \r\n\tlet drawShadowEvent = onDraw(() => {\r\n\t\tdrawSprite({\r\n\t\t\tsprite: windowObj.sprite,\r\n\t\t\t// width: windowObj.width,\r\n\t\t\t// height: windowObj.height,\r\n\t\t\tpos: vec2(windowObj.pos.x, windowObj.pos.y + 4),\r\n\t\t\tscale: windowObj.scale,\r\n\t\t\tanchor: windowObj.anchor,\r\n\t\t\tcolor: BLACK,\r\n\t\t\topacity: 0.5,\r\n\t\t})\r\n\t})\r\n\r\n\twindowObj.on(\"close\", () => {\r\n\t\tdrawShadowEvent.cancel()\r\n\t})\r\n\r\n\tROOT.trigger(\"winOpen\", windowKey as windowKey)\r\n\r\n\treturn windowObj;\r\n}\r\n\r\nexport function emptyWinContent(winParent) {\r\n\twinParent.add([\r\n\t\ttext(`THIS WINDOW IS EMPTY\\nThis is the ${winParent.windowKey}`, {\r\n\t\t\talign: \"center\"\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t])\r\n}\r\n", "import { GameObj } from \"kaplay\"\r\nimport { GameState } from \"../gamestate\"\r\nimport { playSfx } from \"../sound\"\r\nimport { hexagon } from \"./hexagon\"\r\nimport { blendColors, parseAnimation, saveColorToColor } from \"./utils\"\r\nimport { allObjWindows, manageWindow } from \"./windows/windows-api/windowManaging\"\r\nimport { isWindowUnlocked } from \"./unlockables/unlockablewindows\"\r\n\r\nexport let gameBg:GameObj;\r\nexport function addBackground() {\r\n\tgameBg = add([\r\n\t\trect(width(), height()),\r\n\t\tpos(center()),\r\n\t\tanchor(\"center\"),\r\n\t\tscale(8),\r\n\t\tcolor(saveColorToColor(GameState.settings.bgColor)),\r\n\t\tlayer(\"background\"),\r\n\t\tstay(),\r\n\t\t{\r\n\t\t\tspeed: 0.1,\r\n\t\t\tmovAngle: 5,\r\n\t\t\tuScale: 2,\r\n\t\t\tcol1D: rgb(128, 128, 128),\r\n\t\t\tcol2D: rgb(190, 190, 190),\r\n\t\t\tupdate() {\r\n\t\t\t\tif (getSceneName() != \"gamescene\") return\r\n\t\t\t\tif (!isWindowUnlocked(\"bgColorWin\")) return\r\n\r\n\t\t\t\tif (isMousePressed(\"right\")) {\r\n\t\t\t\t\t// doesn't check for hovering this because you will always be hovering it lol\r\n\t\t\t\t\tif (!hexagon?.isHovering() && !get(\"folderObj\")[0]?.isHovering() && !get(\"minibutton\")[0]?.isHovering() && !get(\"window\")[0]?.isHovering() && !allObjWindows.isDraggingAWindow) {\r\n\t\t\t\t\t\tmanageWindow(\"bgColorWin\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\tgameBg.color.a = GameState.settings.bgColor.a\r\n\r\n\tgameBg.use(shader(\"checkeredBg\", () => ({\r\n\t\t\"u_time\": time() / 10,\r\n\t\t\"u_color1\": blendColors(gameBg.col1D, gameBg.color, gameBg.color.a),\r\n\t\t\"u_color2\": blendColors(gameBg.col2D, gameBg.color, gameBg.color.a),\r\n\t\t\"u_speed\": vec2(-1, 2).scale(gameBg.speed),\r\n\t\t\"u_angle\": gameBg.movAngle,\r\n\t\t\"u_scale\": gameBg.uScale,\r\n\t\t\"u_aspect\": width() / height()\r\n\t})))\r\n}\r\n\r\nexport let mouse:any;\r\nexport function addMouse() {\r\n\tmouse = add([\r\n\t\tsprite(\"cursors\"),\r\n\t\tpos(mousePos()),\r\n\t\tcolor(WHITE),\r\n\t\tstay(),\r\n\t\tanchor(vec2(-0.5, -0.65)),\r\n\t\tfixed(),\r\n\t\tlayer(\"mouse\"),\r\n\t\tz(0),\r\n\t\t{\r\n\t\t\tintro: false,\r\n\t\t\tspeed: 5000, // 5000 is the optimal for actual mouse movement\r\n\t\t\tgrabbing: false,\r\n\t\t\tgrab() {\r\n\t\t\t\tthis.grabbing = true\r\n\t\t\t\tmouse.play(\"grab\")\r\n\t\t\t},\r\n\r\n\t\t\treleaseAndPlay(newAnim:string) {\r\n\t\t\t\tthis.grabbing = false\r\n\t\t\t\tmouse.play(newAnim)\r\n\t\t\t},\r\n\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.pos = mousePos()\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n} \r\n\r\nlet maxLogs = 100;\r\nexport let toastQueue = [];\r\nconst initialYPosition = 50;\r\n\r\nexport type toastOpts = {\r\n\ttitle: string,\r\n\tbody: string,\r\n\ticon: string,\r\n\tduration?: number,\r\n\ttype?: string,\r\n}\r\n\r\nexport function addToast(opts:toastOpts) {\r\n\tfunction actuallyAddToast(idx, opt) {\r\n\t\tlet logs = get(\"toast\", { recursive: true });\r\n\t\tlet yOffset = initialYPosition;\r\n\t\tfor (let i = 0; i < idx; i++) {\r\n\t\t\tyOffset += logs[i].height + 10; // Add spacing between logs\r\n\t\t}\r\n\r\n\t\tlet toastBg = add([\r\n\t\t\trect(0, 0, { radius: [0, 10, 10, 0] as any }),\r\n\t\t\tpos(-200, yOffset),\r\n\t\t\tanchor(\"top\"),\r\n\t\t\tcolor(WHITE.darken(50)),\r\n\t\t\tfixed(),\r\n\t\t\tlayer(\"logs\"),\r\n\t\t\tz(0),\r\n\t\t\ttimer(),\r\n\t\t\t\"toast\",\r\n\t\t\t{\r\n\t\t\t\tindex: idx,\r\n\t\t\t\ttype: opts.type,\r\n\t\t\t\tadd() {\r\n\t\t\t\t\tif (this.type == \"achievement\") {\r\n\t\t\t\t\t\tplaySfx(\"unlockachievement\", { detune: this.index * 100 })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if (this.type == \"gamesaved\") {\r\n\t\t\t\t\t\tplaySfx(\"gamesaved\", { detune: rand(0, 30) })\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tclose() {\r\n\t\t\t\t\twait(0.7).onEnd(() => this.trigger(\"closed\"))\r\n\t\t\t\t\ttween(toastBg.pos.x, -toastBg.width, 0.8, (p) => toastBg.pos.x = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\t\t\t// updateLogPositions();\r\n\t\t\t\t\t\tdestroy(toastBg);\r\n\t\t\t\t\t\tprocessQueue();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t]);\r\n\r\n\t\tlet drawToastShadow = onDraw(() => {\r\n\t\t\tdrawRect({\r\n\t\t\t\tpos: vec2(toastBg.pos.x, toastBg.pos.y + 5),\r\n\t\t\t\twidth: toastBg.width,\r\n\t\t\t\tanchor: toastBg.anchor,\r\n\t\t\t\theight: toastBg.height,\r\n\t\t\t\tradius: toastBg.radius,\r\n\t\t\t\topacity: 0.5,\r\n\t\t\t\tfixed: true,\r\n\t\t\t\tcolor: BLACK,\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\ttoastBg.height = opts.icon ? 80 : 100;\r\n\r\n\t\tlet icon = add([\r\n\t\t\tsprite(\"white_noise\"),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tpos(toastBg.pos.x - toastBg.width / 2 + 50, toastBg.pos.y),\r\n\t\t\tfixed(),\r\n\t\t\tlayer(\"logs\"),\r\n\t\t\tz(toastBg.z + 1),\r\n\t\t\t{\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tthis.pos.x = toastBg.pos.x - toastBg.width / 2 + 50;\r\n\t\t\t\t\tthis.pos.y = toastBg.pos.y + toastBg.height / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]);\r\n\r\n\t\tparseAnimation(icon, opts.icon)\r\n\r\n\t\ticon.width = 60;\r\n\t\ticon.height = 60;\r\n\r\n\t\tlet titleText = add([\r\n\t\t\ttext(opts.title, {\r\n\t\t\t\tfont: \"lambda\",\r\n\t\t\t\tsize: 40,\r\n\t\t\t\talign: \"left\",\r\n\t\t\t\twidth: 500,\r\n\t\t\t}),\r\n\t\t\tpos(icon.pos.x + icon.width / 2 + 10, toastBg.pos.y - toastBg.height / 2),\r\n\t\t\tfixed(),\r\n\t\t\tcolor(BLACK),\r\n\t\t\tlayer(\"logs\"),\r\n\t\t\tz(toastBg.z + 1),\r\n\t\t\t{\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tthis.pos.x = icon.pos.x + icon.width / 2 + 10;\r\n\t\t\t\t\tthis.pos.y = toastBg.pos.y + 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]);\r\n\r\n\t\tlet bodyText = add([\r\n\t\t\ttext(opts.body, {\r\n\t\t\t\tfont: \"lambda\",\r\n\t\t\t\tsize: 20,\r\n\t\t\t\talign: \"left\",\r\n\t\t\t\twidth: 500,\r\n\t\t\t}),\r\n\t\t\tpos(titleText.pos.x, titleText.pos.y + titleText.height),\r\n\t\t\tfixed(),\r\n\t\t\tcolor(BLACK),\r\n\t\t\tlayer(\"logs\"),\r\n\t\t\tz(toastBg.z + 1),\r\n\t\t\t{\r\n\t\t\t\tupdate() {\r\n\t\t\t\t\tthis.pos.x = titleText.pos.x;\r\n\t\t\t\t\tthis.pos.y = titleText.pos.y + titleText.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]);\r\n\r\n\t\ttoastBg.width = icon.width + 20;\r\n\t\ttoastBg.height = icon.height + 20;\r\n\r\n\t\tlet titleTextWidth = formatText({ text: titleText.text, size: titleText.textSize }).width\r\n\t\tlet bodyTextWidth = formatText({ text: bodyText.text, size: bodyText.textSize }).width\r\n\r\n\t\ttitleTextWidth = clamp(titleTextWidth, 0, 500)\r\n\t\tbodyTextWidth = clamp(bodyTextWidth, 0, 500)\r\n\r\n\t\tif (titleTextWidth > bodyTextWidth) toastBg.width += titleTextWidth + 25;\r\n\t\telse if (bodyTextWidth > titleTextWidth) toastBg.width += bodyTextWidth + 25;\r\n\r\n\t\t// height\r\n\t\tif (titleText.height > bodyText.height) toastBg.height = titleText.height + bodyText.height + 15;\r\n\t\telse toastBg.height += bodyText.height - titleText.height + 15;\r\n\r\n\t\ttween(-toastBg.width, toastBg.width / 2, 0.5, (p) => toastBg.pos.x = p, easings.easeOutQuint);\r\n\r\n\t\ttoastBg.wait(opts.duration ?? 3, () => {\r\n\t\t\ttoastBg.close();\r\n\t\t});\r\n\r\n\t\ttoastBg.onDestroy(() => {\r\n\t\t\tdrawToastShadow.cancel();\r\n\t\t\ticon.destroy()\r\n\t\t\ttitleText.destroy();\r\n\t\t\tbodyText.destroy();\r\n\t\t});\r\n\r\n\t\tif (toastBg.type == \"save\") playSfx(\"gamesaved\")\r\n\t\telse if (toastBg.type == \"achievement\" || toastBg.type == \"window\") playSfx(\"unlockachievement\", { detune: toastBg.index * 100 })\r\n\t\r\n\t\treturn toastBg;\r\n\t}\r\n\r\n\tlet toastObj:any;\r\n\r\n\tfunction processQueue() {\r\n\t\tlet logs = get(\"toast\", { recursive: true });\r\n\t\tlet totalHeight = logs.reduce((sum, log) => sum + log.height + 10, 0); // Calculate total height of logs\r\n\r\n\t\tmaxLogs = Math.floor(height() / totalHeight); // Update maxLogs based on total height\r\n\r\n\t\twhile (toastQueue.length > 0 && logs.length < maxLogs) {\r\n\t\t\tlet nextToast = toastQueue.shift();\r\n\t\t\tlet availableIndex = getAvailableIndex(logs);\r\n\t\t\tif (availableIndex !== -1) {\r\n\t\t\t\ttoastObj = actuallyAddToast(availableIndex, nextToast);\r\n\t\t\t\tlogs = get(\"toast\", { recursive: true }); // update logs after adding a toast\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getAvailableIndex(logs) {\r\n\t\tlet occupiedIndices = logs.map(log => log.index);\r\n\t\tfor (let i = 0; i < maxLogs; i++) {\r\n\t\t\tif (!occupiedIndices.includes(i)) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tlet logs = get(\"toast\", { recursive: true }); // Update logs\r\n\r\n\tif (logs.length >= maxLogs) {\r\n\t\ttoastQueue.push(opts);\r\n\t} \r\n\t\r\n\telse {\r\n\t\tlet availableIndex = getAvailableIndex(logs);\r\n\t\tif (availableIndex !== -1) {\r\n\t\t\ttoastObj = actuallyAddToast(availableIndex, opts);\r\n\t\t}\r\n\t}\r\n\r\n\tprocessQueue(); // Ensure the queue is processed if there are available slots\r\n\r\n\treturn toastObj;\r\n}\r\n\r\ntype tooltipOpts = {\r\n\ttext:string;\r\n\tdirection?: \"up\" | \"down\" | \"left\" | \"right\",\r\n\t/**\r\n\t * How \"closely\" will the tooltip follow the object, from 0 to 1\r\n\t */\r\n\tlerpValue?:number,\r\n\ttextSize?:number,\r\n\ttype?:string,\r\n\tlayer?:string,\r\n\tz?:number,\r\n}\r\n\r\n/**\r\n * Adds a tooltip to an object and pushes itself to a tooltips array\r\n * @returns An object that contains the bg, text and an end() function \r\n */\r\nexport function addTooltip(obj:GameObj, opts?:tooltipOpts) {\r\n\tif (opts == undefined) opts = {} as tooltipOpts \r\n\topts.direction = opts.direction ?? \"up\";\r\n\topts.lerpValue = opts.lerpValue ?? 1;\r\n\topts.textSize = opts.textSize ?? 20;\r\n\r\n\topts.layer = opts.layer ?? \"windows\"\r\n\topts.z = opts.z ?? 0\r\n\r\n\tlet sizeOfText = { x: 0, y: 0 };\r\n\r\n\tlet offset = 10\r\n\tlet bgPos = vec2(obj.worldPos().x, obj.worldPos().y)\r\n\tlet padding = 10;\r\n\r\n\tlet tooltipBg = add([\r\n\t\trect(sizeOfText.x, sizeOfText.y, { radius: 5 }),\r\n\t\tz(0),\r\n\t\tpos(obj.worldPos()),\r\n\t\tcolor(BLACK),\r\n\t\topacity(0.95),\r\n\t\topacity(),\r\n\t\tanchor(\"center\"),\r\n\t\tlayer(opts.layer),\r\n\t\tz(opts.z),\r\n\t\t\"tooltip\",\r\n\t\t{\r\n\t\t\tend: null,\r\n\t\t\ttype: opts.type,\r\n\t\t\tupdate() {\r\n\t\t\t\tswitch (opts.direction) {\r\n\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\tbgPos.y = (obj.worldPos().y - obj.height / 2) - offset\r\n\t\t\t\t\t\tbgPos.x = obj.worldPos().x\r\n\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\tbgPos.y = (obj.worldPos().y + obj.height / 2) + offset\r\n\t\t\t\t\t\tbgPos.x = obj.worldPos().x\r\n\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tthis.anchor = \"right\"\t\r\n\t\t\t\t\t\tbgPos.x = (obj.worldPos().x - obj.width / 2) - offset\r\n\t\t\t\t\t\tbgPos.y = obj.worldPos().y\r\n\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis.anchor = \"left\"\t\r\n\t\t\t\t\t\tbgPos.x = (obj.worldPos().x + obj.width / 2) + offset\r\n\t\t\t\t\t\tbgPos.y = obj.worldPos().y\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.width = lerp(this.width, sizeOfText.x + padding, opts.lerpValue)\r\n\t\t\t\tthis.height = lerp(this.height, sizeOfText.y + padding, opts.lerpValue)\r\n\r\n\t\t\t\tthis.pos.x = lerp(this.pos.x, bgPos.x, opts.lerpValue)\r\n\t\t\t\tthis.pos.y = lerp(this.pos.y, bgPos.y, opts.lerpValue)\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\tlet tooltipText = add([\r\n\t\ttext(opts.text, {\r\n\t\t\tfont: \"lambda\",\r\n\t\t\tsize: opts.textSize,\r\n\t\t\tstyles: {\r\n\t\t\t\t\"red\": {\r\n\t\t\t\t\tcolor: RED,\r\n\t\t\t\t},\r\n\t\t\t\t\"green\": {\r\n\t\t\t\t\tcolor: GREEN,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tcolor(WHITE),\r\n\t\tanchor(tooltipBg.anchor),\r\n\t\topacity(),\r\n\t\tpos(tooltipBg.pos),\r\n\t\tlayer(opts.layer),\r\n\t\tz(opts.z + 1),\r\n\t\t\"tooltip\",\r\n\t\t{\r\n\t\t\tbg: tooltipBg,\r\n\t\t\tupdate() {\r\n\t\t\t\tsizeOfText.x = formatText({ text: tooltipText.text, size: tooltipText.textSize }).width\r\n\t\t\t\tsizeOfText.y = formatText({ text: tooltipText.text, size: tooltipText.textSize }).height\r\n\t\t\t\r\n\t\t\t\tthis.anchor = tooltipBg.anchor\r\n\t\t\t\tthis.layer = tooltipBg.layer\r\n\t\t\t\tthis.z = tooltipBg.z\r\n\t\t\t\tlet xPos:number;\r\n\r\n\t\t\t\tif (opts.direction == \"right\") xPos = tooltipBg.pos.x + padding / 2\r\n\t\t\t\telse if (opts.direction == \"left\") xPos = tooltipBg.pos.x - padding / 2\r\n\t\t\t\telse xPos = tooltipBg.pos.x\r\n\r\n\t\t\t\tthis.pos.x = xPos\r\n\t\t\t\tthis.pos.y = tooltipBg.pos.y\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet tooltipinfo = { tooltipBg, tooltipText, end, type: opts.type }\r\n\tif (obj.tooltip == null) obj.tooltip = tooltipinfo\r\n\t\r\n\tfunction end() {\r\n\t\tdestroy(tooltipBg)\r\n\t\tdestroy(tooltipText)\r\n\r\n\t\tobj.tooltip = null\r\n\t}\r\n\r\n\tobj.onDestroy(() => {\r\n\t\tend()\r\n\t})\r\n\r\n\ttooltipBg.end = end\r\n\r\n\treturn tooltipinfo\r\n}\r\n", "import { Color, Vec2 } from \"kaplay\";\r\nimport { GameState, saveColor, scoreManager } from \"../gamestate\";\r\nimport { addToast, mouse } from \"./additives\";\r\nimport { autoLoopTime, cam, triggerGnome } from \"./gamescene\";\r\nimport { hexagon } from \"./hexagon\";\r\nimport { unlockAchievement } from \"./unlockables/achievements\";\r\nimport { openWindow } from \"./windows/windows-api/windowManaging\";\r\nimport { powerupTypes, spawnPowerup } from \"./powerups\";\r\n\r\n// definetely not stack overflow\r\n// dots are always for thousands, leave it like this\r\nexport function formatNumberSimple(value:number) {\r\n\tlet integerStr = value.toString()\r\n\tvar len = integerStr.length;\r\n\tvar formatted = \"\";\r\n\t\r\n\tvar breakpoint = (len-1) % 3; // after which index to place the dot\r\n\t\r\n\tfor(let i = 0; i < len; i++){\r\n\t\tformatted += integerStr.charAt(i);\r\n\t\tif(i % 3 === breakpoint){\r\n\t\tif(i < len-1) // don't add dot for last digit\r\n\t\t\tformatted += \".\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn formatted;\r\n}\r\n\r\n// candy&Carmel helped here, pretty genius stuff!!!!\r\ntype formatNumberOpts = {\r\n\tfixAmount?:number,\r\n\tprice?:boolean,\r\n\tfullWord?:boolean,\r\n}\r\n\r\nlet numTypes = {\r\n\tn: { small: \"\", large: \"\" }, // just for offset apparently\r\n\tK: { small: \"K\", large: \"Thousands\" },\r\n\tM: { small: \"M\", large: \"Millions\" },\r\n\tB: { small: \"B\", large: \"Billions\" },\r\n\tT: { small: \"T\", large: \"Trillions\" },\r\n\tQa: { small: \"Qa\", large: \"Quadrillions\" },\r\n\tQt: { small: \"Qi\", large: \"Quintillions\" },\r\n\tSt: { small: \"Sx\", large: \"Sextillions\" },\r\n\tSp: { small: \"Sp\", large: \"Septillions\" },\r\n\tOc: { small: \"Oc\", large: \"Octillions\" },\r\n\tNn: { small: \"No\", large: \"Nonillions\" },\r\n\tDc: { small: \"Dc\", large: \"Decillions\" },\r\n\tUn: { small: \"Und\", large: \"Undecillions\" },\r\n\tDu: { small: \"DoD\", large: \"Duodecillions\" },\r\n\tTe: { small: \"TrD\", large: \"Tredecillions\" },\r\n\tQd: { small: \"QaD\", large: \"Quattuordecillion\" },\r\n\tQu: { small: \"QiD\", large: \"Quindecillions\" },\r\n\tSd: { small: \"SxD\", large: \"Sexdecillions\" },\r\n\tSu: { small: \"SpD\", large: \"Septemdecillion\" },\r\n\tOe: { small: \"OcD\", large: \"Octodecillion\" },\r\n\tNo: { small: \"NoD\", large: \"Novemdecillion\" },\r\n\tVe: { small: \"VgT\", large: \"Vigintillion\" },\r\n}\r\n\r\n// do check for decimals here\r\nexport function formatNumber(value:number, opts?:formatNumberOpts):string {\r\n\tif (opts == undefined) opts = {} as formatNumberOpts \r\n\topts.price = opts.price ?? false\r\n\topts.fullWord = opts.fullWord ?? false\r\n\t\r\n\tif (opts.price && !opts.fixAmount) opts.fixAmount = 1\r\n\telse opts.fixAmount = opts.fixAmount ?? 3\r\n\r\n\tlet returnValue = \"\"\r\n\r\n\tif (value < 1000) {\r\n\t\treturnValue = value.toString();\r\n\t}\r\n\r\n\t// if number is inside the limits (will always try to be)\r\n\telse if (value < Math.pow(1000, Object.keys(numTypes).length) && value > 999) {\r\n\t\t// run until it finds the numType\r\n\t\tfor (let i = 1; value >= Math.pow(1000, i); i++) {\r\n\t\t\t// turn it into a smaller version\r\n\t\t\tlet numberValue = (value / Math.pow(1000, i)).toFixed(opts.fixAmount) \r\n\t\t\tlet suffix = (opts.fullWord == true ? \" \" : \"\") + numTypes[Object.keys(numTypes)[i]][opts.fullWord == true ? \"large\" : \"small\"];\r\n\t\t\treturnValue = numberValue + suffix\r\n\t\t}\r\n\t}\r\n\r\n\t// very big number\r\n\telse {\r\n\t\treturnValue = value.toExponential(2);\r\n\t}\r\n\r\n\tif (opts.price == true) returnValue = returnValue.replace (/^/,'$');\r\n\tif (GameState.settings.commaInsteadOfDot == true) returnValue = returnValue.replaceAll(\".\", \",\");\r\n\r\n\treturn returnValue\r\n}\r\n\r\nexport function arrToVec(arr:Array<number>): Vec2 {\r\n\tlet vector = vec2(arr[0], arr[1])\r\n\treturn vector;\r\n}\r\n\r\nexport function coolSetFullscreen(bool:boolean) {\r\n\tlet kanvas = document.querySelector(\"#kanva\")\r\n\r\n\tif (bool == true) {\r\n\t\tkanvas.requestFullscreen()\r\n\t}\r\n\r\n\telse if (bool == false) kanvas\r\n}\r\n\r\n// 3 columns means 3 objects laid horizontally, 3 rows is 3 objects laid vertically\r\n// from top to bottom\r\n//   ccc\r\n//  r...\r\n//  r...\r\n/**\r\n * Function to get the position of an object in a grid, it works like this:\r\n * Row 0 and Column 0 mean initialPos btw\r\n * @param initialpos It's the initial pos the objects will be at, column 0 and row 0 means this exact position\r\n * @param row These are objects displayed vertically, the greater it is the more to the bottom they'll be\r\n * @param column These are objects displayed horizontally, the greater then column the more to the right \r\n * @param spacing It's the spacing objects will have, if you set Y spacing to 0, the objects won't be more apart when changing the row  \r\n * @returns A Vec2 with the position of the object\r\n */\r\nexport function getPosInGrid(initialpos:Vec2, row:number, column:number, spacing:Vec2) {\r\n\treturn vec2(initialpos.x + spacing.x * (column), initialpos.y + spacing.y * (row));\r\n}\r\n\r\n/**\r\n * Formats time\r\n * @param time Time in seconds\r\n * @param opts Options for formatting\r\n */\r\nexport function formatTime(time:number, includeWords:boolean) {\r\n\tfunction toHHMMSS(timeInSeconds:number) {\r\n\t\tconst hours = Math.floor(timeInSeconds / 3600);\r\n\t\tconst minutes = Math.floor((timeInSeconds % 3600) / 60);\r\n\t\tconst seconds = Math.floor(timeInSeconds % 60);\r\n\t\r\n\t\tconst formattedHours = hours > 0 ? `${hours}:` : '';\r\n\t\tconst formattedMinutes = hours > 0 ? `${minutes < 10 ? '0' + minutes : minutes}` : minutes;\r\n\t\tconst formattedSeconds = seconds < 10 ? '0' + seconds : seconds;\r\n\t\r\n\t\treturn `${formattedHours}${formattedMinutes}:${formattedSeconds}`;\r\n\t}\r\n\t\r\n\tlet returnValue = toHHMMSS(time);\r\n\r\n\tif (includeWords == true) {\r\n\t\t// an hour is 3600 seconds\r\n\t\tlet timeName = \"\";\r\n\t\t\r\n\t\tif (time > 3600) {\r\n\t\t\tif (time < 3600 * 2) timeName = \"hour\"\r\n\t\t\telse timeName = \"hours\"\r\n\t\t}\r\n\t\t\r\n\t\t// minutes\r\n\t\telse if (time > 60) {\r\n\t\t\tif (time < 120) timeName = \"min\"\r\n\t\t\telse timeName = \"mins\"\r\n\t\t}\r\n\t\t\r\n\t\t// seconds\r\n\t\telse if (time > 0) {\r\n\t\t\tif (time < 2) timeName = \"sec\"\r\n\t\t\telse timeName = \"secs\"\r\n\t\t}\r\n\t\r\n\t\treturnValue = `${returnValue} ${timeName}`\r\n\t}\r\n\r\n\treturn returnValue;\r\n}\r\n\r\n/**\r\n * @param percentageOf is the percentage you want\r\n * @param number is the number you're taking the percentage of\r\n * @returns % of number\r\n */\r\nexport function percentage(percentageOf:number, number:number) {\r\n\treturn Math.round((percentageOf * number) / 100)\r\n}\r\n\r\ntype getPriceOpts = {\r\n\tbasePrice:number,\r\n\tpercentageIncrease:number,\r\n\tobjectAmount:number,\r\n\tamountToBuy?:number,\r\n\tgifted?:number,\r\n}\r\n\r\nexport function getPrice(opts:getPriceOpts) {\r\n    opts.amountToBuy = opts.amountToBuy ?? 1\r\n\topts.gifted = opts.gifted ?? 0\r\n\t\r\n\tlet percentageMultiplier = (1 + opts.percentageIncrease / 100)\r\n\tlet priceToReturn = 0;\r\n\r\n    for (let i = 0; i < opts.amountToBuy; i++) {\r\n\t\t// OLD FORMULA\r\n\t\t// let currentPrice = opts.basePrice * Math.pow(percentageMultiplier, opts.objectAmount + i);\r\n        // priceToReturn += Math.round(currentPrice);\r\n\t\t\r\n\t\tlet currentPrice = opts.basePrice * percentageMultiplier ** ((opts.objectAmount + i) - opts.gifted)\r\n\t\tpriceToReturn += Math.round(currentPrice);\r\n\t}\r\n\r\n    return priceToReturn;\r\n}\r\n\r\nexport function getCompletedAchievementPercentage(unlockeds, total) {\r\n\treturn Math.round((unlockeds * 100) / total)\r\n}\r\n\r\nexport function getRandomElementDifferentFrom(arr, element) {\r\n    // Step 1: Filter the array to exclude the specified element\r\n    const filteredArray = arr.filter(item => item !== element);\r\n\r\n    // Step 2: Select a random element from the filtered array\r\n    if (filteredArray.length === 0) {\r\n        throw new Error('No different elements available');\r\n    }\r\n    const randomIndex = Math.floor(Math.random() * filteredArray.length);\r\n    return filteredArray[randomIndex];\r\n}\r\n\r\n/**\r\n * Inserts a string at the start of another \r\n * @param str The string of which the start wants to be inserted\r\n * @param replacement The string that will be inserted\r\n * @returns The result\r\n */\r\nexport function insertAtStart(str:string, replacement:string) {\r\n\treturn str.replace(/^/,`${replacement}`);\r\n}\r\n\r\nexport function getZBetween(a, b) {\r\n\treturn Math.floor(a + b / 2)\r\n}\r\n\r\nexport function blendColors(color1:Color, color2:Color, blendFactor:number) {\r\n    return color1.lerp(color2, blendFactor);\r\n}\r\n\r\nexport function saveColorToColor(color:saveColor) {\r\n\treturn rgb(color.r, color.g, color.b)\r\n}\r\n\r\nexport function getPositionOfSide(obj) {\r\n\treturn {\r\n\t\tget left() {\r\n\t\t  return obj.pos.x - obj.width * 0.5 \r\n\t\t},\r\n\t\tget right() {\r\n\t\t  return obj.pos.x + obj.width * 0.5 \r\n\t\t},\r\n\t\tget top() {\r\n\t\t  return obj.pos.y - obj.height * 0.5 \r\n\t\t},\r\n\t\tget bottom() {\r\n\t\t  return obj.pos.y + obj.height * 0.5 \r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * This function gets the position an object would if it went in a random direction\r\n * @param initialPos The initial pos the obj was in\r\n * @param onlyCardinal Wheter to only move on the cardinals, if it's false it will also go diagonal\r\n * @param mult How far it would go\r\n * @returns vec2() of the object in that position\r\n */\r\nexport function getRandomDirection(initialPos:Vec2, onlyCardinal:boolean, mult:number) {\r\n\tonlyCardinal = onlyCardinal || false\r\n\r\n\tlet directions = {\r\n\t\t\"left\": LEFT,\r\n\t\t\"right\": RIGHT,\r\n\t\t\"top\": UP,\r\n\t\t\"bot\": DOWN,\r\n\t}\r\n\r\n\tif (onlyCardinal == false) {\r\n\t\tdirections[\"botleft\"] = vec2(-1, 1)\r\n\t\tdirections[\"topleft\"] = vec2(-1, -1)\r\n\r\n\t\tdirections[\"botright\"] = vec2(1, 1)\r\n\t\tdirections[\"botleft\"] = vec2(1, -1)\r\n\t}\r\n\r\n\tlet direction = choose(Object.values(directions))\r\n\tdirection = direction.scale(mult)\r\n\t\r\n\tlet newPos = vec2()\r\n\tnewPos.x = initialPos.x + direction.x * mult\r\n\tnewPos.y = initialPos.y + direction.y * mult\r\n\r\n\treturn newPos\r\n}\r\n\r\nexport function parseAnimation(obj, anim) {\r\n\tlet spriteName = !anim.includes(\".\") ? anim : [anim.split(\".\")[0], anim.split(\".\")[1]];\r\n\tobj.unuse(\"sprite\")\r\n\tobj.use(sprite(typeof spriteName == \"string\" ? spriteName : spriteName[0]))\r\n\tif (typeof spriteName == \"string\") return; \r\n\tif (spriteName[1] && typeof spriteName != \"string\") obj.play(spriteName[1]);\r\n}\r\n\r\nexport function getVariable(obj, path) {\r\n\tconst parts = path.split(\".\")\r\n\tconst target = parts.slice(0, -1).reduce((o, p) => o[p], obj)\r\n\treturn target[parts[parts.length-1]]\r\n}\r\n\r\nexport function setVariable(obj, path, value) {\r\n\tconst parts = path.split(\".\")\r\n\tconst target = parts.slice(0, -1).reduce((o, p) => o[p], obj)\r\n\ttarget[parts[parts.length-1]] = value\r\n}\r\n\r\nexport function saveAnim() {\r\n\taddToast({ icon: \"floppy\", title: \"Game saved!\", body: `Time played: ${formatTime(GameState.stats.totalTimePlayed, true)}`, type: \"gamesaved\" })\r\n}\r\n\r\nexport function randomPos() {\r\n\treturn vec2(rand(0, width()), rand(0, height()))\r\n}\r\n\r\nexport function bop(obj:any, howMuch = 0.1, bopEasing = easings.easeOutQuint) {\r\n\tif (!obj.is(\"scale\")) throw new Error(\"Obj must have scale component\")\r\n\tif (obj.bopDefScale == null) obj.bopDefScale = obj.scale\r\n\r\n\ttween(obj.scale, obj.bopDefScale.sub(howMuch), 0.15, (p) => obj.scale = p, bopEasing).then(() => {\r\n\t\ttween(obj.scale, obj.bopDefScale, 0.15, (p) => obj.scale = p, bopEasing)\r\n\t})\r\n}\r\n\r\nexport function shrink(obj) {\r\n\tif (!obj.is(\"scale\")) obj.use(scale(1))\r\n\tif (!obj.shrinkDefScale) obj.shrinkDefScale = obj.scale\r\n\t\r\n\ttween(obj.scale, obj.scale.sub(obj.scale), 0.15, (p) => obj.scale = p, easings.easeOutQuint)\r\n}\r\n\r\nexport function debugTexts() {\r\n\tlet keys = {}\r\n\r\n\tfunction createKeys() {\r\n\t\tlet text = Object.keys(keys).map((key) => `${key} ${keys[key]}`).join(\"\\n\")\r\n\t\treturn text\r\n\t}\r\n\r\n\tadd([\r\n\t\ttext(\"DEBUG\", { size: 18 }),\r\n\t\tanchor(\"botleft\"),\r\n\t\topacity(0.25),\r\n\t\tpos(0, height()),\r\n\t\tfixed(),\r\n\t\tlayer(\"mouse\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = \"DEBUG\" + ` ${debug.fps()}`\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet debugTexts = add([\r\n\t\ttext(\"\", {\r\n\t\t\tsize: 18\r\n\t\t}),\r\n\t\tcolor(WHITE),\r\n\t\topacity(0.25),\r\n\t\tanchor(\"topleft\"),\r\n\t\tlayer(\"mouse\"),\r\n\t\tfixed(),\r\n\t\tpos(),\r\n\t\tz(mouse.z + 1),\r\n\t\t\"debugText\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (isKeyPressed(\"tab\")) this.hidden = !this.hidden\r\n\r\n\t\t\t\tkeys = {\r\n\t\t\t\t\t\"Auto loop time: \": autoLoopTime.toFixed(2),\r\n\t\t\t\t\t\"Time until auto loop ends: \": GameState.timeUntilAutoLoopEnds,\r\n\t\t\t\t\t\"Taskbar: \": GameState.taskbar,\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let powerup in powerupTypes) {\r\n\t\t\t\t\tkeys[`${powerup} running time :`] = powerupTypes[powerup].runningTime.toFixed(1)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.text = createKeys()\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tdebugTexts.hidden = true\r\n}\r\n\r\nexport function debugFunctions() {\r\n\tdebugTexts()\r\n\t\r\n\t// can modify gamestate from console\r\n\twindow.globalThis.GameState = GameState\r\n\twindow.globalThis.scoreManager = scoreManager\r\n\twindow.globalThis.unlockAchievement = unlockAchievement\r\n\twindow.globalThis.spawnPowerup = spawnPowerup\r\n\twindow.globalThis.hexagon = hexagon\r\n\twindow.globalThis.openWindow = openWindow\r\n\twindow.globalThis.powerupsTypes = powerupTypes\r\n\t\r\n\tonUpdate(() => {\r\n\t\t// if (isKeyDown(\"control\")) {\r\n\t\tif (isKeyPressed(\"c\") && GameState.scoreAllTime > 25) GameState.save(true)\r\n\t\telse if (isKeyPressed(\"v\")) GameState.delete()\r\n\t\telse if (isKeyPressed(\"b\")) GameState.cheat()\r\n\t\t\r\n\t\t\telse if (isKeyPressed(\"w\")) {\r\n\t\t\thexagon.autoClick()\r\n\t\t}\r\n\t\t\r\n\t\telse if (isKeyDown(\"q\")) {\r\n\t\t\thexagon.clickPress()\r\n\t\t\twait(0.1, () => hexagon.clickRelease())\r\n\t\t}\r\n\t\r\n\t\telse if (isKeyPressed(\"f\")) {\r\n\t\t\tspawnPowerup({\r\n\t\t\t\ttype: \"random\",\r\n\t\t\t\tpos: mousePos(),\r\n\t\t\t\tnatural: true,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\telse if (isKeyPressed(\"h\")) {\r\n\t\t\ttriggerGnome()\r\n\t\t}\r\n\t})\r\n\r\n\t// #region debug stuff\r\n\tonScroll((delta)=>{\r\n\t\tif (isKeyDown(\"shift\")) cam.zoom = cam.zoom * (1 - 0.1 * Math.sign(delta.y)) \r\n\t})\r\n\r\n\tonMousePress(\"middle\", () => {\r\n\t\tif (isKeyDown(\"shift\")) cam.zoom = 1\r\n\t})\r\n}", "import { GameState, scoreManager } from \"../gamestate.ts\";\r\nimport { positionSetter } from \"./plugins/positionSetter.ts\";\r\nimport { waver } from \"./plugins/wave.js\";\r\nimport { clickVars } from \"./hexagon.ts\";\r\nimport { bop, formatNumber, getPositionOfSide, formatNumberSimple } from \"./utils.ts\";\r\nimport { allObjWindows } from \"./windows/windows-api/windowManaging.ts\";\r\n\r\nexport let scoreText:any;\r\nexport let spsText:any;\r\n\r\nexport let buildingsText:any;\r\n\r\nexport function uiCounters() {\r\n\tscoreText = add([\r\n\t\ttext(GameState.score.toString(), {\r\n\t\t\t// 46 width of char\r\n\t\t\tsize: 75,\r\n\t\t\tfont: \"lambdao\",\r\n\t\t}),\r\n\t\tanchor(\"center\"),\r\n\t\trotate(0),\r\n\t\tscale(1),\r\n\t\tlayer(\"ui\"),\r\n\t\topacity(1),\r\n\t\tpos(center().x, 60),\r\n\t\t\"scoreCounter\",\r\n\t\t{\r\n\t\t\tdefaultScale: 1,\r\n\t\t\tscaleIncrease: 1,\r\n\t\t\tscoreShown: 0,\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = `${formatNumber(Math.round(this.scoreShown))}` \r\n\t\t\t\tthis.angle = wave(-2.8, 2.8, time() * 1.25)\r\n\t\t\t\tthis.scale.x = wave(0.95 * this.scaleIncrease, 1.08 * this.scaleIncrease, time() * 1.15)\r\n\t\t\t\tthis.scale.y = wave(0.95 * this.scaleIncrease, 1.08 * this.scaleIncrease, time() * 1.15)\r\n\t\t\t\tthis.defaultScale = vec2(this.scale.x, this.scale.y)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tscoreText.on(\"startAnimEnd\", () => {\r\n\t\tscoreText.use(waver({ maxAmplitude: 5, wave_speed: 0.5 }))\t\t\r\n\t\tscoreText.startWave()\r\n\t\tscoreText.onUpdate(() => scoreText.scoreShown = GameState.score)\r\n\t})\r\n\r\n\tspsText = scoreText.add([\r\n\t\ttext(\"0.0/s\", {\r\n\t\t\tsize: 30,\r\n\t\t\tfont: \"lambdao\"\r\n\t\t}),\r\n\t\tscale(),\r\n\t\tanchor(\"center\"),\r\n\t\tarea(),\r\n\t\tlayer(\"ui\"),\r\n\t\topacity(1),\r\n\t\tpos(0, scoreText.pos.y - 14),\r\n\t\t\"scoreCounter\",\r\n\t\t// can't put text change here bc it would update to 0 each second\r\n\t\t{\r\n\t\t\tdefaultYPos: 49,\r\n\t\t\tbarYPos: 75,\r\n\t\t\tvalue: 0,\r\n\r\n\t\t\t// value is the raw (number) score per second (with time accounted for)\r\n\t\t\tformatSpsText(value:any) {\r\n\t\t\t\tlet textThing = \"/s\"\r\n\t\t\t\tswitch (GameState.settings.spsTextMode) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\ttextThing = \"/sec\"\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\ttextThing = \"/min\"\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\ttextThing = \"/hour\"\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\ttextThing = \"/sec\"\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet valueToReturn = formatNumber(Number(value.toFixed(2)), { fixAmount: 2 })\r\n\t\t\t\treturn valueToReturn + textThing\r\n\t\t\t},\r\n\t\t\tupdateValue() {\r\n\t\t\t\t// shoutout to Candy&Carmel\r\n\t\t\t\tlet multiplyValue = GameState.settings.spsTextMode ? Math.pow(60, GameState.settings.spsTextMode-1) : 1;\r\n\t\t\t\tthis.value = scoreManager.scorePerSecond() * multiplyValue\r\n\t\t\t},\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = this.formatSpsText(this.value, GameState.settings.spsTextMode)\r\n\t\t\t},\r\n\r\n\t\t\tclick() {\r\n\t\t\t\tif (allObjWindows.isHoveringAWindow == false) {\r\n\t\t\t\t\t// 1 second, 2 minute, 3 hour\r\n\t\t\t\t\tGameState.settings.spsTextMode++\r\n\t\t\t\t\tif (GameState.settings.spsTextMode > 3) GameState.settings.spsTextMode = 1\r\n\t\t\t\t\tthis.updateValue()\r\n\t\t\t\t\tbop(this, 0.05)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tspsText.onClick(() => {\r\n\t\tspsText.click()\r\n\t})\r\n\r\n\tlet buildingTextTextOpts = { size: 40, lineSpacing: 1.5, font: \"lambdao\" }\r\n\tbuildingsText = add([\r\n\t\ttext(`${formatNumberSimple(GameState.cursors)}<\\n${formatNumberSimple(GameState.clickers)}`, buildingTextTextOpts),\r\n\t\topacity(1),\r\n\t\tanchor(\"left\"),\r\n\t\tlayer(\"ui\"),\r\n\t\tpos(10, height() - 55),\r\n\t\twaver({ maxAmplitude: 8, wave_speed: 0.8 }),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.text = `${formatNumberSimple(GameState.cursors)}\\n${formatNumberSimple(GameState.clickers)}`\r\n\t\t\t},\r\n\r\n\t\t\tdraw() {\r\n\t\t\t\tlet clickersWidth = formatText({ text: `${formatNumberSimple(GameState.clickers)}`, ...buildingTextTextOpts }).width\t\r\n\t\t\t\tlet cursorsWidth = formatText({ text: `${formatNumberSimple(GameState.cursors)}`, ...buildingTextTextOpts }).width\t\r\n\t\t\t\t\r\n\t\t\t\t// clickers\r\n\t\t\t\tdrawSprite({\r\n\t\t\t\t\tsprite: \"cursors\",\r\n\t\t\t\t\tframe: 0,\r\n\t\t\t\t\tpos: vec2(this.pos.x + clickersWidth + 5, 28),\r\n\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\tscale: 0.75,\r\n\t\t\t\t\topacity: this.opacity * 0.9\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// cursors\r\n\t\t\t\tdrawSprite({\r\n\t\t\t\t\tsprite: \"cursors\",\r\n\t\t\t\t\tframe: 1,\r\n\t\t\t\t\tpos: vec2(this.pos.x + cursorsWidth + 5, -17),\r\n\t\t\t\t\tanchor: \"center\",\r\n\t\t\t\t\tscale: 0.75,\r\n\t\t\t\t\topacity: this.opacity * 0.9\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tbuildingsText.startWave()\r\n}\r\n", "import { Vec2 } from \"kaplay\";\r\nimport { playSfx } from \"../sound\"\r\nimport { cam } from \"./gamescene\"\r\nimport { COMBO_MINCLICKS, COMBO_MAX, COMBO_MAXCLICKS, clickVars } from \"./hexagon\"\r\nimport { scoreText, spsText } from \"./uicounters\";\r\nimport { blendColors, formatNumber, insertAtStart, randomPos } from \"./utils\";\r\nimport { spawnPowerup } from \"./powerups\";\r\nimport { GameState, scoreManager } from \"../gamestate\";\r\n\r\nexport function getClicksFromCombo(level:number) {\r\n\treturn Math.round(map(level, 2, COMBO_MAX, COMBO_MINCLICKS, COMBO_MAXCLICKS))\r\n}\r\n\r\nexport function getComboFromClicks(clicks:number) {\r\n\treturn Math.round(map(clicks, COMBO_MINCLICKS, COMBO_MAXCLICKS, 2, COMBO_MAX))\r\n}\r\n\r\nexport let comboBarContent;\r\nexport let maxContentWidth = 0\r\n\r\nexport function addComboBar() {\r\n\tlet targetPos = vec2(0, scoreText.height / 2 + scoreText.height / 4 - 6)\r\n\t\r\n\tlet barFrame = scoreText.add([\r\n\t\trect(scoreText.width, scoreText.height / 4, { fill: false, radius: 5 }),\r\n\t\tpos(targetPos.x, scoreText.y),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(1),\r\n\t\toutline(3.5, BLACK),\r\n\t\tz(scoreText.z - 1),\r\n\t\tlayer(\"ui\"),\r\n\t\tz(0),\r\n\t\t\"comboBar\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.width = lerp(this.width, scoreText.width, 0.25)\r\n\t\t\t\tmaxContentWidth = this.width\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tbarFrame.fadeIn(0.5)\r\n\ttween(barFrame.pos.y, targetPos.y, 0.5, (p) => barFrame.pos.y = p, easings.easeOutQuint)\r\n\r\n\tlet barFrameBg = scoreText.onDraw(() => {\r\n\t\tdrawRect({\r\n\t\t\tpos: barFrame.pos,\r\n\t\t\tanchor: barFrame.anchor,\r\n\t\t\twidth: barFrame.width,\r\n\t\t\theight: barFrame.height,\r\n\t\t\topacity: barFrame.opacity * 0.28,\r\n\t\t\tradius: 5,\r\n\t\t\tcolor: BLACK,\r\n\t\t})\r\n\t})\r\n\r\n\tbarFrame.onDestroy(() => {\r\n\t\tbarFrameBg.cancel()\r\n\t})\r\n\r\n\tcomboBarContent = scoreText.add([\r\n\t\trect(0, barFrame.height, { radius: 5 }),\r\n\t\tpos(-barFrame.width / 2, barFrame.pos.y),\r\n\t\tanchor(\"left\"),\r\n\t\tcolor(WHITE),\r\n\t\topacity(1),\r\n\t\tlayer(\"ui\"),\r\n\t\tz(barFrame.z - 1),\r\n\t\t\"comboBar\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (!clickVars.constantlyClicking) {\r\n\t\t\t\t\tif (clickVars.consecutiveClicks > 0) clickVars.consecutiveClicks -= 0.75\r\n\t\t\t\t\tscoreManager.combo = getComboFromClicks(clickVars.consecutiveClicks)\r\n\t\t\t\t\tif (this.width < maxContentWidth / 2) clickVars.maxedCombo = false\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tclickVars.consecutiveClicks = Math.round(clickVars.consecutiveClicks)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet mappedWidth = map(clickVars.consecutiveClicks, COMBO_MINCLICKS, COMBO_MAXCLICKS, 0, maxContentWidth)\r\n\t\t\t\tthis.width = lerp(this.width, mappedWidth, 0.25)\r\n\t\t\t\tthis.width = clamp(this.width, 0, maxContentWidth - 2)\r\n\t\t\t\t\r\n\t\t\t\t// # player \"gave up\"\r\n\t\t\t\tif (this.width == 0 && !clickVars.constantlyClicking && clickVars.comboDropped == false) {\r\n\t\t\t\t\tdropCombo()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet blendFactor = map(scoreManager.combo, 1, COMBO_MAX, 0, 1)\r\n\t\t\t\tthis.color = blendColors(\r\n\t\t\t\t\tWHITE,\r\n\t\t\t\t\thsl2rgb((time() * 0.2 * 0.1) % 1, 1.5, 0.8),\r\n\t\t\t\t\tblendFactor\r\n\t\t\t\t)\r\n\r\n\t\t\t\tthis.pos.x = barFrame.pos.x - barFrame.width / 2\r\n\t\t\t\tthis.pos.y = barFrame.pos.y\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\tcomboBarContent.fadeIn(0.25)\r\n\r\n\t// when combo starts the spsText y pos should change to accomodate it\r\n\ttween(spsText.pos.y, spsText.barYPos, 0.5, (p) => spsText.pos.y = p, easings.easeOutQuint)\r\n\r\n\treturn barFrame;\r\n}\r\n\r\ntype plusScoreOpts = {\r\n\tpos: Vec2,\r\n\tvalue:number,\r\n\tcursorRelated:boolean,\r\n}\r\nexport function addPlusScoreText(opts:plusScoreOpts) {\r\n\tlet size:number[];\r\n\tif (!opts.cursorRelated) size = [40, 50]\r\n\telse size = [32.5, 40]\r\n\tlet textBlendFactor = 0;\r\n\r\n\tlet plusScoreText = add([\r\n\t\ttext(\"\", {\r\n\t\t\tsize: rand(size[0], size[1]),\r\n\t\t\tfont: \"lambdao\",\r\n\t\t\tstyles: {\r\n\t\t\t\t\"small\": {\r\n\t\t\t\t\tscale: vec2(0.8),\r\n\t\t\t\t\tpos: vec2(0, 4)\r\n\t\t\t\t},\r\n\t\t\t\t\"combo\": (idx) => ({\r\n\t\t\t\t\tcolor: blendColors(\r\n\t\t\t\t\t\tWHITE,\r\n\t\t\t\t\t\thsl2rgb((time() * 0.2 + idx * 0.1) % 1, 0.7, 0.8),\r\n\t\t\t\t\t\ttextBlendFactor\r\n\t\t\t\t\t),\r\n\t\t\t\t\tpos: vec2(0, wave(-4, 4, time() * 6 + idx * 0.5)),\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}),\r\n\t\topacity(1),\r\n\t\tpos(opts.pos),\r\n\t\trotate(0),\r\n\t\tcolor(),\r\n\t\tanchor(\"center\"),\r\n\t\tlayer(\"ui\"),\r\n\t\t\"plusScoreText\",\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tif (opts.cursorRelated) return\r\n\t\t\t\ttextBlendFactor = map(scoreManager.combo, 1, COMBO_MAX, 0, 1)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tplusScoreText.text = `+${formatNumber(opts.value)}`\r\n\tif (scoreManager.combo > 1 && !opts.cursorRelated) {\r\n\t\tplusScoreText.text = insertAtStart(plusScoreText.text, \"[combo]\")\r\n\t\t// if (scoreManager.combo > 1) plusScoreText.text += `x${Math.floor(scoreManager.combo)}`\r\n\t\tplusScoreText.text += `[/combo]`;\r\n\t}\r\n\t\r\n\tplusScoreText.pos.x = opts.pos.x + 2\r\n\tplusScoreText.pos.y = opts.pos.y - 18\r\n\r\n\t// animate plusscoretext\r\n\ttween(\r\n\t\tplusScoreText.pos.y,\r\n\t\tplusScoreText.pos.y - 20,\r\n\t\t0.25,\r\n\t\t(p) => plusScoreText.pos.y = p,\r\n\t);\r\n\ttween(\r\n\t\t1,\r\n\t\t0,\r\n\t\t0.25,\r\n\t\t(p) => plusScoreText.opacity = p,\r\n\t);\r\n\r\n\twait(0.25, () => {\r\n\t\ttween(\r\n\t\t\tplusScoreText.opacity,\r\n\t\t\t0,\r\n\t\t\t0.25,\r\n\t\t\t(p) => plusScoreText.opacity = p,\r\n\t\t);\r\n\t});\r\n\t\r\n\twait(0.25, () => {\r\n\t\tdestroy(plusScoreText);\r\n\t});\r\n\r\n\tif (plusScoreText.pos.x > opts.pos.x) plusScoreText.anchor = \"left\"\r\n\telse plusScoreText.anchor = \"right\"\r\n\r\n\tif (scoreManager.combo > 1 && !opts.cursorRelated) {\r\n\t\t// let totalScore = plusScoreText.add([\r\n\t\t// \ttext(\"\", {\r\n\t\t// \t\tfont: \"lambdao\",\r\n\t\t// \t\tsize: plusScoreText.textSize * 0.8\r\n\t\t// \t}),\r\n\t\t// \tpos(plusScoreText.width / 2, plusScoreText.height - 2),\r\n\t\t// \tanchor(plusScoreText.anchor),\r\n\t\t// \topacity(),\r\n\t\t// \t{\r\n\t\t// \t\tupdate() {\r\n\t\t// \t\t\tthis.opacity = plusScoreText.opacity\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// ])\r\n\r\n\t\t// totalScore.text = `(${formatNumber(opts.value * scoreManager.combo, true, false)})`\r\n\t}\r\n\r\n\treturn plusScoreText;\r\n}\r\n\r\nexport function increaseComboText() {\r\n\tlet blendFactor = 0\r\n\tlet incComboText = add([\r\n\t\ttext(`[combo]x${scoreManager.combo}[/combo]`, {\r\n\t\t\tfont: \"lambdao\",\r\n\t\t\tsize: 48,\r\n\t\t\talign: \"center\",\r\n\t\t\tstyles: {\r\n\t\t\t\t\"combo\": (idx) => ({\r\n\t\t\t\t\tpos: vec2(0, wave(-4, 4, time() * 6 + idx * 0.5)),\r\n\t\t\t\t\tcolor: blendColors(\r\n\t\t\t\t\t\tWHITE,\r\n\t\t\t\t\t\thsl2rgb((time() * 0.2 + idx * 0.1) % 1, 0.7, 0.8),\r\n\t\t\t\t\t\tblendFactor\r\n\t\t\t\t\t),\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}),\r\n\t\tpos(mousePos().x, mousePos().y - 80),\r\n\t\tscale(),\r\n\t\topacity(),\r\n\t\tlayer(\"ui\"),\r\n\t\tcolor(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.pos.y -= 0.5\r\n\t\t\t\tblendFactor = map(scoreManager.combo, 0, COMBO_MAX, 0, 1)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet timeToDie = 2\r\n\ttween(0.5, 1, 0.1, (p) => incComboText.opacity = p, easings.easeOutQuint).onEnd(() => {\r\n\t\ttween(incComboText.opacity, 0, timeToDie, (p) => incComboText.opacity = p, easings.easeOutQuint)\r\n\t\twait(timeToDie, () => {\r\n\t\t\tdestroy(incComboText)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport function maxComboAnim() {\r\n\tlet blendFactor = 0\r\n\tlet words = [\"MAX COMBO\", \"MAX COMBO!!\", \"YOO-HOO!!!\", \"YEEEOUCH!!\", \"FINISH IT\"]\r\n\tlet maxComboText = add([\r\n\t\ttext(`[combo]${choose(words)}[/combo]`, {\r\n\t\t\tfont: \"lambdao\",\r\n\t\t\tsize: 55,\r\n\t\t\talign: \"center\",\r\n\t\t\tstyles: {\r\n\t\t\t\t\"combo\": (idx) => ({\r\n\t\t\t\t\tpos: vec2(0, wave(-4, 4, time() * 6 + idx * 0.5)),\r\n\t\t\t\t\tcolor: blendColors(\r\n\t\t\t\t\t\tWHITE,\r\n\t\t\t\t\t\thsl2rgb((time() * 0.2 + idx * 0.1) % 1, 0.7, 0.8),\r\n\t\t\t\t\t\tblendFactor\r\n\t\t\t\t\t),\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}),\r\n\t\tpos(vec2(mousePos().x, mousePos().y - 65)),\r\n\t\tlayer(\"ui\"),\r\n\t\tcolor(),\r\n\t\tscale(),\r\n\t\topacity(),\r\n\t\tanchor(\"center\"),\t\t\r\n\t\ttimer(),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.pos.y -= 1\r\n\r\n\t\t\t\tblendFactor = 1\r\n\t\t\t\t// if (time() % 0.25 > (0.1 / 2)) blendFactor = 1\r\n\t\t\t\t// else blendFactor = 0\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tlet timeToDie = 2\r\n\tmaxComboText.tween(vec2(0.5), vec2(1), 0.1, (p) => maxComboText.scale = p, easings.easeOutQuad)\r\n\tmaxComboText.tween(0.5, 1, 0.1, (p) => maxComboText.opacity = p, easings.easeOutQuint).onEnd(() => {\r\n\t\tmaxComboText.tween(maxComboText.opacity, 0, timeToDie, (p) => maxComboText.opacity = p, easings.easeOutQuint)\r\n\t\tmaxComboText.wait(timeToDie, () => {\r\n\t\t\tdestroy(maxComboText)\r\n\t\t})\r\n\t})\r\n\r\n\tif (GameState.hasUnlockedPowerups == true && chance(0.2)) {\r\n\t\tspawnPowerup({\r\n\t\t\ttype: \"awesome\",\r\n\t\t\tpos: randomPos(),\r\n\t\t\tnatural: true,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport function increaseCombo() {\r\n\tscoreManager.combo = getComboFromClicks(clickVars.consecutiveClicks)\r\n\tplaySfx(\"combo\", {detune: scoreManager.combo > 1 ? 100 * scoreManager.combo : 0 })\r\n\ttween(cam.zoom, 0.95, 0.25 / 2, (p) => cam.zoom = p, easings.easeOutQuint).onEnd(() => {\r\n\t\ttween(cam.zoom, 1, 0.25, (p) => cam.zoom = p, easings.easeOutQuint)\r\n\t})\r\n\tif (scoreManager.combo != COMBO_MAX) increaseComboText()\r\n}\r\n\r\nexport function startCombo() {\r\n\tincreaseCombo()\r\n\t\r\n\tclickVars.comboDropped = false\r\n\taddComboBar()\r\n\ttween(-10, 0, 0.5, (p) => cam.rotation = p, easings.easeOutQuint)\r\n}\r\n\r\nexport function dropCombo() {\r\n\tclickVars.comboDropped = true\r\n\tclickVars.consecutiveClicks = 0\r\n\tget(\"comboBar\", { recursive: true }).forEach(comboBar => {\r\n\t\tcomboBar.fadeOut(0.25).onEnd(() => {\r\n\t\t\tcomboBar.destroy()\r\n\t\t\ttween(spsText.pos.y, spsText.defaultYPos, 0.5, (p) => spsText.pos.y = p, easings.easeOutQuint)\r\n\t\t})\r\n\t})\r\n}", "\r\nimport { GameState, scoreManager } from \"../gamestate.ts\";\r\nimport { scoreText, spsText } from \"./uicounters.ts\";\r\nimport { blendColors, getRandomDirection, saveColorToColor } from \"./utils.ts\";\r\nimport { playSfx } from \"../sound.ts\";\r\nimport { manageWindow } from \"./windows/windows-api/windowManaging.ts\";\r\nimport { waver } from \"./plugins/wave.js\";\r\nimport { addPlusScoreText, getClicksFromCombo, increaseCombo, maxComboAnim, startCombo } from \"./combo-utils.ts\";\r\nimport { addConfetti } from \"./plugins/confetti.js\";\r\nimport { cam } from \"./gamescene.ts\";\r\nimport { checkForUnlockable, isAchievementUnlocked, unlockAchievement } from \"./unlockables/achievements.ts\";\r\nimport { ROOT } from \"../main.ts\";\r\nimport { outsideWindowHover } from \"./hovers/outsideWindowHover.ts\";\r\nimport { mouse } from \"./additives.ts\";\r\nimport { isWindowUnlocked } from \"./unlockables/unlockablewindows.ts\";\r\n\r\nexport let clickVars = {\r\n\tclicksPerSecond: 0, // to properly calculate sps\r\n\tconsecutiveClicks: 0,\r\n\tcomboDropped: true,\r\n\tmaxedCombo: false,\r\n\tconstantlyClicking: false,\r\n}\r\n\r\nexport const COMBO_MINCLICKS = 25;\r\nexport const COMBO_MAXCLICKS = 160;\r\nexport const COMBO_MAX = 5\r\n\r\nconst hoverRotSpeedIncrease = 0.01 * 0.25\r\nlet maxRotSpeed = 10\r\n\r\nlet consecutiveClicksWaiting = null;\r\nlet spsUpdaterTimer = 0; // to properly calculate sps\r\n\r\nexport let hexagon:any;\r\n\r\nexport function addHexagon() {\r\n\t// reset variables\r\n\tscoreManager.combo = 1\r\n\r\n\tclickVars.consecutiveClicks = 0\r\n\tclickVars.constantlyClicking = false\r\n\tclickVars.comboDropped = true\r\n\tclickVars.maxedCombo = false\r\n\tspsUpdaterTimer = 0\r\n\tmaxRotSpeed = 10\r\n\r\n\thexagon = add([\r\n\t\tsprite(GameState.settings.panderitoMode ? \"panderito\" : \"hexagon\"),\r\n\t\tpos(center().x, center().y + 55),\r\n\t\tanchor(\"center\"),\r\n\t\trotate(0),\r\n\t\tscale(),\r\n\t\topacity(1),\r\n\t\toutsideWindowHover(),\r\n\t\tcolor(saveColorToColor(GameState.settings.hexColor)),\r\n\t\tarea({\r\n\t\t\tshape: new Polygon([\r\n\t\t\t\tvec2(406, 118),\r\n\t\t\t\tvec2(613, 116),\r\n\t\t\t\tvec2(711, 292),\r\n\t\t\t\tvec2(615, 463),\r\n\t\t\t\tvec2(411, 466),\r\n\t\t\t\tvec2(315, 293),\r\n\t\t\t]),\r\n\t\t\toffset: vec2(-512, -293),\r\n\t\t\tscale: vec2(1.08), \r\n\t\t}),\r\n\t\tz(0),\r\n\t\tlayer(\"hexagon\"),\r\n\t\t\"hexagon\",\r\n\t\t{\r\n\t\t\tsmallestScale: 0.985,\r\n\t\t\tbiggestScale: 1.0015,\r\n\t\t\tdefaultScale: vec2(1),\r\n\t\t\tscaleIncrease: 1,\r\n\t\t\tmaxScaleIncrease: 1,\r\n\t\t\tstretchScaleIncrease: 1,\r\n\t\t\tinteractable: true,\r\n\t\t\tisBeingClicked: false,\r\n\t\t\trotationSpeed: 0.01,\r\n\t\t\tclickPressTween: null,\r\n\t\t\tstretched: true,\r\n\t\t\tupdate() {\r\n\t\t\t\tif (this.interactable) {\r\n\t\t\t\t\tif (GameState.settings.panderitoMode) this.area.scale = vec2(0.65, 1.1)\r\n\t\t\t\t\telse this.area.scale = vec2(1.08)\r\n\t\t\t\t}\r\n\t\t\t\telse this.area.scale = vec2(0)\r\n\t\t\t\t\r\n\t\t\t\tif (this.isBeingHovered) maxRotSpeed = 4.75\r\n\t\t\t\telse maxRotSpeed = 4\r\n\t\t\t\tthis.rotationSpeed = map(GameState.score, 0, scoreManager.scoreYouGetNextManaAt(), 0.01, maxRotSpeed)\r\n\t\t\t\tthis.rotationSpeed = clamp(this.rotationSpeed, 0.01, maxRotSpeed)\r\n\t\t\t\tthis.angle += this.rotationSpeed\r\n\t\t\t\t\r\n\t\t\t\tthis.scale.x = wave((this.smallestScale * this.scaleIncrease), (this.biggestScale * this.scaleIncrease), time() * 1.15)\r\n\t\t\t\tthis.scale.y = wave((this.smallestScale * this.scaleIncrease) * this.stretchScaleIncrease, (this.biggestScale * this.scaleIncrease) * this.stretchScaleIncrease, time() * 1.15)\r\n\r\n\t\t\t\tif (this.angle >= 360) {\r\n\t\t\t\t\tthis.angle = 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tclickPress() {\r\n\t\t\t\tthis.maxScaleIncrease = 0.98\r\n\t\t\t\tthis.clickPressTween = tween(this.scaleIncrease, this.maxScaleIncrease, 0.35, (p) => this.scaleIncrease = p, easings.easeOutQuint)\r\n\t\t\t\tthis.isBeingClicked = true\r\n\t\t\t\tmouse.grab()\r\n\t\t\t\tplaySfx(\"clickPress\", {detune: rand(-50, 50)})\r\n\t\t\t},\r\n\r\n\t\t\tclickRelease() {\r\n\t\t\t\tthis.maxScaleIncrease = this.isBeingHovered ? 1.05 : 1\r\n\t\t\t\t\r\n\t\t\t\tthis.clickPressTween?.cancel()\r\n\t\t\t\ttween(this.scaleIncrease, this.maxScaleIncrease, 0.35, (p) => this.scaleIncrease = p, easings.easeOutQuint)\r\n\t\t\t\tthis.isBeingClicked = false\r\n\t\t\t\tclickVars.clicksPerSecond++\r\n\r\n\t\t\t\tif (hexagon.isBeingHovered) mouse.releaseAndPlay(\"point\")\r\n\t\t\t\telse mouse.releaseAndPlay(\"cursor\")\r\n\r\n\t\t\t\t// # combo stuff\r\n\t\t\t\tclickVars.constantlyClicking = true\r\n\r\n\t\t\t\tconsecutiveClicksWaiting.cancel()\r\n\t\t\t\tconsecutiveClicksWaiting = wait(1, () => {\r\n\t\t\t\t\tclickVars.constantlyClicking = false\r\n\t\t\t\t\tif (scoreManager.combo < 2) clickVars.consecutiveClicks = 0\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (GameState.scoreThisRun > 100) {\r\n\t\t\t\t\t// if consecutiveclicks is not combo_maxclicks increase clicks\r\n\t\t\t\t\tif (clickVars.consecutiveClicks != COMBO_MAXCLICKS) {\r\n\t\t\t\t\t\tclickVars.consecutiveClicks++\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// checks for first combo\r\n\t\t\t\t\tif (clickVars.consecutiveClicks == getClicksFromCombo(2) && clickVars.comboDropped == true) {\r\n\t\t\t\t\t\tstartCombo()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check for all the other combos\r\n\t\t\t\t\telse if (scoreManager.combo < COMBO_MAX) {\r\n\t\t\t\t\t\tfor (let i = 2; i < COMBO_MAX + 1; i++) {\r\n\t\t\t\t\t\t\tif (clickVars.consecutiveClicks == getClicksFromCombo(i)) {\r\n\t\t\t\t\t\t\t\tincreaseCombo()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (scoreManager.combo == COMBO_MAX && clickVars.maxedCombo == false) {\r\n\t\t\t\t\t\tclickVars.maxedCombo = true\r\n\t\t\t\t\t\tmaxComboAnim()\r\n\r\n\t\t\t\t\t\taddConfetti({ pos: center() })\r\n\t\t\t\t\t\ttween(-10, 0, 0.5, (p) => cam.rotation = p, easings.easeOutQuint)\r\n\t\t\t\t\t\tplaySfx(\"fullcombo\", {detune: rand(-50, 50)})\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif (!isAchievementUnlocked(\"maxedcombo\")) {\r\n\t\t\t\t\t\t\tunlockAchievement(\"maxedcombo\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// # actual score additions\r\n\t\t\t\tlet scoreObtained = 0;\r\n\t\t\t\tlet isCritical = chance(rand(0.08, 0.1));\r\n\t\t\t\tlet isBigCrit:boolean;\r\n\r\n\t\t\t\tif (isCritical == true) {\r\n\t\t\t\t\tif (chance(0.2)) isBigCrit = true\r\n\t\t\t\t\telse isBigCrit = false\r\n\t\t\t\t} \r\n\r\n\t\t\t\tif (GameState.critPower > 1 && isCritical == true) {\r\n\t\t\t\t\t// it's a critical hit\r\n\t\t\t\t\tscoreObtained = scoreManager.getScoreWithCrit()\r\n\t\t\t\t\tif (isBigCrit == true) scoreObtained *= rand(1.2, 1.5)\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tscoreObtained = scoreManager.scorePerClick()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscoreObtained = Math.round(scoreObtained)\r\n\t\t\t\t\r\n\t\t\t\tlet plusScoreText = addPlusScoreText({\r\n\t\t\t\t\tpos: mousePos(),\r\n\t\t\t\t\tvalue: scoreObtained,\r\n\t\t\t\t\tcursorRelated: false,\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// actually adds the score\r\n\t\t\t\tscoreManager.addScore(scoreObtained)\r\n\r\n\t\t\t\tconst addCriticalParticles = (big:boolean) => {\r\n\t\t\t\t\tlet redcritcolor = RED.lighten(rand(110, 130))\r\n\t\t\t\t\tlet bluecritcolor = BLUE.lighten(rand(110, 130))\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet angles = [big ? 45 : 0, big ? 45 : 0]\r\n\t\t\t\t\tlet color = [big ? bluecritcolor : redcritcolor, big ? bluecritcolor : redcritcolor]\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet starparticle = add([\r\n\t\t\t\t\t\tlayer(\"ui\"),\r\n\t\t\t\t\t\tpos(mousePos()),\r\n\t\t\t\t\t\topacity(),\r\n\t\t\t\t\t\tparticles({\r\n\t\t\t\t\t\t\tmax: 4,\r\n\t\t\t\t\t\t\ttexture: getSprite(\"part_star\").data.tex,\r\n\t\t\t\t\t\t\tquads: [getSprite(\"part_star\").data.frames[0]],\r\n\t\t\t\t\t\t\tspeed: [50, 100],\r\n\t\t\t\t\t\t\t// angle: angles,\r\n\t\t\t\t\t\t\tcolors: color,\r\n\t\t\t\t\t\t\tlifeTime: [1.0, 1.5],\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tlifetime: 1.5,\r\n\t\t\t\t\t\t\trate: 100,\r\n\t\t\t\t\t\t\tdirection: -90,\r\n\t\t\t\t\t\t\tspread: 25,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t])\r\n\t\t\t\t\tstarparticle.fadeIn(0.1)\r\n\r\n\t\t\t\t\tstarparticle.emit(4)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// do crit anim stuff\r\n\t\t\t\t// if was critical and there was actually an increase\r\n\t\t\t\tif (scoreObtained > scoreManager.scorePerClick()) {\r\n\t\t\t\t\tif (isCritical == true && isBigCrit == false) {\r\n\t\t\t\t\t\t// add particles\r\n\t\t\t\t\t\tplusScoreText.color = blendColors(plusScoreText.color, RED, 0.1)\r\n\t\t\t\t\t\tplusScoreText.text += \"!\"\r\n\r\n\t\t\t\t\t\tlet randomDir = getRandomDirection(center(), false, 2.5)\r\n\t\t\t\t\t\ttween(randomDir, center(), 0.35, (p) => cam.pos = p, easings.easeOutQuint)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet tone = rand(-60, 45)\r\n\t\t\t\t\t\tplaySfx(\"punch\", { detune: tone })\r\n\t\t\t\t\t\taddCriticalParticles(isBigCrit)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (isCritical == true && isBigCrit == true) {\r\n\t\t\t\t\t\tplusScoreText.color = blendColors(plusScoreText.color, BLUE, 0.1)\r\n\t\t\t\t\t\tplusScoreText.text += \"!!\"\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tlet randomDir = getRandomDirection(center(), false, 2.5)\r\n\t\t\t\t\t\ttween(randomDir, center(), 0.35, (p) => cam.pos = p, easings.easeOutQuint)\r\n\t\t\t\t\t\ttween(choose([-1, 1]), 0, 0.35, (p) => cam.rotation = p, easings.easeOutQuint)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet tone = rand(35, 80)\r\n\t\t\t\t\t\tplaySfx(\"punch\", { detune: tone })\r\n\t\t\t\t\t\taddCriticalParticles(isBigCrit)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// other stuff\r\n\t\t\t\ttween(scoreText.scaleIncrease, 1.05, 0.2, (p) => scoreText.scaleIncrease = p, easings.easeOutQuint).onEnd(() => {\r\n\t\t\t\t\ttween(scoreText.scaleIncrease, 1, 0.2, (p) => scoreText.scaleIncrease = p, easings.easeOutQuint)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst tune = rand(-50, isCritical == true ? 100 : 50) \r\n\t\t\t\tplaySfx(\"clickRelease\", {detune: tune})\r\n\r\n\t\t\t\tif (GameState.settings.panderitoMode) {\r\n\t\t\t\t\tlet smallpanderito = add([\r\n\t\t\t\t\t\tsprite(\"smallpanderito\"),\r\n\t\t\t\t\t\tanchor(\"center\"),\r\n\t\t\t\t\t\tpos(mouse.pos),\r\n\t\t\t\t\t\trotate(rand(0, 360)),\r\n\t\t\t\t\t\tbody(),\r\n\t\t\t\t\t\tarea({ collisionIgnore: [\"smallpanderito\", \"autoCursor\"] }),\r\n\t\t\t\t\t\topacity(1),\r\n\t\t\t\t\t\tscale(rand(1, 2.5)),\r\n\t\t\t\t\t\tlayer(\"ui\"),\r\n\t\t\t\t\t\tcolor(),\r\n\t\t\t\t\t\t\"smallpanderito\",\r\n\t\t\t\t\t])\r\n\t\t\t\t\tsmallpanderito.gravityScale = 0.5\r\n\r\n\t\t\t\t\tsmallpanderito.vel.x = rand(30, 75)\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet randomColor = rgb(rand(0, 255), rand(0, 255), rand(0, 255))\r\n\t\t\t\t\tsmallpanderito.color = blendColors(smallpanderito.color, randomColor, 0.1)\r\n\t\t\t\t\tif (chance(0.5)) {\r\n\t\t\t\t\t\ttween(smallpanderito.angle, smallpanderito.angle + 90, 1, (p) => smallpanderito.angle = p, )\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttween(smallpanderito.angle, smallpanderito.angle - 90, 1, (p) => smallpanderito.angle = p, )\r\n\t\t\t\t\t\tsmallpanderito.vel.x *= -1\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twait(0.5, () => {\r\n\t\t\t\t\t\ttween(smallpanderito.opacity, 0, 0.5, (p) => smallpanderito.opacity = p, easings.easeOutQuint)\r\n\t\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t\t// ok you're done\r\n\t\t\t\t\twait(1, () => {\r\n\t\t\t\t\t\tdestroy(smallpanderito)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.trigger(\"clickrelease\")\r\n\t\t\t},\r\n\r\n\t\t\tautoClick() {\r\n\t\t\t\tlet autoCursor = add([\r\n\t\t\t\t\tsprite(\"cursors\"),\r\n\t\t\t\t\tpos(),\r\n\t\t\t\t\tscale(0.8),\r\n\t\t\t\t\trotate(0),\r\n\t\t\t\t\tlayer(\"ui\"),\r\n\t\t\t\t\tarea({ collisionIgnore: [\"autoCursor\"] }),\r\n\t\t\t\t\tbody(),\r\n\t\t\t\t\topacity(1),\r\n\t\t\t\t\tanchor(\"center\"),\r\n\t\t\t\t\t\"autoCursor\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupdate() {\r\n\t\t\t\t\t\t\t// debug.log(this.angle)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t])\r\n\t\t\t\tautoCursor.gravityScale = 0\r\n\t\t\t\r\n\t\t\t\t// fucking cursor position\r\n\t\t\t\tautoCursor.pos.x = rand(\r\n\t\t\t\t\thexagon.pos.x - 50,\r\n\t\t\t\t\thexagon.pos.x + 50,\r\n\t\t\t\t);\r\n\t\t\t\tautoCursor.pos.y = rand(\r\n\t\t\t\t\thexagon.pos.y - 50,\r\n\t\t\t\t\thexagon.pos.y + 50,\r\n\t\t\t\t);\r\n\t\t\t\r\n\t\t\t\ttween(0, 1, 0.5, (p) => autoCursor.opacity = p, easings.easeOutQuint)\r\n\t\t\t\ttween(autoCursor.pos, autoCursor.pos.add(choose([-80, -70, -60, -50, 50, 60, 70, 80])), 0.5, (p) => autoCursor.pos = p, easings.easeOutQuint)\r\n\t\t\t\r\n\t\t\t\tif (\r\n\t\t\t\t\tautoCursor.pos.x > hexagon.pos.x - 50\r\n\t\t\t\t\t&& autoCursor.pos.x < hexagon.pos.x\r\n\t\t\t\t) {\r\n\t\t\t\t\tautoCursor.angle = 90;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tautoCursor.pos.x > hexagon.pos.x\r\n\t\t\t\t\t&& autoCursor.pos.x < hexagon.pos.x + 50\r\n\t\t\t\t) {\r\n\t\t\t\t\tautoCursor.angle = 270;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tif (\r\n\t\t\t\t\tautoCursor.pos.y > hexagon.pos.y - 50\r\n\t\t\t\t\t&& autoCursor.pos.y < hexagon.pos.y\r\n\t\t\t\t) {\r\n\t\t\t\t\tautoCursor.angle += 45;\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tautoCursor.pos.y > hexagon.pos.y\r\n\t\t\t\t\t&& autoCursor.pos.y < hexagon.pos.y + 50\r\n\t\t\t\t) {\r\n\t\t\t\t\tautoCursor.angle -= 45;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\twait(0.25, () => {\r\n\t\t\t\t\tautoCursor.play(\"point\")\r\n\t\t\t\t\twait(0.15, () => {\r\n\t\t\t\t\t\tautoCursor.play(\"grab\")\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// clickPress manual false\r\n\t\t\t\t\t\ttween(hexagon.scaleIncrease, this.maxScaleIncrease * 0.98, 0.35, (p) => hexagon.scaleIncrease = p, easings.easeOutQuint)\r\n\t\t\t\t\t\tplaySfx(\"clickPress\", {detune: rand(-50, 50)})\r\n\r\n\t\t\t\t\t\twait(0.15, () => {\r\n\t\t\t\t\t\t\tautoCursor.play(\"point\")\r\n\t\t\t\r\n\t\t\t\t\t\t\t// clickRelease manual false\r\n\t\t\t\t\t\t\ttween(hexagon.scaleIncrease, hexagon.maxScaleIncrease, 0.35, (p) => hexagon.scaleIncrease = p, easings.easeOutQuint)\r\n\t\t\t\t\t\t\tplaySfx(\"clickRelease\", {detune: rand(-50, 50)})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\taddPlusScoreText({\r\n\t\t\t\t\t\t\t\tpos: autoCursor.pos,\r\n\t\t\t\t\t\t\t\tvalue: scoreManager.scorePerAutoClick(),\r\n\t\t\t\t\t\t\t\tcursorRelated: true,\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tscoreManager.addScore(scoreManager.scorePerAutoClick())\r\n\t\t\t\r\n\t\t\t\t\t\t\t// has done its bidding, time to roll and dissapear\r\n\t\t\t\t\t\t\tautoCursor.gravityScale = 1\r\n\t\t\t\t\t\t\tautoCursor.jump(300)\r\n\t\t\t\r\n\t\t\t\t\t\t\twait(0.2, () => {\r\n\t\t\t\t\t\t\t\t// LOL!!!\r\n\t\t\t\t\t\t\t\tlet upwards = chance(0.1)\r\n\t\t\t\t\t\t\t\tif (upwards) autoCursor.gravityScale = -1\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttween(1, 0, upwards ? 0.4 : 0.25, (p) => autoCursor.opacity = p, easings.linear)\r\n\t\t\t\t\t\t\t\tif (autoCursor.pos.x > hexagon.pos.x) {\r\n\t\t\t\t\t\t\t\t\ttween(autoCursor.angle, autoCursor.angle + 90, 1, (p) => autoCursor.angle = p, )\r\n\t\t\t\t\t\t\t\t\tautoCursor.vel.x = rand(25, 50)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (autoCursor.pos.x < hexagon.pos.x) {\r\n\t\t\t\t\t\t\t\t\ttween(autoCursor.angle, autoCursor.angle - 90, 1, (p) => autoCursor.angle = p, )\r\n\t\t\t\t\t\t\t\t\tautoCursor.vel.x = rand(-25, -50)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// ok you're done\r\n\t\t\t\t\t\t\t\twait(1, () => {\r\n\t\t\t\t\t\t\t\t\tdestroy(autoCursor)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t}\r\n\t])\r\n\r\n\thexagon.startingHover(() => {\r\n\t\ttween(hexagon.scaleIncrease, 1.05, 0.35, (p) => hexagon.scaleIncrease = p, easings.easeOutCubic);\r\n\t\thexagon.rotationSpeed += hoverRotSpeedIncrease\r\n\t\thexagon.maxScaleIncrease = 1.05\r\n\t})\r\n\r\n\thexagon.endingHover(() => {\r\n\t\ttween(hexagon.scaleIncrease, 1, 0.35, (p) => hexagon.scaleIncrease = p, easings.easeOutCubic);\r\n\t\thexagon.isBeingClicked = false\r\n\t\thexagon.rotationSpeed = 0\r\n\t\thexagon.maxScaleIncrease = 1\r\n\t})\r\n\r\n\thexagon.on(\"startAnimEnd\", () => {\r\n\t\thexagon.use(waver({ maxAmplitude: 5, wave_speed: 1 }))\r\n\t\thexagon.startWave()\r\n\t})\r\n\r\n\thexagon.onClick(() => {\r\n\t\tif (hexagon.isBeingHovered) {\r\n\t\t\thexagon.clickPress()\r\n\t\t\tGameState.stats.timesClicked++\r\n\t\t}\r\n\t})\r\n\t\r\n\thexagon.onMouseRelease(\"left\", () => {\r\n\t\tif (hexagon.isBeingHovered) {\r\n\t\t\thexagon.clickRelease()\r\n\t\t}\r\n\t})\r\n\r\n\thexagon.onMousePress(\"right\", () => {\r\n\t\tif (isWindowUnlocked(\"hexColorWin\") && hexagon.isBeingHovered) manageWindow(\"hexColorWin\")\r\n\t})\r\n\r\n\t// score setting stuff\r\n\thexagon.onUpdate(() => {\r\n\t\tspsUpdaterTimer += dt();\r\n\t\tif (spsUpdaterTimer > 1) {\r\n\t\t\tspsUpdaterTimer = 0;\r\n\t\t\tspsText.updateValue(); // update it before it gets to 0\r\n\t\t\tclickVars.clicksPerSecond = 0;\r\n\t\t}\r\n\t})\r\n\r\n\tROOT.on(\"scoreGained\", (amount) => {\r\n\t\tcheckForUnlockable()\r\n\t})\r\n\r\n\tloop(2.5, () => {\r\n\t\thexagon.stretched = !hexagon.stretched\r\n\t\tif (hexagon.stretched) tween(hexagon.stretchScaleIncrease, 0.98, 2, (p) => hexagon.stretchScaleIncrease = p, easings.linear)\r\n\t\telse tween(hexagon.stretchScaleIncrease, 1.01, 2, (p) => hexagon.stretchScaleIncrease = p, easings.linear)\r\n\t})\r\n\r\n\t// COMBO STUFF\r\n\tconsecutiveClicksWaiting = wait(0, () => {});\r\n\r\n\treturn hexagon;\r\n}", "import { clickVars } from \"./game/hexagon\"\r\nimport { powerupTypes } from \"./game/powerups\"\r\nimport { percentage, saveAnim } from \"./game/utils\"\r\nimport { ROOT } from \"./main\"\r\nimport { musicHandler, stopAllSounds } from \"./sound\"\r\n\r\nexport class saveColor {\r\n    r: number = 255;\r\n    g: number = 255;\r\n    b: number = 255;\r\n\ta: number;\r\n\r\n    constructor(r: number, g: number, b: number, a?: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n\t\tthis.a = a;\r\n    }\r\n}\r\n\r\nclass _GameState {\t\r\n\tscore = 0\r\n\tscoreThisRun = 0\r\n\tscoreAllTime = 0\r\n\t\r\n\tclickers = 1\r\n\tclicksUpgradesValue = 1 // multiplier for clicks\r\n\tclickPercentage = 0 // percentage added\r\n\r\n\tcursors = 0\r\n\tcursorsUpgradesValue = 1 // multiplier for cursors\r\n\tcursorsPercentage = 0 // percentage added\r\n\ttimeUntilAutoLoopEnds = 10 // cursor frequency\r\n\r\n\tupgradesBought = [\"c_0\"]\r\n\r\n\t// powerups \r\n\thasUnlockedPowerups = false\r\n\t\r\n\tpowerupPower = 1\r\n\tcritPower = 0\r\n\r\n\tascension = {\r\n\t\tmana: 0,\r\n\t\tmanaAllTime: 0,\r\n\t\tmagicLevel: 1, // times ascended + 1\r\n\t\t\r\n\t\t// stuff bought for price calculation\r\n\t\tclickPercentagesBought: 0,\r\n\t\tcursorsPercentagesBought: 0,\r\n\t\tpowerupPowersBought: 0,\r\n\t\tcritPowersBought: 0,\r\n\t}\r\n\r\n\tunlockedAchievements = []\r\n\r\n\tunlockedWindows = [\"bgColorWin\", \"hexColorWin\"]\r\n\ttaskbar = []\r\n\r\n\tstats = {\r\n\t\ttimesClicked: 0,\r\n\t\tpowerupsClicked: 0,\r\n\t\ttimesAscended: 0,\r\n\t\tpowerupsBought: 0,\r\n\t\ttotalTimePlayed: 0,\r\n\t\ttimesGnomed: 0,\r\n\t}\r\n\r\n\tsettings = {\r\n\t\tsfx: { volume: 1, muted: false },\r\n\t\tmusic: { volume: 1, muted: false, favoriteIdx: 0 },\r\n\t\tvolume: 1,\r\n\t\thexColor: new saveColor(255, 255, 255),\r\n\t\tbgColor: new saveColor(0, 0, 0, 0.84),\r\n\t\tcommaInsteadOfDot: false,\r\n\t\tfullscreen: false,\r\n\t\tspsTextMode: 1,\r\n\r\n\t\tpanderitoMode: false,\r\n\t}\r\n\r\n\tsave(anim = true) {\r\n\t\tif (this.score < 25) return\r\n\t\tsetData(\"hexagon-save\", this)\r\n\t\tif (anim) saveAnim()\r\n\t}\r\n\r\n\tload() {\r\n\t\tlet gottenData = getData(\"hexagon-save\") \r\n\t\tif (gottenData) {\r\n\t\t\tObject.assign(this, gottenData)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgottenData = new _GameState();\r\n\t\t}\r\n\t\treturn gottenData;\r\n\t}\r\n\r\n\tdelete() {\r\n\t\tlet oldvolume = this.settings.volume\r\n\t\t\r\n\t\t// remove data\r\n\t\tlocalStorage.removeItem(\"hexagon-save\")\r\n\t\tObject.assign(this, new _GameState())\r\n\r\n\t\tmusicHandler?.stop()\r\n\t\tstopAllSounds()\r\n\t\t\r\n\t\tthis.settings.volume = oldvolume\r\n\t\t\r\n\t\tgo(\"gamescene\")\r\n\t}\r\n\r\n\tcheat() {\r\n\t\tthis.clickers = 100\r\n\t\tthis.cursors = 100\r\n\t\tthis.score = scoreManager.ascensionConstant\r\n\t\tthis.scoreThisRun = scoreManager.ascensionConstant\r\n\t\tthis.scoreAllTime = scoreManager.ascensionConstant\r\n\t}\r\n}\r\n\r\nexport let GameState = new _GameState()\r\n\r\nclass _scoreManager {\r\n\tscientificENOT = 1000000000000000000000\r\n\r\n\tcombo = 1\r\n\t\r\n\t// score per click (no combo or powerups or percentage)\r\n\tscorePerClick_Vanilla = () => {\r\n\t\treturn Math.round(GameState.clickers * GameState.clicksUpgradesValue)\r\n\t}\r\n\r\n\t// score per click\r\n\tscorePerClick = () => {\r\n\t\tlet vanillaValue = this.scorePerClick_Vanilla()\r\n\t\tlet noPercentage = (vanillaValue * (powerupTypes.clicks.multiplier * powerupTypes.awesome.multiplier) * this.combo)\r\n\t\tlet returnValue = noPercentage + percentage(GameState.clickPercentage, noPercentage)\r\n\t\treturn Math.round(returnValue)\r\n\t}\r\n\r\n\tgetScoreWithCrit = () => {\r\n\t\treturn Math.round(this.scorePerClick() * (GameState.critPower * 0.5))\r\n\t}\r\n\r\n\t// score per cursor click (not including powerups or percentages)\r\n\tscorePerAutoClick_Vanilla = () => {\r\n\t\treturn Math.round(GameState.cursors * GameState.cursorsUpgradesValue)\r\n\t}\r\n\r\n\t// score per cursor click\r\n\tscorePerAutoClick = () => {\r\n\t\tlet noPercentage = GameState.cursors * GameState.cursorsUpgradesValue * (powerupTypes.cursors.multiplier * powerupTypes.awesome.multiplier)\r\n\t\tlet returnValue = noPercentage + percentage(GameState.cursorsPercentage, noPercentage)\r\n\t\treturn Math.round(returnValue)\r\n\t}\r\n\r\n\t// the score per second you're getting by cursors\r\n\t// no rounding because can be decimal (0.1)\r\n\tautoScorePerSecond = () => {\r\n\t\tlet returnValue = this.scorePerAutoClick() / GameState.timeUntilAutoLoopEnds\r\n\t\treturn returnValue\r\n\t}\r\n\r\n\t// the general score per second clicks and all\r\n\t// no rounding because can be decimal (0.1)\r\n\tscorePerSecond = () => {\r\n\t\treturn (clickVars.clicksPerSecond * (this.scorePerClick())) + this.autoScorePerSecond()\r\n\t}\r\n\r\n\taddScore(amount:number) {\r\n\t\tGameState.score += amount\r\n\t\tGameState.scoreThisRun += amount\r\n\t\tGameState.scoreAllTime += amount\r\n\t\tROOT.trigger(\"scoreGained\", amount)\r\n\t}\r\n\r\n\t// used usually when buying\r\n\tsubTweenScore(amount:number) {\r\n\t\t// GameState.score -= amount\r\n\t\ttween(GameState.score, GameState.score - amount, 0.32, (p) => GameState.score = p, easings.easeOutExpo)\r\n\t\tROOT.trigger(\"scoreDecreased\", amount)\r\n\t}\r\n\r\n\taddTweenScore(amount:number) {\r\n\t\ttween(GameState.score, GameState.score + amount, 0.32, (p) => GameState.score = p, easings.easeOutExpo)\r\n\t\tGameState.scoreThisRun += amount\r\n\t\tGameState.scoreAllTime += amount\r\n\t\tROOT.trigger(\"scoreGained\", amount)\r\n\t}\r\n\r\n\t// =====================\r\n\t//   ASCENSION STUFF\r\n\t// =====================\r\n\t// Mana is a spendable currency\r\n\t// When score is greater than scoreTilNextMana, mana is added by one\r\n\t// Magic level is as multiplier\r\n\r\n\t/**\r\n\t * This is the number you start getting mana at\r\n\t */\r\n\tascensionConstant = 5_000_000\r\n\r\n\t// Is the actual formula that determines the amounts you get mana at\r\n\tgetScoreForManaAT = (manaAllTime:number) => {\r\n\t\treturn (manaAllTime ** 3) * this.ascensionConstant\r\n\t}\r\n\r\n\t// The score you get the next mana at\r\n\tscoreYouGetNextManaAt = () => {\r\n\t\tlet nextManaAt = this.getScoreForManaAT(GameState.ascension.manaAllTime + 1);\r\n\t\treturn nextManaAt;\r\n\t}\r\n\t\r\n\tresetRun() {\r\n\t\ttween(GameState.score, 0, 0.32, (p) => GameState.score = p, easings.easeOutCirc)\r\n\t\ttween(GameState.scoreThisRun, 0, 0.32, (p) => GameState.scoreThisRun = p, easings.easeOutCirc)\r\n\t\r\n\t\ttween(GameState.clickers, 1, 0.5, (p) => GameState.clickers = Math.round(p), easings.easeOutQuad)\r\n\t\ttween(GameState.cursors, 0, 0.5, (p) => GameState.cursors = Math.round(p), easings.easeOutQuad)\r\n\r\n\t\ttween(GameState.clicksUpgradesValue, 1, 0.5, (p) => GameState.clicksUpgradesValue = Math.round(p), easings.easeOutQuad)\r\n\t\ttween(GameState.cursorsUpgradesValue, 1, 0.5, (p) => GameState.cursorsUpgradesValue = Math.round(p), easings.easeOutQuad)\r\n\t\t\r\n\t\tGameState.stats.powerupsBought = 0\r\n\r\n\t\tGameState.upgradesBought = [\"c_0\"]\r\n\t\tGameState.timeUntilAutoLoopEnds = 10\r\n\t}\r\n}\r\n\r\nexport let scoreManager = new _scoreManager()", "import { GameState, scoreManager } from \"../gamestate.ts\"\r\nimport { addHexagon, hexagon } from \"./hexagon.ts\"\r\nimport { buildingsText, scoreText, spsText, uiCounters } from \"./uicounters.ts\"\r\nimport { coolSetFullscreen, debugFunctions, formatNumber, formatTime, randomPos, saveColorToColor } from \"./utils.ts\"\r\nimport { addToast, gameBg, mouse } from \"./additives.ts\"\r\nimport { musicHandler, playMusic, playSfx, stopAllSounds } from \"../sound.ts\"\r\nimport { windowsDefinition } from \"./windows/windows-api/windowManaging.ts\"\r\nimport { songs } from \"./windows/musicWindow.ts\"\r\nimport { DEBUG, ROOT } from \"../main.ts\"\r\nimport { allPowerupsInfo, Powerup_NaturalSpawnManager, Powerup_RemovalTimeManager, spawnPowerup } from \"./powerups.ts\"\r\nimport { checkForUnlockable, isAchievementUnlocked, unlockAchievement } from \"./unlockables/achievements.ts\"\r\nimport { ascension } from \"./ascension/ascension.ts\"\r\nimport { folderObj, folderObjManaging } from \"./windows/windows-api/folderObj.ts\"\r\nimport { curDraggin } from \"./plugins/drag.ts\"\r\nimport { unlockableWindows } from \"./unlockables/unlockablewindows.ts\"\r\nimport * as env from \"../env.json\"\r\n\r\nlet panderitoLetters = \"panderito\".split(\"\")\r\nexport let panderitoIndex = 0\r\n\r\nlet isTabActive = true; // Variable to track if the tab is currently active\r\nlet totalTimeOutsideTab = 0; // Variable to store the total time the user has been outside of the tab ; Miliseconds\r\nlet startTimeOutsideTab:DOMHighResTimeStamp; // Variable to store the start time when the tab becomes inactive\r\nexport let excessTime = 0; // Time that has passed after autoLoopTime\r\n\r\nexport let autoLoopTime = 0;\r\n\r\nlet idleWaiter:any;\r\nlet sleeping = false;\r\nlet timeSlept = 0;\r\n\r\nexport let cam = null;\r\n\r\nexport function togglePanderito() {\r\n\tGameState.settings.panderitoMode = !GameState.settings.panderitoMode\r\n\tpanderitoIndex = 0\r\n\r\n\tif (!isAchievementUnlocked(\"panderitomode\")) {\r\n\t\tunlockAchievement(\"panderitomode\")\r\n\t}\r\n\r\n\tlet block = add([\r\n\t\trect(width(), 100),\r\n\t\tpos(center()),\r\n\t\tanchor(\"center\"),\r\n\t\topacity(0.5),\r\n\t\tcolor(BLACK),\r\n\t\tlayer(\"mouse\"),\r\n\t\tz(mouse.z - 2),\r\n\t])\r\n\r\n\tlet panderitoText = add([\r\n\t\ttext(`Panderito mode: ${GameState.settings.panderitoMode ? \"ACTIVATED\" : \"DEACTIVATED\"}`, {\r\n\t\t\tsize: 26,\r\n\t\t\tfont: 'emulogic',\r\n\t\t}),\r\n\t\tpos(center()),\r\n\t\tanchor(\"center\"),\r\n\t\tlayer(\"mouse\"),\r\n\t\tz(mouse.z - 1),\r\n\t\topacity(1),\r\n\t])\r\n\r\n\twait(0.8, () => {\r\n\t\ttween(0.5, 0, 0.5, (p) => block.opacity = p, )\r\n\t\ttween(1, 0, 0.5, (p) => panderitoText.opacity = p, )\r\n\t\twait(0.5, () => {\r\n\t\t\tdestroy(panderitoText)\r\n\t\t\tdestroy(block)\r\n\t\t})\r\n\t})\r\n\r\n\tif (GameState.settings.panderitoMode) {\r\n\t\thexagon.use(sprite(\"panderito\"))\r\n\t}\r\n\t\r\n\telse {\r\n\t\thexagon.use(sprite(\"hexagon\"))\r\n\t}\r\n\r\n\tGameState.save(false)\r\n}\r\n\r\n/**\r\n * Takes this amount of seconds to be considered \"asleep\"\r\n */\r\nconst TIME_FOR_SLEEP = 60\r\n\r\n// idle means the game was open but the player stoped moving\r\nfunction triggerZZZ(playerInactivity = true) {\r\n\tif (playerInactivity) sleeping = true\r\n\t\r\n\tlet black = add([\r\n\t\trect(width(), height()),\r\n\t\tpos(center()),\r\n\t\tanchor(\"center\"),\r\n\t\tcolor(BLACK),\r\n\t\tlayer(\"mouse\"),\r\n\t\tz(mouse.z - 2),\r\n\t\topacity(1),\r\n\t])\r\n\tif (playerInactivity) black.fadeIn(0.5)\r\n\r\n\tlet sleepyText = add([\r\n\t\ttext(\"Z Z Z . . . \", {\r\n\t\t\tsize: 90,\r\n\t\t\tfont: \"lambda\",\r\n\t\t\ttransform: (idx) => ({\r\n\t\t\t\tpos: vec2(0, wave(-4, 4, time() * 4 + idx * 0.5)),\r\n\t\t\t\tscale: wave(1, 1.2, time() * 3 + idx),\r\n\t\t\t\tangle: wave(-9, 9, time() * 3 + idx),\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tz(mouse.z - 1),\r\n\t\tlayer(\"mouse\"),\r\n\t\tanchor(\"center\"),\r\n\t\tpos(center()),\r\n\t\topacity(1),\r\n\t])\r\n\tif (playerInactivity) sleepyText.fadeIn(0.5)\r\n\r\n\tlet events:any[];\r\n\tfunction wakeUp() {\r\n\t\tsleeping = false\r\n\t\twait(0.5, () => {\r\n\t\t\tblack.fadeOut(0.5)\r\n\t\t\tsleepyText.fadeOut(0.5).onEnd(() => {\r\n\t\t\t\tblack?.destroy()\r\n\t\t\t\tsleepyText?.destroy()\r\n\t\t\t\tif (playerInactivity) welcomeBack(true)\r\n\t\t\t})\r\n\t\t})\r\n\t\tevents?.forEach(event => {\r\n\t\t\tevent.cancel()\r\n\t\t});\r\n\t}\r\n\r\n\tif (playerInactivity) {\r\n\t\tlet mouse = onMouseMove(() => wakeUp())\r\n\t\tlet click = onClick(() => wakeUp())\r\n\t\tlet key = onKeyPress(() => wakeUp())\r\n\t\tevents = [mouse, click, key]\r\n\t}\r\n\r\n\telse wakeUp()\r\n}\r\n\r\nfunction welcomeBack(idle = false) {\r\n\tlet timeSinceLeave = 0\r\n\tlet scoreGained = 0\r\n\r\n\tfunction addWelcomeBackToast(score:any, timeInSeconds:number) {\r\n\t\t\r\n\t\tlet body = `You were out for: ${formatTime(timeInSeconds, true)}`; \r\n\t\tif (score != null) body += `\\n+${formatNumber(score)}` \r\n\t\t\r\n\t\tlet hasCombo = scoreManager.combo > 1\r\n\t\tlet hasPowerup = get(\"putimer\")?.length > 0\r\n\t\tlet applicationMessage = \"\"\r\n\t\t\r\n\t\tif (hasCombo) applicationMessage += `\\n(Combo is not applicable)`\r\n\t\telse if (hasPowerup) applicationMessage += \"\\n(Power-ups are not applicable)\"\r\n\t\telse if (hasCombo && hasPowerup) applicationMessage += \"\\n(Combo nor Power-ups are applicable)\"\r\n\t\tbody += applicationMessage\r\n\r\n\t\tlet toast = addToast({ icon: \"cursors.cursor\", title: \"Welcome back!\", body: body, type: \"welcome\" })\r\n\t\r\n\t\tif (GameState.hasUnlockedPowerups == true) {\r\n\t\t\t// if you left for this seconds there's a 10% chance you get a powerup\r\n\t\t\tif (timeInSeconds > TIME_FOR_SLEEP) {\r\n\t\t\t\tif (chance(0.1)) spawnPowerup()\r\n\t\t\t}\r\n\r\n\t\t\t// if the time you left is greater than 120 seconds\r\n\t\t\tif (timeInSeconds > TIME_FOR_SLEEP * 2) {\r\n\t\t\t\t// there's a chance of 25% to get a powerup\r\n\t\t\t\tif (chance(0.25)) {\r\n\t\t\t\t\t// if an additional 5% chance also happens to be you get 2\r\n\t\t\t\t\tif (chance(0.05)) {\r\n\t\t\t\t\t\tfor (let i = 0; i < 2; i++) spawnPowerup()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// else you get a single one\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tspawnPowerup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (timeInSeconds > TIME_FOR_SLEEP * 3) {\r\n\t\t\t\tif (chance(0.5)) {\r\n\t\t\t\t\tspawnPowerup({\r\n\t\t\t\t\t\ttype: \"awesome\",\r\n\t\t\t\t\t\tpos: randomPos(),\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn toast;\r\n\t}\r\n\r\n\tif (idle == false) {\r\n\t\ttimeSinceLeave = totalTimeOutsideTab / 1000\r\n\r\n\t\tautoLoopTime += totalTimeOutsideTab / 1000\r\n\t\texcessTime = autoLoopTime - GameState.timeUntilAutoLoopEnds\r\n\t\tlet gainedScore = 0\r\n\t\tif (excessTime >= 0) {\r\n\t\t\tgainedScore = Math.floor(excessTime / GameState.timeUntilAutoLoopEnds); // can't add scorePerAutoClick here bc\r\n\t\t\texcessTime -= GameState.timeUntilAutoLoopEnds * gainedScore // I use it before to shave off the extra time\r\n\t\t\t// actual gainedScore\r\n\t\t\tgainedScore = gainedScore * scoreManager.scorePerAutoClick()\r\n\t\t\tscoreManager.addTweenScore(gainedScore)\r\n\t\t\t\r\n\t\t\tscoreGained = gainedScore // this is for the log\r\n\t\t}\r\n\t}\r\n\r\n\telse {\r\n\t\ttimeSinceLeave = timeSlept\r\n\t\tif (GameState.cursors < 1 || ascension.ascending == true) {addWelcomeBackToast(null, timeSlept); return;}\r\n\t\t\r\n\t\t// SECONDS FOR LOG\r\n\t\tif (timeSlept > 60) {\r\n\t\t\ttimeSlept = 0\r\n\t\t}\r\n\r\n\t\tscoreGained = Math.round(scoreManager.autoScorePerSecond() * timeSinceLeave) // this is for the log\r\n\t\t// don't add no score because it is aded in the loop\r\n\t}\r\n\r\n\t// now add the toast\r\n\tlet welcomebacktoasts = get(\"toast\").filter(t => t.type == \"welcome\")\r\n\t\r\n\t// if time since leave is greater than 10 seconds and there's already a log\r\n\t// it means the player came back, but left again, so add another one\r\n\tif (timeSinceLeave > 10 && welcomebacktoasts.length > 0) {\r\n\t\twelcomebacktoasts.forEach(toast => toast.destroy())\r\n\t}\r\n\r\n\tif (GameState.cursors < 1 || ascension.ascending == true) {\r\n\t\taddWelcomeBackToast(null, timeSinceLeave)\r\n\t}\r\n\r\n\telse {\r\n\t\taddWelcomeBackToast(scoreGained, timeSinceLeave)\r\n\t}\r\n}\r\n\r\nfunction resetIdleTime() {\r\n\tidleWaiter.cancel()\r\n\tidleWaiter = wait(TIME_FOR_SLEEP, () => {\r\n\t\t// true means it's idle\r\n\t\ttriggerZZZ(true)\r\n\t})\r\n}\r\n\r\nexport function triggerGnome() {\r\n\tlet gnome = add([\r\n\t\tsprite(\"gnome\"),\r\n\t\tpos(),\r\n\t\tlayer(\"mouse\"),\r\n\t\tscale(1.25),\r\n\t\tz(mouse.z - 1),\r\n\t\tanchor(\"center\"),\r\n\t\t{\r\n\t\t\tupdate() {\r\n\t\t\t\tthis.angle = wave(-10, 10, time() / 2)\r\n\t\t\t}\r\n\t\t}\r\n\t])\r\n\r\n\tplaySfx(\"gnome\")\r\n\t\r\n\ttween(0, width(), 0.1, (p) => gnome.pos.x = p, easings.linear)\r\n\ttween(0, height(), 0.1, (p) => gnome.pos.y = p, easings.linear).onEnd(() => {\r\n\t\tdestroy(gnome)\r\n\t})\r\n\r\n\tif (!isAchievementUnlocked(\"gnome\")) unlockAchievement(\"gnome\")\r\n\tGameState.stats.timesGnomed++\r\n}\r\n\r\nexport let hexagonIntro:() => void;\r\nexport let hasStartedGame:boolean;\r\n\r\nexport const gamescene = () => scene(\"gamescene\", () => {\r\n\tGameState.load()\r\n\thasStartedGame = GameState.scoreAllTime > 1\r\n\tascension.ascending = false\r\n\t\r\n\tcam = {\r\n\t\tpos: center(),\r\n\t\tzoom: 1,\r\n\t\trotation: 0,\r\n\t}\r\n\t\r\n\taddHexagon()\r\n\tuiCounters()\r\n\tfolderObjManaging()\r\n\twindowsDefinition()\r\n\t\r\n\tsetGravity(1600)\r\n\t\r\n\tROOT.on(\"gamestart\", () => {\r\n\t\t// wait 60 seconds\r\n\t\twait(60, () => {\r\n\t\t\tloop(120, () => {\r\n\t\t\t\tif (GameState.scoreAllTime > 25) GameState.save(true)\r\n\t\t\t})\r\n\t\t})\r\n\t\r\n\t\tif (!GameState.hasUnlockedPowerups) {\r\n\t\t\tROOT.on(\"powerupunlock\", () => {\r\n\t\t\t\tallPowerupsInfo.canSpawnPowerups = true\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\telse {\r\n\t\t\tallPowerupsInfo.canSpawnPowerups = true\r\n\t\t}\r\n\t\r\n\t\t// check for idling\r\n\t\tidleWaiter = wait(0, () => {})\r\n\t\tonMouseMove(() => resetIdleTime())\r\n\t\tonKeyPress(() => resetIdleTime())\r\n\t\tonClick(() => resetIdleTime())\r\n\t\r\n\t\t// panderito checkin\r\n\t\tonCharInput((ch) => {\r\n\t\t\tif (!hasStartedGame) return\r\n\t\t\tif (ch == panderitoLetters[panderitoIndex]) {\r\n\t\t\t\tpanderitoIndex++\r\n\t\t\t}\r\n\t\t\r\n\t\t\telse {\r\n\t\t\t\tpanderitoIndex = 0\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (panderitoIndex == panderitoLetters.length) {\r\n\t\t\t\ttogglePanderito()\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// gnome\r\n\t\tif (!isAchievementUnlocked(\"gnome\")) {\r\n\t\t\twait(60, () => {\r\n\t\t\t\tloop(1, () => {\r\n\t\t\t\t\tif (chance(0.0025)) {\r\n\t\t\t\t\t\tif (ascension.ascending == true) return\r\n\t\t\t\t\t\tif (!isAchievementUnlocked(\"gnome\")) triggerGnome()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\t\r\n\tonUpdate(() => {\r\n\t\tcamRot(cam.rotation)\r\n\t\tcamScale(vec2(cam.zoom))\r\n\t\tcamPos(cam.pos)\r\n\t\t\r\n\t\tif (isKeyDown(\"shift\") && isKeyPressed(\"r\") && panderitoIndex != 6) {\r\n\t\t\tmusicHandler.stop()\r\n\t\t\tstopAllSounds()\r\n\t\t\t\r\n\t\t\tgo(\"gamescene\")\r\n\t\t}\r\n\t\tif (isKeyDown(\"shift\") && isKeyPressed(\"s\") && GameState.scoreAllTime > 25) GameState.save()\r\n\t\t\r\n\t\tGameState.stats.totalTimePlayed += dt()\r\n\t\t\r\n\t\tGameState.score = clamp(GameState.score, 0, Infinity)\r\n\t\tGameState.score = Math.round(GameState.score)\r\n\t\r\n\t\t// INCREASES MANA\r\n\t\tif (GameState.scoreAllTime >= scoreManager.scoreYouGetNextManaAt() && unlockableWindows.ascendWin.condition() == true) {\r\n\t\t\tGameState.ascension.mana++\r\n\t\t\tGameState.ascension.manaAllTime++\r\n\t\t\tROOT.trigger(\"manaGained\")\r\n\t\t}\r\n\t\t\r\n\t\tGameState.stats.timesAscended = GameState.ascension.magicLevel - 1\r\n\t\r\n\t\t// auto loop stuff\r\n\t\tif (GameState.cursors >= 1 && ascension.ascending == false) {\r\n\t\t\tautoLoopTime += dt()\r\n\t\t\t\r\n\t\t\t// this runs when time's up\r\n\t\t\tif (autoLoopTime >= GameState.timeUntilAutoLoopEnds) {\r\n\t\t\t\tif (excessTime > 0) autoLoopTime = excessTime\r\n\t\t\t\telse { autoLoopTime = 0; hexagon.autoClick() }\r\n\t\t\t\texcessTime = 0\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\telse {\r\n\t\t\tautoLoopTime = 0\r\n\t\t}\r\n\t\r\n\t\tif (sleeping) timeSlept += dt()\r\n\t\r\n\t\tif (GameState.hasUnlockedPowerups == true) {\r\n\t\t\tPowerup_NaturalSpawnManager()\r\n\t\t\tPowerup_RemovalTimeManager()\r\n\t\t}\r\n\t})\r\n\t\r\n\t// #region OUTSIDE OF TAB STUFF\r\n\t// Function to handle tab visibility change\r\n\tfunction handleVisibilityChange() {\r\n\t\tif (!hasStartedGame) return;\r\n\t\t\r\n\t\tif (document.hidden) {\r\n\t\t\t// Tab becomes inactive\r\n\t\t\ttotalTimeOutsideTab = 0\r\n\t\t\tisTabActive = false;\r\n\t\t\tstartTimeOutsideTab = performance.now(); // Store the start time when the tab becomes inactive\r\n\t\t\t\r\n\t\t\t// save just in case\r\n\t\t\tGameState.save(false)\r\n\t\t}\r\n\t\r\n\t\telse {\r\n\t\t\tif (!isTabActive) {\r\n\t\t\t\tisTabActive = true\r\n\t\t\t\tGameState.save(false)\r\n\t\t\t\t\r\n\t\t\t\t// If the tab was previously inactive, calculate the time outside the tab and update the total time\r\n\t\t\t\tconst timeOutsideTab = performance.now() - startTimeOutsideTab;\r\n\t\t\t\ttotalTimeOutsideTab += timeOutsideTab;\r\n\t\t\t\tGameState.stats.totalTimePlayed += totalTimeOutsideTab / 1000\r\n\t\r\n\t\t\t\tif (!(GameState.scoreAllTime > 0)) return;\r\n\t\t\t\t// 30 being the seconds outside of screen to get the zzz screen\r\n\t\t\t\tif (totalTimeOutsideTab / 1000 > 30) {\r\n\t\t\t\t\t// false means it was out not idle\r\n\t\t\t\t\ttriggerZZZ(false)\r\n\t\t\t\t\t// false means it was out not idle\r\n\t\t\t\t\twelcomeBack(false)\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Listen for visibility change events\r\n\tdocument.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\t // #endregion\r\n\t\r\n\t// prevent dumb ctrl + s\r\n\tdocument.addEventListener(\"keydown\", (event) => {\r\n\t\tif (event.keyCode == 83 && (navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}, false);\r\n\t\r\n\tdocument.getElementById(\"kanva\").addEventListener(\"mouseout\", () => {\r\n\t\t// all of the objects that are draggable have this function\r\n\t\tif (curDraggin && curDraggin.releaseDrop) curDraggin.releaseDrop()\r\n\t}, false);\r\n\t\r\n\tdocument.getElementById(\"kanva\").addEventListener(\"fullscreenchange\", () => {\r\n\t\tROOT.trigger(\"checkFullscreen\")\r\n\t})\r\n\t\r\n\tlet introAnimations = {\r\n\t\tintro_hopes() {\r\n\t\t\t// field of hopes and dreams reference\r\n\t\t\t// when the ominus stuff ends do this\r\n\t\t\tlet reference = add([\r\n\t\t\t\ttext(\"\u266A ~ Clicker.wav\", {\r\n\t\t\t\t\talign: \"right\",\r\n\t\t\t\t\tfont: \"lambdao\",\r\n\t\t\t\t}),\r\n\t\t\t\topacity(),\r\n\t\t\t\tpos(width(), -2),\r\n\t\t\t])\r\n\t\t\ttween(reference.pos.x, 733, 0.32, (p) => reference.pos.x = p, easings.easeOutCubic)\r\n\t\t\ttween(0, 1, 0.32, (p) => reference.opacity = p, easings.easeOutCubic)\r\n\t\t\t\r\n\t\t\twait(4, () => {\r\n\t\t\t\ttween(reference.pos.x, width(), 0.32, (p) => reference.pos.x = p, easings.easeInCubic).onEnd(() => destroy(reference))\r\n\t\t\t\ttween(1, 0, 0.32, (p) => reference.opacity = p, easings.easeOutCubic)\r\n\t\t\t})\r\n\t\t},\r\n\t\tintro_playMusic() {\r\n\t\t\t// don't check anything for muted, it will play but no sound, that's good\r\n\t\t\tlet song = GameState.settings.music.favoriteIdx == null ? \"clicker.wav\" : Object.keys(songs)[GameState.settings.music.favoriteIdx]\r\n\t\t\tplayMusic(song)\r\n\t\t},\r\n\t\tintro_hexagon() {\r\n\t\t\ttween(vec2(center().x, center().y + 110), vec2(center().x, center().y + 55), 0.5, (p) => hexagon.pos = p, easings.easeOutQuad).onEnd(() => {\r\n\t\t\t\thexagon.trigger(\"startAnimEnd\")\r\n\t\t\t})\r\n\t\t\ttween(0.25, 1, 1, (p) => hexagon.opacity = p, easings.easeOutQuad)\r\n\t\t},\r\n\t\tintro_gameBg() {\r\n\t\t\ttween(BLACK, saveColorToColor(GameState.settings.bgColor), 0.5, (p) => gameBg.color = p, easings.easeOutQuad)\r\n\t\t\ttween(1, GameState.settings.bgColor.a, 0.5, (p) => gameBg.color.a = p, easings.easeOutQuad)\r\n\t\t\ttween(-5, 5, 0.5, (p) => gameBg.movAngle = p, easings.easeOutQuad)\r\n\t\t},\r\n\t\tintro_scoreCounter() {\r\n\t\t\t// scoreCounter\r\n\t\t\ttween(scoreText.scoreShown, GameState.score, 0.25, (p) => scoreText.scoreShown = p, easings.easeOutQuint)\r\n\t\t\ttween(vec2(center().x, 80), vec2(center().x, 60), 0.5, (p) => scoreText.pos = p, easings.easeOutQuad).onEnd(() => {\r\n\t\t\t\tscoreText.trigger(\"startAnimEnd\")\r\n\t\t\t})\r\n\t\t\ttween(0.25, 1, 0.5, (p) => scoreText.opacity = p, easings.easeOutQuad)\r\n\t\t},\r\n\t\tintro_spsText() {\r\n\t\t\ttween(0.25, 1, 0.5, (p) => spsText.opacity = p, easings.easeOutQuad)\r\n\t\t},\r\n\t\tintro_buildingsText() {\r\n\t\t\t// buildingsText\r\n\t\t\ttween(5, 10, 0.5, (p) => buildingsText.pos.x = p, easings.easeOutQuad)\r\n\t\t\ttween(0.25, 1, 0.5, (p) => buildingsText.opacity = p, easings.easeOutQuad)\r\n\t\t},\r\n\t\tintro_folderObj() {\r\n\t\t\t// folderObj\r\n\t\t\ttween(width() - 30, width() - 40, 0.5, (p) => folderObj.pos.x = p, easings.easeOutQuad)\r\n\t\t\ttween(0.25, 1, 0.5, (p) => folderObj.opacity = p, easings.easeOutQuad)\r\n\t\t}\r\n\t}\r\n\t\r\n\thexagonIntro = introAnimations.intro_hexagon\r\n\t\r\n\tif (GameState.settings.fullscreen == true) coolSetFullscreen(true)\r\n\tif (!isFullscreen()) GameState.settings.fullscreen = false\r\n\r\n\tif (hasStartedGame) {\r\n\t\tObject.values(introAnimations).filter(animation => !animation.name.includes(\"hopes\")).forEach((animation) => {\r\n\t\t\tanimation() // animations take 0.5 seconds\r\n\t\t})\r\n\t\r\n\t\twait(0.5, () => {\r\n\t\t\thexagon.interactable = true\r\n\t\t\tROOT.trigger(\"gamestart\")\r\n\t\t})\r\n\t}\r\n\t\r\n\telse {\r\n\t\tgameBg.color.a = 1\r\n\t\thexagon.interactable = false\r\n\t\tlet black = add([\r\n\t\t\trect(width(), height()),\r\n\t\t\tpos(center()),\r\n\t\t\tanchor(\"center\"),\r\n\t\t\tcolor(BLACK),\r\n\t\t\topacity(),\r\n\t\t\tlayer(\"mouse\"),\r\n\t\t\tz(mouse.z - 1)\r\n\t\t])\r\n\t\r\n\t\twait(2, () => {\r\n\t\t\tblack.destroy()\r\n\t\t\tlet ominus = playSfx(\"ominus\", { loop: true })\r\n\t\t\tplaySfx(\"biglight\")\r\n\t\t\thexagon.interactable = true\r\n\t\t\tfolderObj.interactable = false\r\n\t\t\tspsText.opacity = 0\r\n\t\t\tscoreText.opacity = 0\r\n\t\t\tbuildingsText.opacity = 0\r\n\t\t\tfolderObj.opacity = 0\r\n\t\r\n\t\t\thexagon.on(\"clickrelease\", () => {\r\n\t\t\t\tswitch (GameState.scoreAllTime) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tominus.stop()\r\n\t\t\t\t\t\tgameBg.color.a = 0.84\r\n\t\t\t\t\t\tintroAnimations.intro_scoreCounter()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\t\tcase 2: \r\n\t\t\t\t\t\tintroAnimations.intro_playMusic()\r\n\t\t\t\t\t\tintroAnimations.intro_hopes()\r\n\t\t\t\t\t\tintroAnimations.intro_spsText()\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 3: \r\n\t\t\t\t\t\tintroAnimations.intro_buildingsText()\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\tintroAnimations.intro_folderObj()\r\n\t\t\t\t\t\thasStartedGame = true;\r\n\t\t\t\t\t\tfolderObj.interactable = true\r\n\t\t\t\t\t\tROOT.trigger(\"gamestart\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\tROOT.on(\"buy\", (info) => {\r\n\t\tcheckForUnlockable()\r\n\t})\r\n\t\r\n\tif (DEBUG == true) debugFunctions()\r\n})", "import ng from \"newgrounds.js\"\r\nimport { gameBg } from \"../additives\"\r\nimport { enableNg } from \"../../main\"\r\n\r\nexport function focuscene() {\r\n\treturn scene(\"focuscene\", () => {\r\n\t\ttween(1, 0.95, 0.25, (p) => gameBg.color.a = p, easings.linear)\r\n\r\n\t\t// // if debug ignore the focus scene and just go to the game\r\n\t\t// if (DEBUG) {go(\"gamescene\")}\r\n\r\n\t\t// draw some stuff\r\n\t\tlet y_posToDrawText = center().y + 5\r\n\t\tlet opacityToDrawText = 0\r\n\t\ttween(y_posToDrawText, center().y, 0.25, (p) => y_posToDrawText = p, easings.easeOutCirc)\r\n\t\ttween(opacityToDrawText, 1, 0.25, (p) => opacityToDrawText = p, easings.easeOutCirc)\r\n\t\t\r\n\t\tonDraw(() => {\r\n\t\t\tdrawText({\r\n\t\t\t\ttext: \"Thanks for playing!\\nClick to focus the game\",\r\n\t\t\t\tsize: 60,\r\n\t\t\t\tpos: vec2(center().x, y_posToDrawText),\r\n\t\t\t\topacity: opacityToDrawText,\r\n\t\t\t\tcolor: WHITE,\r\n\t\t\t\tfont: \"lambda\",\r\n\t\t\t\talign: \"center\",\r\n\t\t\t\tangle: wave(-8, 8, time() * 0.9),\r\n\t\t\t\tanchor: \"center\",\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tonClick(async () => {\r\n\t\t\tgameBg.color.a = 1\r\n\t\t\t\r\n\t\t\tif (enableNg == true) {\r\n\t\t\t\tif (!await ng.getUsername()) go(\"ngScene\")\r\n\t\t\t\telse go(\"gamescene\")\r\n\t\t\t}\r\n\r\n\t\t\telse go(\"gamescene\")\r\n\t\t\t\r\n\t\t})\r\n\t})\t\r\n}", "import ng, { User } from \"newgrounds.js\"\r\nimport { newgroundsSceneContent } from \"../../newgrounds\"\r\n\r\nexport const ngScene = () => scene(\"ngScene\", () => {\r\n\tnewgroundsSceneContent()\r\n})", "import { DEBUG } from \"./main.js\"\r\nimport { introscene } from \"./game/scenes/introScene.ts\";\r\nimport { gamescene } from \"./game/gamescene.ts\";\r\nimport { focuscene } from \"./game/scenes/focuscene.ts\";\r\nimport { ngScene } from \"./game/scenes/ngScene.ts\";\r\n\r\nexport function drawSeriousLoadScreen(progress, op = 1) {\r\n\tfunction drawHexagon(opts = {\r\n\t\tpos: center(),\r\n\t\tscale: vec2(1),\r\n\t\topacity: 1,\r\n\t\tcolor: WHITE,\r\n\t}) {\r\n\t\tconst centerX = 0;\r\n\t\tconst centerY = 0;\r\n\t\tconst radius = 100;\r\n\t\r\n\t\tconst pts = [];\r\n\t\tconst colors = [];\r\n\t\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tconst angle = Math.PI / 3 * i;\r\n\t\t\tconst x = centerX + radius * Math.cos(angle);\r\n\t\t\tconst y = centerY + radius * Math.sin(angle);\r\n\t\t\tpts.push(vec2(x, y));\r\n\t\r\n\t\t\t// Generate colors for each vertex\r\n\t\t\tcolors.push(rgb(\r\n\t\t\t\tMath.floor(Math.random() * 128 + 128),\r\n\t\t\t\tMath.floor(Math.random() * 128 + 128),\r\n\t\t\t\tMath.floor(Math.random() * 128 + 128)\r\n\t\t\t));\r\n\t\t}\r\n\t\r\n\t\tdrawPolygon({\r\n\t\t\tpos: opts.pos,\r\n\t\t\topacity: opts.opacity,\r\n\t\t\tscale: opts.scale,\r\n\t\t\tcolor: opts.color,\r\n\t\t\tpts: pts,\r\n\t\t});\r\n\t}\r\n\t\r\n\tdrawRect({\r\n\t\twidth: width(),\r\n\t\theight: height(),\r\n\t\tcolor: BLACK,\r\n\t})\r\n\r\n\tdrawHexagon({\r\n\t\tpos: vec2(963, 495),\r\n\t\topacity: op,\r\n\t\tscale: vec2(wave(-0.5, 0.5, time() * 3), 0.5),\r\n\t\tcolor: WHITE,\r\n\t})\r\n\r\n\tdrawText({\r\n\t\ttext: `LOADING ${Math.round(progress * 100)}%`,\r\n\t\tsize: 40,\r\n\t\tcolor: WHITE,\r\n\t\tanchor: \"right\",\r\n\t\tpos: vec2(899, 525),\r\n\t\topacity: op,\r\n\t})\r\n\r\n\t// bar\r\n\tdrawRect({\r\n\t\twidth: map(progress, 0, 1, 5, width() - 5), \r\n\t\tradius: 2.5,\r\n\t\theight: 10,\r\n\t\tanchor: \"left\",\r\n\t\tpos: vec2(5, height() - 10),\r\n\t\topacity: op,\r\n\t})\r\n}\r\n\r\nfunction drawDevkyLoadScreen(progress) {\r\n\tdrawRect({\r\n\t\twidth: width(),\r\n\t\theight: height(),\r\n\t\tcolor: BLACK,\r\n\t})\r\n\t\r\n\tdrawSprite({\r\n\t\tsprite: \"devky\",\r\n\t\tanchor: \"topleft\",\r\n\t\tpos: vec2(),\r\n\t\twidth: map(progress, 0, 1, 0, width()),\r\n\t\theight: height(),\r\n\t})\r\n}\r\n\r\nfunction loadFonts() {\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\tloadFont(\"emulogic\", \"assets/emulogic.ttf\", {\r\n\t\toutline: 10,\r\n\t\tfilter: \"linear\"\r\n\t})\r\n\r\n\tloadFont(\"lambdao\", \"assets/Lambda-Regular.ttf\", {\r\n\t\toutline: 5,\r\n\t\tfilter: \"linear\"\r\n\t})\r\n\r\n\tloadFont(\"lambda\", \"assets/Lambda-Regular.ttf\", {\r\n\t\tfilter: \"linear\"\r\n\t})\r\n}\r\n\r\nfunction loadSprites() {\r\n\tloadBean()\r\n\r\n\t// fonts don't work with loadRoot, fuck\r\n\tloadFonts()\r\n\r\n\tloadRoot(\"assets/\")\r\n\tloadSprite(\"devky\", \"devky.png\")\r\n\tloadSprite(\"hexagon\", \"sprites/hexagon.png\")\r\n\t\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\t//#region SPRITES\r\n\t// cursors\r\n\tloadSprite(\"cursors\", \"sprites/cursors.png\", {\r\n\t\tsliceX: 5,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\tcursor: 0,\r\n\t\t\tpoint: 1,\r\n\t\t\tgrab: 2,\r\n\t\t\twait: 3,\r\n\t\t\tcheck: 4,\r\n\t\t},\r\n\t});\r\n\t\r\n\tloadSprite(\"part_star\", \"sprites/part_star.png\")\r\n\tloadSprite(\"osaka\", \"sprites/osaka.png\")\r\n\tloadSprite(\"floppy\", \"sprites/floppy.png\")\r\n\tloadSprite(\"panderito\", \"sprites/panderito.png\")\r\n\tloadSprite(\"smallpanderito\", \"sprites/smallpanderito.png\")\r\n\tloadSprite(\"folderObj\", \"sprites/folderObj.png\")\r\n\tloadSprite(\"speakers\", \"sprites/speakers.png\", {\r\n\t\tsliceX: 2,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\tmute: 0,\r\n\t\t\tsound: 1,\r\n\t\t}\r\n\t})\r\n\r\n\t//#region Windows\r\n\tloadSprite(\"dumbTestWin\", \"sprites/windows/dumbTestWin.png\")\r\n\tloadSpriteAtlas(\"sprites/windows/folderIcons.png\", {\r\n\t\t\"icon_about\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_medals\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 140,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_ascend\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 280,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_settings\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 420,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_leaderboards\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 560,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_music\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 700,\r\n\t\t\ty: 0,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_stats\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 0,\r\n\t\t\ty: 70,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_store\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 140,\r\n\t\t\ty: 70,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_bgColor\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 280,\r\n\t\t\ty: 70,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_hexColor\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 420,\r\n\t\t\ty: 70,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"icon_credits\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 2,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 560,\r\n\t\t\ty: 70,\r\n\t\t\tanims: {\r\n\t\t\t\tdefault: 0,\r\n\t\t\t\thover: 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"white_noise\": {\r\n\t\t\twidth: 140,\r\n\t\t\theight: 70,\r\n\t\t\tx: 770,\r\n\t\t\ty: 70,\r\n\t\t},\r\n\t\t\"icon_extra\": {\r\n\t\t\twidth: 280,\r\n\t\t\theight: 70,\r\n\t\t\tsliceX: 4,\r\n\t\t\tsliceY: 1,\r\n\t\t\tx: 0,\r\n\t\t\ty: 140,\r\n\t\t\tanims: {\r\n\t\t\t\topen_default: 0,\r\n\t\t\t\topen_hover: 1,\r\n\t\t\t\tshut_default: 2,\r\n\t\t\t\tshut_hover: 3,\r\n\t\t\t}\r\n\t\t},\r\n\t})\r\n\r\n\t//#region Store\r\n\tloadSprite(\"storeWin\", \"sprites/windows/storeWin/storeWin.png\")\r\n\tloadSprite(\"stroeWin\", \"sprites/windows/storeWin/stroeWin.png\")\r\n\tloadSpriteAtlas(\"sprites/windows/storeWin/storeElements.png\", {\r\n\t\t\"clickersElement\": {\r\n\t\t\tsliceX: 2,\r\n\t\t\tx: 0,\r\n\t\t\ty: 254,\r\n\t\t\twidth: 349*2,\r\n\t\t\theight: 127,\r\n\t\t\tanims: {\r\n\t\t\t\t\"up\": 0,\r\n\t\t\t\t\"down\": 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"cursorsElement\": {\r\n\t\t\tsliceX: 2,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: 349*2,\r\n\t\t\theight: 127,\r\n\t\t\tanims: {\r\n\t\t\t\t\"up\": 0,\r\n\t\t\t\t\"down\": 1,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"powerupsElement\": {\r\n\t\t\tsliceX: 3,\r\n\t\t\tx: 0,\r\n\t\t\ty: 127,\r\n\t\t\twidth: 349*3,\r\n\t\t\theight: 127,\r\n\t\t\tanims: {\r\n\t\t\t\t\"up\": 0,\r\n\t\t\t\t\"down\": 1,\r\n\t\t\t}\r\n\t\t},\r\n\t})\r\n\tloadSprite(\"chains\", \"sprites/windows/storeWin/chains.png\")\r\n\tloadSprite(\"smoke\", \"sprites/windows/storeWin/smoke.png\", {\r\n\t\tsliceX: 3,\r\n\t\tanims: {\r\n\t\t\t\"smoking\": {\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: 2,\r\n\t\t\t\tloop: true,\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tloadSprite(\"upgrade\", \"sprites/windows/storeWin/upgrade.png\")\r\n\tloadSprite(\"upgradelock\", \"sprites/windows/storeWin/upgradelock.png\")\r\n\r\n\tloadSprite(\"upgrades\", \"sprites/upgrades.png\", {\r\n\t\tsliceX: 18,\r\n\t\tsliceY: 3,\r\n\t\tanims: {\r\n\t\t\t\"k_0\": {\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: 2,\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\"k_1\": {\r\n\t\t\t\tfrom: 3,\r\n\t\t\t\tto: 5,\r\n\t\t\t},\r\n\t\t\t\"k_2\": {\r\n\t\t\t\tfrom: 6,\r\n\t\t\t\tto: 8,\r\n\t\t\t},\r\n\t\t\t\"k_3\": {\r\n\t\t\t\tfrom: 9,\r\n\t\t\t\tto: 11,\r\n\t\t\t},\r\n\t\t\t\"k_4\": {\r\n\t\t\t\tfrom: 12,\r\n\t\t\t\tto: 14,\r\n\t\t\t},\r\n\t\t\t\"k_5\": {\r\n\t\t\t\tfrom: 15,\r\n\t\t\t\tto: 17,\r\n\t\t\t},\r\n\t\t\t\"c_6\": {\r\n\t\t\t\tfrom: 18,\r\n\t\t\t\tto: 20,\r\n\t\t\t},\r\n\t\t\t\"c_7\": {\r\n\t\t\t\tfrom: 21,\r\n\t\t\t\tto: 23,\r\n\t\t\t},\r\n\t\t\t\"c_8\": {\r\n\t\t\t\tfrom: 24,\r\n\t\t\t\tto: 26,\r\n\t\t\t},\r\n\t\t\t\"c_9\": {\r\n\t\t\t\tfrom: 27,\r\n\t\t\t\tto: 29,\r\n\t\t\t},\r\n\t\t\t\"c_10\": {\r\n\t\t\t\tfrom: 30,\r\n\t\t\t\tto: 32,\r\n\t\t\t},\r\n\t\t\t\"c_11\": {\r\n\t\t\t\tfrom: 33,\r\n\t\t\t\tto: 35,\r\n\t\t\t},\r\n\t\t}\r\n\t})\r\n\r\n\tloadSprite(\"mupgrades\", \"sprites/mupgrades.png\", {\r\n\t\tsliceX: 12,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\t\"u_12\": {\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: 2,\r\n\t\t\t},\r\n\t\t\t\"u_13\": {\r\n\t\t\t\tfrom: 3,\r\n\t\t\t\tto: 5,\r\n\t\t\t},\r\n\t\t\t\"u_14\": {\r\n\t\t\t\tfrom: 6,\r\n\t\t\t\tto: 8,\r\n\t\t\t},\r\n\t\t\t\"u_15\": {\r\n\t\t\t\tfrom: 9,\r\n\t\t\t\tto: 11,\r\n\t\t\t},\r\n\t\t}\r\n\t})\r\n\t//#endregion Store\r\n\r\n\t//#region Music\r\n\tloadSprite(\"musicWin\", \"sprites/windows/musicWin/musicWin.png\")\r\n\tloadSpriteAtlas(\"sprites/windows/musicWin/discs.png\", {\r\n\t\t\"discs\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 50 * 6,\r\n\t\t\t\"height\": 50,\r\n\t\t\t\"sliceX\": 6,\r\n\t\t\t\"sliceY\": 1,\r\n\t\t\t\"anims\": {\r\n\t\t\t\t\"wav\": 0,\r\n\t\t\t\t\"ok\": 1,\r\n\t\t\t\t\"bb1\": 2,\r\n\t\t\t\t\"bb2\": 3,\r\n\t\t\t\t\"cat\": 4,\r\n\t\t\t\t\"bb3\": 5,\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\t//#endregion\r\n\r\n\t// #region Settings\r\n\tloadSpriteAtlas(\"sprites/windows/settingsWin/settingsVolbars.png\", {\r\n\t\t\"plusbutton\": {\r\n\t\t\t\"x\": 90,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 30,\r\n\t\t\t\"height\": 50,\r\n\t\t},\r\n\t\t\"minusbutton\": {\r\n\t\t\t\"x\": 60,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 30,\r\n\t\t\t\"height\": 50,\r\n\t\t},\r\n\t\t\"volbarbutton\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 60,\r\n\t\t\t\"height\": 50,\r\n\t\t\t\"sliceX\": 2,\r\n\t\t\t\"sliceY\": 1,\r\n\t\t\t\"anims\": {\r\n\t\t\t\ton: 1,\r\n\t\t\t\toff: 0,\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tloadSpriteAtlas(\"sprites/windows/settingsWin/settingsCheckbox.png\", {\r\n\t\t\"checkbox\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 45 * 2,\r\n\t\t\t\"height\": 45,\r\n\t\t\t\"sliceX\": 2,\r\n\t\t\t\"anims\": {\r\n\t\t\t\t\"on\": 1,\r\n\t\t\t\t\"off\": 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"tick\": {\r\n\t\t\t\"x\": 90,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 60,\r\n\t\t\t\"height\": 54,\r\n\t\t},\r\n\t})\r\n\t//#endregion Settings\r\n\r\n\tloadSprite(\"medals\", \"sprites/windows/medalsWin/medals.png\", {\r\n\t\tsliceX: 1,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\t\"unknown\": 0,\r\n\t\t}\r\n\t})\r\n\r\n\t//#region Other ones huh\r\n\tloadSprite(\"hexColorWin\", \"sprites/windows/colorWin/hexColorWin.png\")\r\n\tloadSprite(\"bgColorWin\", \"sprites/windows/colorWin/bgColorWin.png\")\r\n\r\n\tloadSprite(\"hexColorHandle\", \"sprites/windows/colorWin/hexColorHandle.png\")\r\n\tloadSprite(\"defaultButton\", \"sprites/windows/colorWin/defaultButton.png\")\r\n\tloadSprite(\"randomButton\", \"sprites/windows/colorWin/randomButton.png\")\r\n\t//#endregion\r\n\r\n\t//#endregion\r\n\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\t// #region clickerius hernelius  \r\n\tloadSpriteAtlas(\"sprites/ascendscene/hexAgony.png\", {\r\n\t\t\"mage_body\": {\r\n\t\t\t\"x\": 1000,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500, \r\n\t\t},\r\n\t\t\"mage_body_lightning\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 500,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500, \r\n\t\t},\r\n\t\t\"mage_botarm\": {\r\n\t\t\t\"x\": 500,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500,\r\n\t\t},\r\n\t\t\"mage_botarm_lightning\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500,\r\n\t\t},\r\n\t\t\"mage_toparm\": {\r\n\t\t\t\"x\": 1000,\r\n\t\t\t\"y\": 500,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500,\r\n\t\t},\r\n\t\t\"mage_toparm_lightning\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 1000,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500,\r\n\t\t},\r\n\t\t\"mage_cursors\": {\r\n\t\t\t\"x\": 500,\r\n\t\t\t\"y\": 500,\r\n\t\t\t\"width\": 500,\r\n\t\t\t\"height\": 500, \r\n\t\t},\r\n\t})\r\n\tloadSprite(\"mage_eye\", \"sprites/ascendscene/eye.png\", {\r\n\t\tsliceX: 4,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\t\"blink\": {\r\n\t\t\t\tfrom: 1,\r\n\t\t\t\tto: 3,\r\n\t\t\t},\r\n\t\t}\r\n\t})\r\n\tloadSprite(\"dialogue\", \"sprites/ascendscene/dialogue.png\")\r\n\tloadSprite(\"hoverDialogue\", \"sprites/ascendscene/emptyDialogue.png\")\r\n\tloadSprite(\"eye_translate\", \"sprites/ascendscene/translate.png\", {\r\n\t\tsliceX: 4,\r\n\t\tsliceY: 1,\r\n\t\tanims: {\r\n\t\t\t\"woke\": 3,\r\n\t\t\t\"dumb\": 1,\r\n\t\t}\r\n\t})\r\n\t\r\n\tloadSpriteAtlas(\"sprites/ascendscene/cards.png\", {\r\n\t\t// 22 between each card\r\n\t\t\"card_clickers\": {\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t\t\"card_cursors\": {\r\n\t\t\t\"x\": 133 * 1,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t\t\"card_powerups\": {\r\n\t\t\t\"x\": 133 * 2,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t\t\"card_crits\": {\r\n\t\t\t\"x\": 133 * 3,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t\t\"card_hexColor\": {\r\n\t\t\t\"x\": 133 * 4,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t\t\"card_bgColor\": {\r\n\t\t\t\"x\": 133 * 5,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"width\": 123,\r\n\t\t\t\"height\": 169,\r\n\t\t},\r\n\t})\r\n\tloadSprite(\"backcard\", \"sprites/ascendscene/backcard.png\")\r\n\tloadSprite(\"confirmAscension\", \"sprites/ascendscene/confirmAscension.png\")\r\n\r\n\tloadSprite(\"ascendWin\", \"sprites/windows/ascendWin/ascendWin.png\")\r\n\tloadSprite(\"winMage_body\", \"sprites/windows/ascendWin/winMage_body.png\")\r\n\tloadSprite(\"winMage_eye\", \"sprites/windows/ascendWin/winMage_eye.png\")\r\n\tloadSprite(\"winMage_cursors\", \"sprites/windows/ascendWin/winMage_cursors.png\")\r\n\tloadSprite(\"winMage_vignette\", \"sprites/windows/ascendWin/winMage_vignette.png\")\r\n\r\n\tloadSprite(\"gnome\", \"sprites/gnome.png\")\r\n\tloadSprite(\"pinch\", \"sprites/pinch.png\")\r\n\t//#endregion\r\n\t//#endregion SPRITES\r\n}\r\n\r\n// Sprite atlas were made with this awesome website\r\n// https://www.finalparsec.com/tools/sprite_sheet_maker\r\nexport function loadEverything() {\r\n\r\n\tloadSprites()\r\n\r\n\t// #region SOUNDS\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\t//#region hexagon-intro\r\n\tloadSound(\"biglight\", \"sounds/sfx/hexagon-intro/biglight.mp3\")\r\n\tloadSound(\"ominus\", \"sounds/sfx/hexagon-intro/ominus.mp3\")\r\n\r\n\tloadSound(\"clickPress\", \"sounds/sfx/hexagon-intro/clickPress.mp3\")\r\n\tloadSound(\"clickRelease\", \"sounds/sfx/hexagon-intro/clickRelease.mp3\")\r\n\tloadSound(\"powerup\", \"sounds/sfx/hexagon-intro/powerup.wav\")\r\n\tloadSound(\"fullcombo\", \"sounds/sfx/hexagon-intro/fullcombo.wav\")\r\n\tloadSound(\"combo\", \"sounds/sfx/hexagon-intro/combo.wav\")\r\n\tloadSound(\"punch\", \"sounds/sfx/hexagon-intro/punch.mp3\")\r\n\t//#endregion hexagon-intro\r\n\t\r\n\t//#region ascension\r\n\tloadSound(\"mage_e\", \"sounds/sfx/ascension/mage_e.mp3\")\r\n\tloadSound(\"onecard\", \"sounds/sfx/ascension/onecard.mp3\")\r\n\tloadSound(\"allcards\", \"sounds/sfx/ascension/allcards.mp3\")\r\n\t//#endregion ascension\r\n\r\n\t//#region ui\r\n\tloadSound(\"unlockachievement\", \"sounds/sfx/ui/unlockachievement.wav\")\r\n\tloadSound(\"gamesaved\", \"sounds/sfx/ui/gamesaved.wav\")\r\n\tloadSound(\"clickButton\", \"sounds/sfx/ui/clickButton.ogg\")\r\n\tloadSound(\"kaching\", \"sounds/sfx/ui/kaching.mp3\")\r\n\tloadSound(\"unhoverhex\", \"sounds/sfx/ui/unhoverhex.wav\")\r\n\tloadSound(\"volumeChange\", \"sounds/sfx/ui/volumeChange.mp3\")\r\n\t//#endregion ui\r\n\r\n\t//#region window\r\n\tloadSound(\"fold\", \"sounds/sfx/window/fold.wav\")\r\n\tloadSound(\"hoverMiniButton\", \"sounds/sfx/window/hoverMiniButton.wav\")\r\n\tloadSound(\"plap\", \"sounds/sfx/window/plap.mp3\")\r\n\tloadSound(\"plop\", \"sounds/sfx/window/plop.mp3\")\r\n\tloadSound(\"windowUnlocked\", \"sounds/sfx/window/windowUnlocked.wav\")\r\n\tloadSound(\"openWin\", \"sounds/sfx/window/openWin.wav\")\r\n\tloadSound(\"closeWin\", \"sounds/sfx/window/closeWin.wav\")\r\n\tloadSound(\"progress\", \"sounds/sfx/window/progress.wav\")\r\n\tloadSound(\"wrong\", \"sounds/sfx/window/wrong.wav\")\r\n\tloadSound(\"chainwrong\", \"sounds/sfx/window/chainwrong.mp3\")\r\n\tloadSound(\"chainbreak\", \"sounds/sfx/window/chainbreak.mp3\")\r\n\t//#endregion window\r\n\t\r\n\tloadSound(\"gnome\", \"sounds/sfx/gnome.ogg\")\r\n\r\n\t// music\r\n\t// don't load as music because then it won't play when the game loads\r\n\t// only done on debug to make the game load quicker since im not listening the music really\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\tloadSound(\"clicker.wav\", \"sounds/music/clicker.ogg\")\r\n\tloadSound(\"menu.wav\", \"sounds/music/menu.ogg\")\r\n\tloadSound(\"whatttt.wav\", \"sounds/music/whatttt.ogg\")\r\n\tloadSound(\"simple.wav\", \"sounds/music/simple.ogg\")\r\n\tloadSound(\"jazz.wav\", \"sounds/music/jazz.ogg\")\r\n\tloadSound(\"sweet.wav\", \"sounds/music/sweet.ogg\")\r\n\tloadSound(\"ok_instrumental\", \"sounds/music/ok_instrumental.ogg\")\r\n\tloadSound(\"magic\", \"sounds/music/magic.ogg\")\r\n\tloadSound(\"watchout\", \"sounds/music/watchout.ogg\")\r\n\tloadSound(\"catnip\", \"sounds/music/catnip.ogg\")\r\n\tloadSound(\"project_23\", \"sounds/music/project_23.wav\")\r\n\r\n\t//#endregion MUSIC\r\n\r\n\t// #region OTHER STUFF\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\t\r\n\t// made by MF\r\n\tloadShader(\"checkeredBg\", null, `\r\n\tuniform float u_time;\r\n\tuniform vec3 u_color1;\r\n\tuniform vec3 u_color2;\r\n\tuniform vec2 u_speed;\r\n\tuniform float u_angle;\r\n\tuniform float u_scale;\r\n\tuniform float u_aspect;\r\n\t\r\n\t#define PI 3.14159265359\r\n\tvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\r\n\t\tfloat angle = u_angle * PI / 180.0;\r\n\t\tmat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\r\n\t\tvec2 size = vec2(u_scale);\r\n\t\tvec2 p = (pos + vec2(u_time) * u_speed) * vec2(u_aspect, 1.0);\r\n\t\tp = p * rot;\r\n\t\tfloat total = floor(p.x * size.x) + floor(p.y * size.y);\r\n\t\tbool isEven = mod(total, 2.0) == 0.0;\r\n\t\tvec4 col1 = vec4(u_color1 / 255.0, 1.0);\r\n\t\tvec4 col2 = vec4(u_color2 / 255.0, 1.0);\r\n\t\treturn (isEven) ? col1 : col2;\r\n\t}\r\n\t`)\r\n\r\n\t// made by MF\r\n\tloadShader(\"saturate\", null, `\r\n\t\tuniform float saturation;\r\n\t\tuniform vec2 u_pos;\r\n\t\tuniform vec2 u_size;\r\n\t\tuniform vec3 saturationColor;\r\n\r\n\t\tvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\r\n\t\t\tvec4 c = def_frag();\r\n\t\t\tvec4 col = vec4(saturationColor/255.0, 1);\r\n\t\t\treturn (c + vec4(mix(vec3(0), vec3(1), saturation), 0)) * col;\r\n\t\t}\r\n\t`)\r\n\r\n\t// made by MF\r\n\tloadShader(\"grayscale\", null, `\r\n\t\tvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\r\n\t\t\tvec4 c = def_frag();\r\n\t\t\treturn vec4(vec3(dot(c.rgb, vec3(0.2125, 0.7154, 0.0721))), c.a);\r\n\t\t}\r\n\t`)\r\n\t\r\n\tif (!DEBUG) {load(new Promise<void>((res) => { setTimeout(() => { res() }, 5000) })) }\r\n\r\n\tngScene()\r\n\tfocuscene()\r\n\tintroscene()\r\n\tgamescene()\r\n\t//#endregion OTHER STUFF\r\n\r\n\t// 20% of getting devky's funny loading screen \r\n\tif (chance(0.2)) onLoading((progress) => drawDevkyLoadScreen(progress))\r\n\telse onLoading((progress) => drawSeriousLoadScreen(progress))\r\n}", "import kaplay from \"kaplay\";\r\nimport \"kaplay/global\";\r\n\r\nimport { drawSeriousLoadScreen, loadEverything } from \"./loader.ts\"\r\nimport { addBackground, addMouse, gameBg } from \"./game/additives.ts\";\r\nimport { volumeManager } from \"./sound.ts\";\r\nimport { newgroundsManagement } from \"./newgrounds.ts\";\r\nimport ng from \"newgrounds.js\";\r\n\r\nexport let DEBUG:boolean = true\r\nexport let enableNg:boolean = false\r\nexport const k = kaplay({\r\n\twidth: 1024,\r\n\theight: 576,\r\n\tfont: 'lambda',\r\n\tcanvas: document.querySelector(\"#kanva\"),\r\n\tlogMax: 10,\r\n\tdebugKey: \"f1\",\r\n\tdebug: DEBUG,\r\n\tloadingScreen: true,\r\n\tcrisp: false,\r\n\tbackgroundAudio: true,\r\n\tstretch: DEBUG == true ? false : true,\r\n\tletterbox: DEBUG == true ? false : true,\r\n});\r\n\r\nexport let ROOT = getTreeRoot()\r\nsetBackground(BLACK)\r\nsetCursor(\"none\")\r\n\r\n// the one on the bottom is the one that gets rendered first\r\nlayers([\r\n\t\"background\",\r\n\t\"hexagon\",\r\n\t\"ui\",\r\n\t\"windows\",\r\n\t\"powerups\",\r\n\t\"ascension\",\r\n\t\"logs\",\r\n\t\"sound\",\r\n\t\"mouse\",\r\n], \"background\")\r\n\r\nloadEverything()\r\nonLoad(() => {\r\n\tvolumeManager()\r\n\taddBackground()\r\n\tnewgroundsManagement()\r\n\r\n\tgameBg.movAngle = -5\r\n\tgameBg.color = BLACK\r\n\r\n\tif (!DEBUG) {\r\n\t\tlet opacity = 1\r\n\t\ttween(opacity, 0, 1, (p) => opacity = p, easings.linear)\r\n\t\r\n\t\tlet drawEvent = onDraw(() => {\r\n\t\t\tdrawSeriousLoadScreen(1, opacity)\r\n\t\t})\r\n\t\r\n\t\twait(1, () => {\r\n\t\t\tdrawEvent.cancel()\r\n\t\t\tROOT.trigger(\"rungame\")\r\n\t\t})\r\n\t}\r\n\t\r\n\telse {\r\n\t\t// consoleManager()\r\n\t\twait(0.05, () => {\r\n\t\t\tROOT.trigger(\"rungame\")\r\n\t\t})\r\n\t}\r\n\t\r\n\tROOT.on(\"rungame\", async () => {\r\n\t\taddMouse()\r\n\r\n\t\tif (!isFocused()) go(\"focuscene\")\r\n\t\telse {\r\n\t\t\tif (enableNg == true) {\r\n\t\t\t\tif (!await ng.getUsername()) go(\"ngScene\")\r\n\t\t\t\telse go(\"gamescene\")\r\n\t\t\t}\r\n\r\n\t\t\telse go(\"gamescene\")\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// @ts-ignore\r\nif (DEBUG == true) document.body.style.backgroundColor = \"rgb(1, 3, 13)\";\r\nelse document.body.style.backgroundColor = \"rgb(0, 0, 0)\";"],
  "mappings": "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AA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,WAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,YAAY,SAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,WAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,WAAY,SAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,WAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,SAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,WAAY,SAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,WAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,WAAY,UAAA,GACnE,EAAe,WAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAAe,YAAY,UAAA,GACnE,EAAe,YAAY,UAAA,GAAa,EAA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WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,WACpC,WAAY,WAAY,YAAY,WACpC,YAAY,WAAY,YAAY,YACpC,UAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,WAAY,WAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,UACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,WAAY,WAAY,YAAY,YACpC,WAAY,YAAY,UAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,WACpC,WAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,WAAY,WACpC,YAAY,WAAY,WAAY,WACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,UAAA,GACxC,CAAI,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,WAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,UAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,WACpC,WAAY,YAAY,WAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,UAAY,YAAY,UACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,WACpC,WAAY,UAAY,YAAY,YACpC,YAAY,WAAY,WAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,WAAY,YACpC,WAAY,WAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,WACpC,WAAY,WAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,SAAY,WACpC,WAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,WAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,UAAA,GACxC,CAAI,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,WAAY,UACpC,YAAY,UAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,UAAY,UACpC,YAAY,YAAY,YAAY,YACpC,WAAY,WAAY,YAAY,WACpC,YAAY,YAAY,UAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,WAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,WACpC,YAAY,WAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,WAAY,UACpC,WAAY,YAAY,WAAY,YACpC,YAAY,WAAY,UAAY,WACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,WAAY,YACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,UAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,WAAY,WAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,WAAY,YACpC,YAAY,WAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,WAAY,YAAY,YACpC,WAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,YAAY,YACpC,YAAY,YAAY,YAAY,WACpC,YAAY,YAAY,YAAY,YACpC,YAAY,WAAY,WAAY,WACpC,YAAY,YAAY,YAAY,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",
  "names": ["Color", "_Color", "__name", "r", "g", "b", "clamp", "arr", "hex", "result", "h", "s", "l", "hue2rgb", "p", "q", "t", "a", "other", "dest", "lerp", "max", "min", "d", "rgb", "args", "hsl2rgb", "deg2rad", "deg", "rad2deg", "rad", "val", "Vec2", "map", "v", "l1", "h1", "l2", "h2", "mapc", "_Vec2", "x", "y", "angle", "p2", "vec2", "len", "normal", "on", "cos", "sin", "n", "m", "Rect", "Quad", "_Quad", "w", "quad", "Mat2", "_Mat2", "c", "point", "det", "e1", "e2", "radians", "Mat3", "_Mat3", "m11", "m12", "m13", "m21", "m22", "m23", "m31", "m32", "m33", "oldA", "oldB", "Mat4", "_Mat4", "m0", "m1", "m4", "m5", "out", "i", "j", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "shuffle", "list", "chooseMultiple", "count", "choose", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "dir", "tmin", "tmax", "tx1", "tx2", "ty1", "ty2", "testRectPoint", "pt", "testRectCircle", "nx", "ny", "testRectPolygon", "testPolygonPolygon", "Polygon", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "dis", "t1", "t2", "testCirclePoint", "testLinePolygon", "testPolygonPoint", "p1", "Line", "testCircleCircle", "c1", "c2", "testCirclePolygon", "prev", "cur", "poly", "testEllipsePoint", "ellipse", "vx", "vy", "testEllipseCircle", "center", "cx", "cy", "Ellipse", "testEllipseLine", "line", "T", "Circle", "testEllipseEllipse", "ellipse1", "ellipse2", "A1", "A2", "x1", "y1", "x2", "y2", "theta1", "theta2", "M1", "M2", "M1inv", "M2inv", "B", "a11", "a12", "a13", "a21", "a22", "a23", "a31", "a32", "a33", "b11", "b12", "b13", "b21", "b22", "b23", "b31", "b32", "b33", "factor", "condition1", "condition2", "condition3", "testEllipseRect", "rect", "testEllipsePolygon", "testPointPoint", "testPointShape", "shape", "testLineShape", "testCircleShape", "testRectShape", "testPolygonShape", "polygon", "testEllipseShape", "raycastLine", "origin", "direction", "ab", "cd", "abxcd", "ac", "raycastRect", "raycastCircle", "disc", "raycastPolygon", "points", "minHit", "hit", "raycastEllipse", "TI", "Torigin", "Tdirection", "R", "fraction", "raycastGrid", "gridPosHit", "maxDistance", "pos", "gridPos", "step", "tDelta", "dist", "tMax", "steppedIndex", "Point", "_Point", "_Line", "_Rect", "width", "height", "dx", "dy", "_Circle", "radius", "tr", "_Ellipse", "rx", "ry", "degrees", "inv", "scale", "ux", "uy", "halfwidth", "halfheight", "segmentLineIntersection", "_Polygon", "pts", "total", "surfaceLine", "left", "right", "ap", "wasLeft", "isLeft", "intersection", "evaluateQuadratic", "pt1", "pt2", "pt3", "mt", "mt2", "evaluateQuadraticFirstDerivative", "evaluateQuadraticSecondDerivative", "evaluateBezier", "pt4", "t3", "mt3", "evaluateBezierFirstDerivative", "evaluateBezierSecondDerivative", "evaluateCatmullRom", "D", "evaluateCatmullRomFirstDerivative", "normalizedCurve", "curve", "curveLength", "curveLengthApproximation", "length", "entries", "detail", "llut", "tlut", "ddt", "pp", "e", "inverse", "index", "hermite", "m2", "cardinal", "tension", "hx", "hy", "catmullRom", "bezier", "kochanekBartels", "continuity", "bias", "hermiteFirstDerivative", "inZeroOneDomain", "approximately", "cubeRoot", "getCubicRoots", "pa", "pb", "pc", "pd", "a2", "p3", "q2", "discriminant", "mp3", "mp33", "cosphi", "phi", "root1", "root2", "root3", "u1", "sd", "cubicBezierYforX", "easingLinear", "keys", "easingCubicBezier", "easingSteps", "steps", "position", "xdist", "jumpStart", "jumpEnd", "ydist", "startY", "sat", "overlap", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "isOrientedCcw", "isOrientedCcwPolygon", "onSameSide", "px", "py", "pointInTriangle", "someInTriangle", "vertices", "isEar", "triangulate", "nextIdx", "prevIdx", "idx", "lm", "concaveVertices", "triangles", "nVertices", "current", "skipped", "next", "isConvex", "k", "winding", "arrayIsColor", "arrayIsVec2", "arrayIsNumber", "isClass", "obj", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getFileName", "deepEq", "k1", "k2", "Registry", "id", "KEventController", "_KEventController", "cancel", "events", "ev", "KEvent", "action", "res", "KEventHandler", "name", "getErrorMessage", "error", "toFixed", "overload2", "fn1", "fn2", "al", "GRAPHEMES", "runes", "string", "increment", "nextUnits", "isGrapheme", "isVariationSelector", "isDiacriticalMark", "isZeroWidthJoiner", "isFirstOfSurrogatePair", "currentPair", "nextPair", "isRegionalIndicator", "isSubdivisionFlag", "isSupplementarySpecialpurposePlane", "isFitzpatrickModifier", "betweenInclusive", "codePointFromSurrogatePair", "codePoint", "pair", "highOffset", "lowOffset", "value", "lower", "upper", "isEqOrIncludes", "listOrSmt", "el", "setHasOrIncludes", "set", "key", "mapAddOrPush", "uid", "gamepad_default", "getLastInputDeviceType", "appState", "parseButtonBindings", "btns", "keyboardBtns", "gamepadBtns", "mouseBtns", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "initAppState", "opt", "buttons", "initApp", "state", "fixedDt", "restDt", "isHidden", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "exitFullscreen", "setFullscreen", "isFullscreen", "quit", "ce", "canvasEvents", "de", "docEvents", "we", "winEvents", "resizeObserver", "run", "fixedUpdate", "update", "fixedAccumulatedDt", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "isButtonPressed", "isButtonDown", "isButtonReleased", "getButton", "setButton", "binding", "onResize", "onKeyDown", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onHide", "onShow", "onGamepadButtonPress", "onGamepadButtonDown", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "onButtonPress", "onButtonDown", "onButtonRelease", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "gamepadBtn", "browserGamepadBtn", "isGamepadButtonBind", "stickName", "cw", "ch", "ww", "wh", "rw", "rc", "ratio", "offset", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "box", "lastMousePos", "kbGamepad", "entry", "app", "debug", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "c3", "c4", "c5", "easings", "easings_default", "buildPath", "start", "goal", "cameFrom", "path", "node", "aStarSearch", "graph", "frontier", "costSoFar", "neighbours", "newCost", "NavEdge", "NavPolygon", "edges", "centerX", "centerY", "area", "edge", "cross", "NavMesh", "size", "pairEdge", "pairPolygon", "indexA", "indexB", "type", "startPolygon", "goalPolygon", "calcTransform", "screen2ndc", "getArcPts", "radiusX", "radiusY", "end", "nverts", "setBackground", "color", "alpha", "gfx", "getBackground", "pushTranslate", "pushTransform", "pushMatrix", "pushScale", "pushRotate", "popTransform", "flush", "getViewportScale", "contentToView", "windowToContent", "ASCII_CHARS", "DEF_ANCHOR", "DEF_FONT", "DBG_FONT", "DEF_FONT_FILTER", "VERTEX_FORMAT", "STRIDE", "sum", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "MULTI_WORD_RE", "DEF_OFFSCREEN_DIS", "DEF_JUMP_FORCE", "MAX_VEL", "TexPacker", "Texture", "context2D", "img", "tex", "curTex", "Asset", "_Asset", "loader", "err", "asset", "AssetBucket", "handle", "loaded", "fetchURL", "fetchJSON", "fetchText", "fetchArrayBuffer", "loadRoot", "assets", "loadJSON", "loadImg", "src", "resolve", "reject", "loadProgress", "buckets", "bucket", "getAsset", "load", "prom", "initAssets", "ggl", "fixURL", "SpriteData", "_SpriteData", "frames", "anims", "slice9", "slice", "resolveSprite", "spr", "getSprite", "loadSprite", "images", "createSpriteSheet", "qw", "qh", "canvas", "c2d", "merged", "loadBean", "bean_default", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "anim", "FontData", "face", "resolveFont", "globalOpt", "bfont", "getBitmapFont", "font", "getFont", "loadFont", "makeFont", "gw", "gh", "chars", "cols", "charMap", "loadBitmapFont", "loadPedit", "Shader", "vert", "frag", "attribs", "gl", "vertShader", "fragShader", "prog", "attrib", "vertError", "fragError", "uniform", "loc", "first", "makeShader", "vertSrc", "fragSrc", "vcode", "fcode", "fmt", "match", "msg", "ty", "resolveShader", "shader", "getShader", "loadShader", "loadShaderURL", "resolveUrl", "SoundData", "_SoundData", "buf", "audio", "resolveSound", "snd", "getSound", "loadSound", "loadMusic", "loadSpriteAtlas", "rej", "json", "atlas", "info", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "parsedTex", "parsedShader", "transform", "game", "vv", "drawPolygon", "npts", "drawLines", "drawEllipse", "polyOpt", "drawCircle", "drawLine", "_drawLinesBevel", "halfWidth", "isLoop", "segment", "vector", "cs", "sn", "nextSegment", "nextLength", "nextNormal", "lambda", "_drawLinesRound", "fixedPoint", "_drawLinesMiter", "drawCurve", "segments", "drawBezier", "_Texture", "glText", "filter", "wrap", "FrameBuffer", "frameBuffer", "renderBuffer", "bytesPerRow", "temp", "topOffset", "bottomOffset", "BatchRenderer", "format", "maxVertices", "maxIndices", "glVBuf", "primitive", "indexOffset", "genStack", "setFunc", "stack", "push", "pop", "initGfx", "opts", "gc", "onDestroy", "destroy", "extension", "curVertexFormat", "setVertexFormat", "stride", "pushTexture2D", "popTexture2D", "pushArrayBuffer", "popArrayBuffer", "pushElementArrayBuffer", "popElementArrayBuffer", "pushFramebuffer", "popFramebuffer", "pushRenderbuffer", "popRenderbuffer", "pushViewport", "popViewport", "pushProgram", "popProgram", "fontAtlases", "applyCharTransform", "fchar", "compileStyledText", "charStyleMap", "renderText", "styleStack", "lastIndex", "skipCount", "isClosing", "style", "_", "formatText", "fontName", "fontCacheC2d", "fontCacheCanvas", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "ox", "styles", "drawUVQuad", "opacity", "uvPadX", "uvPadY", "qx", "qy", "drawFormattedText", "ftext", "drawRect", "maxRadius", "drawUnscaled", "content", "ow", "oh", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawTriangle", "drawDebug", "inspecting", "tag", "flipped", "logs", "log", "drawFrame", "cam", "shake", "drawLoadScreen", "progress", "drawStenciled", "mask", "test", "drawMasked", "drawTexture", "fcols", "frows", "rows", "fracX", "fracY", "addQuad", "drawSprite", "drawSubtracted", "drawText", "initAppGfx", "gopt", "defShader", "pixelDensity", "gscale", "emptyTex", "bgColor", "bgAlpha", "renderer", "bgTex", "updateViewport", "canvasWidth", "canvasHeight", "rg", "sw", "sh", "isFixed", "getRenderProps", "drawon", "fadeIn", "finalOpacity", "done", "easeFunc", "outline", "join", "miterLimit", "cap", "Particle", "particles", "popt", "eopt", "emitterLifetime", "colors", "opacities", "quads", "scales", "lifetime", "spread", "speed", "angleRange", "angularVelocityRange", "accelerationRange", "dampingRange", "onEndEvents", "nextFree", "velocityAngle", "vel", "angularVelocity", "acceleration", "damping", "lt", "DT", "colorIndex", "opacityIndex", "quadIndex", "scaleIndex", "hw", "hh", "raycast", "exclude", "camPos", "camScale", "camRot", "camFlash", "flashColor", "fadeOutTime", "flash", "fade", "camTransform", "intensity", "toScreen", "toWorld", "addLevel", "level", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "tilePos", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "cost", "createEdgeMap", "createConnectivityMap", "traverse", "getNeighbours", "getCost", "neighbour", "getHeuristic", "diagonals", "top", "bottom", "levelComp", "comps", "hasPos", "hasTile", "comp", "tile", "cb", "levelOrigin", "tiles", "from", "to", "cameNode", "row", "event", "onFixedUpdate", "onUpdate", "onDraw", "onAdd", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "onLoading", "onError", "onLoad", "make", "compStates", "anonymousCompStates", "cleanups", "inputEvents", "onCurCompCleanup", "paused", "tags", "trigger", "children", "maskFunc", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "hierarchy", "include", "distanceOp", "sdist", "ctrl", "evs", "initGame", "setGravity", "getGravity", "setGravityDirection", "getGravityDirection", "initAudio", "masterNode", "burpSnd", "burp_default", "playMusic", "resumeAudioCtx", "play", "srcNode", "gainNode", "startTime", "stopTime", "started", "getTime", "cloneNode", "oldNode", "newNode", "burp", "volume", "initEvents", "fixedSize", "addKaboom", "kaboom", "stay", "sprite", "boomSprite", "anchor", "boom", "ka", "kaSprite", "timer", "layers", "layerNames", "defaultLayer", "defaultLayerIndex", "getTreeRoot", "scene", "def", "go", "onSceneLeave", "getSceneName", "spriteData", "curAnim", "curAnimDir", "spriteLoadedEvent", "calcTexScale", "setSpriteData", "iw", "ih", "w1", "w3", "w2", "h3", "uv", "prevAnim", "nt", "uvquad", "agent", "target", "navMapChangedEvent", "navigation", "patrol", "waypoints", "endBehavior", "finished", "nextWaypoint", "sentry", "candidates", "get", "checkFrequency", "directionVector", "fieldOfView", "fov", "halfAngle", "isObstacle", "getEdgeMask", "loopup", "edgeMask", "is", "AnimateChannel", "relative", "timing", "maxIndex", "serialization", "reflect", "AnimateChannelNumber", "easing", "AnimateChannelVec2", "followMotion", "prevKey", "nextIndex", "nextKey", "prevPrevKey", "nextNextKey", "AnimateChannelColor", "animate", "gopts", "channels", "isFinished", "allFinished", "localFinished", "options", "serializeAnimation", "health", "hp", "maxHP", "origHP", "lifespan", "named", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "scenesToStay", "textInput", "hasFocus", "maxInputLength", "charEv", "backEv", "character", "actions", "curTimer", "newAction", "duration", "setValue", "curTime", "areaCount", "usesArea", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "body", "curPlatform", "lastPlatformPos", "willFall", "acc", "prevPhysicsPos", "nextPhysicsPos", "prevDrawPos", "rcol", "tmass", "col2", "addGravity", "prevVel", "maxVel", "nextVel", "impulse", "force", "doubleJump", "numJumps", "jumpsLeft", "surfaceEffector", "currentVel", "areaEffector", "pointEffector", "distance", "forceScale", "constantForce", "buoyancyEffector", "submergedArea", "displacedMass", "buoyancyForce", "velocity", "dragMagnitude", "dragForce", "follow", "layer", "_layerIndex", "move", "offscreen", "isOut", "screenRect", "diff", "rotate", "_scale", "z", "VERSION", "kaplay", "root", "canvasContext", "makeCanvas", "fb", "frameStart", "usePostEffect", "frameEnd", "debugPaused", "updateFrame", "getData", "setData", "plug", "plugin", "funcs", "funcsObj", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "add", "readd", "destroyAll", "wait", "loop", "query", "tween", "ka_default", "boom_default", "fixedUpdateFrame", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "handleErr", "errorMessage", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "plugins", "src_default", "t", "volume", "i", "b", "index", "i", "initialPos", "spacing", "i", "t", "time", "be", "L", "ye", "t", "C", "_e", "b", "z", "H", "w", "i", "P", "ge", "me", "Se", "He", "ze", "qe", "Re", "W", "O", "_", "k", "oe", "We", "Ie", "je", "Ne", "$", "J", "ne", "ve", "Xr", "de", "le", "Kr", "he", "Gr", "Zr", "Be", "Jr", "Ce", "Qr", "pe", "Yr", "$r", "Ee", "Mr", "Ae", "Fe", "De", "Le", "Oe", "Ke", "Xe", "Ge", "Ze", "Qe", "Ye", "Ve", "$e", "er", "Me", "xr", "tr", "cr", "fr", "dr", "vr", "hr", "lr", "Br", "ur", "pr", "Cr", "Ar", "Er", "Dr", "Fr", "br", "ee", "_r", "gr", "re", "yr", "kr", "xe", "mr", "Sr", "wr", "qr", "Hr", "fe", "zr", "Rr", "Wr", "jr", "Ir", "Nr", "Lr", "Ur", "Or", "Tr", "ce", "window", "sprite", "chance", "initialPos", "pt", "index", "bg", "width", "height", "time", "timer", "speaker", "window", "windowKey", "window", "timer", "percentage", "i", "otherButtonsBg", "body", "text", "windowKey", "openWindow", "selection", "i", "windowKey", "window", "extraMinibutton", "text", "text", "i", "b", "color", "i", "window", "windowKey", "openWindow", "window", "openWindow", "windowKey", "b", "toastQueue", "logs", "i", "i", "spacing", "time", "percentage", "i", "insertAtStart", "color", "initialPos", "text", "debugTexts", "openWindow", "insertAtStart", "i", "color", "saveColor", "b", "percentage", "mouse", "body", "i", "t", "i", "opacity"]
}
